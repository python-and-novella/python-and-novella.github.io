"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[50357],{18474:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var o=t(74848),i=t(28453);const s={slug:"pyproject-toml-support-for-flet-build-command",title:"pyproject.toml support for flet build command",author:"Feodor Fitsner",author_title:"Flet founder and developer",author_url:"https://github.com/FeodorFitsner",author_image_url:"https://avatars0.githubusercontent.com/u/5041459?s=400&v=4"},l=void 0,r={permalink:"/docs/flet-docs/blog/pyproject-toml-support-for-flet-build-command",editUrl:"https://github.com/flet-dev/website/edit/main/blog/2024-10-15-pyproject-toml-support-for-flet-build-command.md",source:"@site/blog/2024-10-15-pyproject-toml-support-for-flet-build-command.md",title:"pyproject.toml support for flet build command",description:"The number of options for flet build command grew substantially over the time and it's been inconvenient to carry all these settings in a command line.",date:"2024-10-15T00:00:00.000Z",tags:[],readingTime:4.76,hasTruncateMarker:!1,authors:[{name:"Feodor Fitsner",title:"Flet founder and developer",url:"https://github.com/FeodorFitsner",imageURL:"https://avatars0.githubusercontent.com/u/5041459?s=400&v=4"}],frontMatter:{slug:"pyproject-toml-support-for-flet-build-command",title:"pyproject.toml support for flet build command",author:"Feodor Fitsner",author_title:"Flet founder and developer",author_url:"https://github.com/FeodorFitsner",author_image_url:"https://avatars0.githubusercontent.com/u/5041459?s=400&v=4"},unlisted:!1,prevItem:{title:"Flet v0.25.0 Release Announcement",permalink:"/docs/flet-docs/blog/flet-v-0-25-release-announcement"},nextItem:{title:"Flet new packaging pre-release",permalink:"/docs/flet-docs/blog/flet-new-packaging-pre-release"}},d={authorsImageUrls:[void 0]},a=[{value:"Installing pre-release",id:"installing-pre-release",level:2},{value:"Building the app with pre-release",id:"building-the-app-with-pre-release",level:2},{value:"Quick start",id:"quick-start",level:2},{value:"Overriding config with CLI options",id:"overriding-config-with-cli-options",level:3},{value:"Project dependencies",id:"project-dependencies",level:2},{value:"Product information",id:"product-information",level:2},{value:"App package contents",id:"app-package-contents",level:2},{value:"Splash",id:"splash",level:2},{value:"Permissions",id:"permissions",level:2},{value:"Deep linking",id:"deep-linking",level:2},{value:"Android settings",id:"android-settings",level:3},{value:"iOS settings",id:"ios-settings",level:3},{value:"macOS settings",id:"macos-settings",level:3},{value:"Web settings",id:"web-settings",level:3},{value:"Flutter settings",id:"flutter-settings",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Extra build args",id:"extra-build-args",level:3},{value:"Extra <code>pubspec.yaml</code> settings",id:"extra-pubspecyaml-settings",level:3},{value:"Custom template",id:"custom-template",level:2}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The number of options for ",(0,o.jsx)(n.code,{children:"flet build"})," command grew substantially over the time and it's been inconvenient to carry all these settings in a command line."]}),"\n",(0,o.jsxs)(n.p,{children:["Today, we are excited to announce another Flet pre-release which now allows configuring app build settings in ",(0,o.jsx)(n.code,{children:"pyproject.toml"}),"!"]}),"\n",(0,o.jsx)(n.h2,{id:"installing-pre-release",children:"Installing pre-release"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pip install flet==0.25.0.dev3526\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"For testing purposes we suggest installing Flet pre-release in a dedicated Python virtual environment."})}),"\n",(0,o.jsx)(n.h2,{id:"building-the-app-with-pre-release",children:"Building the app with pre-release"}),"\n",(0,o.jsxs)(n.p,{children:["To build your app with ",(0,o.jsx)(n.code,{children:"flet build"})," command and pre-release version of Flet make sure your ",(0,o.jsx)(n.code,{children:"requirements.txt"})," either contains exact version specifier:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"flet==0.25.0.dev3526\n"})}),"\n",(0,o.jsxs)(n.p,{children:["or ",(0,o.jsx)(n.code,{children:"--pre"})," flag before ",(0,o.jsx)(n.code,{children:"flet"})," dependency:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"--pre\nflet\n"})}),"\n",(0,o.jsx)(n.h2,{id:"quick-start",children:"Quick start"}),"\n",(0,o.jsxs)(n.p,{children:["Create the following minimal ",(0,o.jsx)(n.code,{children:"pyproject.toml"})," file in the root of your Flet app or run ",(0,o.jsx)(n.code,{children:"flet create"})," to create a new app from template:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[project]\nname = "my_app"\nversion = "1.0.0"\ndescription = "My first Flet project"\nauthors = [\n  {name = "John Smith", email = "john@email.com"}\n]\ndependencies = ["flet==0.25.0.dev3526"]\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["With ",(0,o.jsx)(n.code,{children:"pyproject.toml"}),", you no longer need ",(0,o.jsx)(n.code,{children:"requirements.txt"}),". However, if a ",(0,o.jsx)(n.code,{children:"requirements.txt"})," file exists in the app's directory, the flet build command will prioritize reading dependencies from it instead of those listed in ",(0,o.jsx)(n.code,{children:"pyproject.toml"}),"."]})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"[project]"})," is the standard required section of ",(0,o.jsx)(n.code,{children:"project.toml"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Flet also supports ",(0,o.jsx)(n.code,{children:"[tool.poetry]"})," section created by Poetry which contains project settings."]})}),"\n",(0,o.jsxs)(n.p,{children:["A minimal ",(0,o.jsx)(n.code,{children:"pyproject.toml"})," for Poetry, which is also supported by ",(0,o.jsx)(n.code,{children:"flet build"})," command, is the following:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.poetry]\nname = "my_app"\nversion = "1.0.0"\ndescription = "My first Flet project"\nauthors = ["John Smith <john@email.com>"]\n\n[tool.poetry.dependencies]\npython = "^3.10"\nflet = "0.25.0.dev3526"\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"project.name"})," (or ",(0,o.jsx)(n.code,{children:"tool.poetry.name"}),") corresponds to ",(0,o.jsx)(n.code,{children:"--project"})," option of ",(0,o.jsx)(n.code,{children:"flet build"})," command and it will be the name of app bundle or executable. The value of ",(0,o.jsx)(n.code,{children:"project.name"}),' will be "slugified" where all non-alphanumeric values are replaced with dashes ',(0,o.jsx)(n.code,{children:"-"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"project.version"})," (or ",(0,o.jsx)(n.code,{children:"tool.poetry.version"}),") corresponds to ",(0,o.jsx)(n.code,{children:"--build-version"}),' option and it is a value in "x.y.z" string used as the version number shown to users.']}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"project.description"})," (or ",(0,o.jsx)(n.code,{children:"tool.poetry.description"}),") corresponds to ",(0,o.jsx)(n.code,{children:"--description"})," option which is the description to use for executable or bundle."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"project.authors"})," and ",(0,o.jsx)(n.code,{children:"tool.poetry.authors"})," are not used by ",(0,o.jsx)(n.code,{children:"flet build"}),", but required by a standard and other tools."]})}),"\n",(0,o.jsx)(n.h3,{id:"overriding-config-with-cli-options",children:"Overriding config with CLI options"}),"\n",(0,o.jsxs)(n.p,{children:["All settings in ",(0,o.jsx)(n.code,{children:"pyproject.toml"})," have corresponding ",(0,o.jsx)(n.code,{children:"flet build"})," CLI options. If you run the flet build command and specify options that are already configured in ",(0,o.jsx)(n.code,{children:"pyproject.toml"}),", the CLI option values will override those from the configuration file."]}),"\n",(0,o.jsx)(n.h2,{id:"project-dependencies",children:"Project dependencies"}),"\n",(0,o.jsxs)(n.p,{children:["List project dependencies in ",(0,o.jsx)(n.code,{children:"project.dependencies"})," section. The value is an array with pip-like requirement specifiers:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'[project]\ndependencies = [\n  "flet==0.25.0.dev3526",\n  "numpy"\n]\n'})}),"\n",(0,o.jsx)(n.h2,{id:"product-information",children:"Product information"}),"\n",(0,o.jsxs)(n.p,{children:["All Flet specific settings should be put into ",(0,o.jsx)(n.code,{children:"[tool.flet]"})," section and sub-sections below it."]}),"\n",(0,o.jsxs)(n.p,{children:["Product information settings complement the ones in ",(0,o.jsx)(n.code,{children:"[project]"})," section and allows configuring app bundle identifier and product display name."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet]\norg = "com.mycompany" # --org\nproduct = "Product name" # --product\ncompany = "My Company" # --company\ncopyright = "Copyright (C) 2024 by MyCompany" # --copyright\nbuild_number = 1 # --build-number\n'})}),"\n",(0,o.jsx)(n.h2,{id:"app-package-contents",children:"App package contents"}),"\n",(0,o.jsx)(n.p,{children:"The following settings control the contents of Python app archive and compilation of app/packages sources."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet]\napp.module = "main" # --module-name\napp.path = "src" # path to Python app relative to `pyproject.toml`\napp.exclude = ["assets"] # --exclude\n\ncompile.app = false # --compile-app\ncompile.packages = false # --compile-packages\ncompile.cleanup = false # --cleanup-on-compile\n'})}),"\n",(0,o.jsx)(n.p,{children:"They could be alternatively written under their own sub-sections as:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.app]\nmodule = "main"\npath = "src"\nexclude = ["assets"]\n\n[tool.flet.compile]\napp = false\npackages = false\ncleanup = false\n'})}),"\n",(0,o.jsx)(n.h2,{id:"splash",children:"Splash"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.splash]\ncolor = "" # --splash-color\ndark_color = "" # --splash-dark-color\nweb = false # --no-web-splash\nios = false # --no-ios-splash\nandroid = false # --no-android-splash\n'})}),"\n",(0,o.jsx)(n.h2,{id:"permissions",children:"Permissions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet]\npermissions = ["camera", "microphone"] # --permissions\n'})}),"\n",(0,o.jsx)(n.h2,{id:"deep-linking",children:"Deep linking"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.deep_linking]\nscheme = "https" # --deep-linking-scheme\nhost = "mydomain.com" # --deep-linking-host\n'})}),"\n",(0,o.jsx)(n.h3,{id:"android-settings",children:"Android settings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.android]\nadaptive_icon_background = "" # --android-adaptive-icon-background\nsplit_per_abi = false # --split-per-abi\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Permissions (notice quotes ",(0,o.jsx)(n.code,{children:'"'})," around key names):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.android.permission] # --android-permissions\n"android.permission.CAMERA" = true\n"android.permission.CAMERA" = true\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Features (notice quotes ",(0,o.jsx)(n.code,{children:'"'})," around key names):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.android.feature] # --android-features\n"android.hardware.camera" = false\n'})}),"\n",(0,o.jsx)(n.p,{children:"Android-specific deep-linking:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.android.deep_linking]\nscheme = "https" # --deep-linking-scheme\nhost = "mydomain.com" # --deep-linking-host\n'})}),"\n",(0,o.jsx)(n.p,{children:"Android bundle signing options:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.android.signing]\n# store and key passwords can be passed with `--android-signing-key-store-password`\n# and `--android-signing-key-password` options or\n# FLET_ANDROID_SIGNING_KEY_STORE_PASSWORD\n# and FLET_ANDROID_SIGNING_KEY_PASSWORD environment variables.\nkey_store = "path/to/store.jks" # --android-signing-key-store\nkey_alias = "upload"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"ios-settings",children:"iOS settings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.ios]\nteam = "team_id" # --team\n\n[tool.flet.ios.info] # --info-plist\nNSCameraUsageDescription = "This app uses the camera to ..."\n\n[tool.flet.ios.info.deep_linking]\nscheme = "https"\nhost = "mydomain.com"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"macos-settings",children:"macOS settings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.macos]\nentitlement."com.apple.security.personal-information.photos-library" = true\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet]\nbuild_arch = "arm64" # --arch - if arch is not specified Flet will build universal package for both arm64 and x86_64 archs\n'})}),"\n",(0,o.jsx)(n.h3,{id:"web-settings",children:"Web settings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.web]\nbase_url = "/" # --base-url\nrenderer = "canvaskit" # --web-renderer\nuse_color_emoji = false # --use-color-emoji\nroute_url_strategy = "path" # --route-url-strategy\n'})}),"\n",(0,o.jsx)(n.h2,{id:"flutter-settings",children:"Flutter settings"}),"\n",(0,o.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'flutter.dependencies = ["flet_video", "flet_audio"] # --include-packages\n'})}),"\n",(0,o.jsx)(n.p,{children:"or with alternative syntax with versions:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.flutter.dependencies]\nflet_video = "1.0.0"\nflet_audio = "2.0.0"\n'})}),"\n",(0,o.jsx)(n.p,{children:"or with path to the package on your disk:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.flutter.dependencies.my_package]\npath = "/path/to/my_package"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"extra-build-args",children:"Extra build args"}),"\n",(0,o.jsx)(n.p,{children:'flutter.build_args = ["--some-flutter-arg"] # --flutter-build-args'}),"\n",(0,o.jsxs)(n.h3,{id:"extra-pubspecyaml-settings",children:["Extra ",(0,o.jsx)(n.code,{children:"pubspec.yaml"})," settings"]}),"\n",(0,o.jsxs)(n.p,{children:["Allows injecting arbitrary content into resulting ",(0,o.jsx)(n.code,{children:"pubspec.yaml"}),", for example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.flutter.pubspec.dependency_overrides]\nweb = "1.0.0"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"custom-template",children:"Custom template"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[tool.flet.template]\npath = "gh:some-github/repo" # --template\ndir = "" # --template-dir\nref = "" # --template-ref\n'})}),"\n",(0,o.jsx)(n.p,{children:"That's it! Upgrade to Flet 0.25.0.dev3526, give this new feature and try and let us know what you think!"}),"\n",(0,o.jsx)(n.p,{children:"Cheers!"})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var o=t(96540);const i={},s=o.createContext(i);function l(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);