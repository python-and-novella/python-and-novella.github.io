"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[92569],{99561:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>t});var c=i(74848),o=i(28453);const s={title:"SnackBar",sidebar_label:"SnackBar"},d=void 0,r={id:"controls/snackbar",title:"SnackBar",description:"A lightweight message with an optional action which briefly displays at the bottom of the screen.",source:"@site/docs/controls/snackbar.md",sourceDirName:"controls",slug:"/controls/snackbar",permalink:"/docs/flet-docs/docs/controls/snackbar",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/snackbar.md",tags:[],version:"current",frontMatter:{title:"SnackBar",sidebar_label:"SnackBar"},sidebar:"docs",previous:{title:"DatePicker",permalink:"/docs/flet-docs/docs/controls/datepicker"},next:{title:"TimePicker",permalink:"/docs/flet-docs/docs/controls/timepicker"}},l={},t=[{value:"Examples",id:"examples",level:2},{value:"SnackBar with dynamic message",id:"snackbar-with-dynamic-message",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>action</code>",id:"action",level:3},{value:"<code>action_color</code>",id:"action_color",level:3},{value:"<code>action_overflow_threshold</code>",id:"action_overflow_threshold",level:3},{value:"<code>behavior</code>",id:"behavior",level:3},{value:"<code>bgcolor</code>",id:"bgcolor",level:3},{value:"<code>clip_behavior</code>",id:"clip_behavior",level:3},{value:"<code>close_icon_color</code>",id:"close_icon_color",level:3},{value:"<code>content</code>",id:"content",level:3},{value:"<code>dismiss_direction</code>",id:"dismiss_direction",level:3},{value:"<code>duration</code>",id:"duration",level:3},{value:"<code>elevation</code>",id:"elevation",level:3},{value:"<code>margin</code>",id:"margin",level:3},{value:"<code>open</code>",id:"open",level:3},{value:"<code>padding</code>",id:"padding",level:3},{value:"<code>shape</code>",id:"shape",level:3},{value:"<code>show_close_icon</code>",id:"show_close_icon",level:3},{value:"<code>width</code>",id:"width",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_action</code>",id:"on_action",level:3},{value:"<code>on_visible</code>",id:"on_visible",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:"A lightweight message with an optional action which briefly displays at the bottom of the screen."}),"\n",(0,c.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"https://flet-controls-gallery.fly.dev/dialogs/snackbar",children:"Live example"})}),"\n",(0,c.jsx)(n.h3,{id:"snackbar-with-dynamic-message",children:"SnackBar with dynamic message"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",metastring:"reference",children:"https://github.com/flet-dev/examples/blob/main/python/controls/snack-bar/simple-snack.py\n"})}),"\n",(0,c.jsx)("img",{src:"/img/docs/controls/snackbar/snackbar-with-custom-content.gif",className:"screenshot-40"}),"\n",(0,c.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,c.jsx)(n.h3,{id:"action",children:(0,c.jsx)(n.code,{children:"action"})}),"\n",(0,c.jsx)(n.p,{children:"An optional action that the user can take based on the snack bar."}),"\n",(0,c.jsx)(n.p,{children:"For example, the snack bar might let the user undo the operation that prompted the snackbar. Snack bars can have at most one action."}),"\n",(0,c.jsx)(n.p,{children:'The action should not be "dismiss" or "cancel".'}),"\n",(0,c.jsx)(n.h3,{id:"action_color",children:(0,c.jsx)(n.code,{children:"action_color"})}),"\n",(0,c.jsxs)(n.p,{children:["The foreground ",(0,c.jsx)(n.a,{href:"/docs/reference/colors",children:"color"})," of action button."]}),"\n",(0,c.jsx)(n.h3,{id:"action_overflow_threshold",children:(0,c.jsx)(n.code,{children:"action_overflow_threshold"})}),"\n",(0,c.jsxs)(n.p,{children:["The percentage (between ",(0,c.jsx)(n.code,{children:"0.0"})," and ",(0,c.jsx)(n.code,{children:"1.0"}),") threshold for ",(0,c.jsx)(n.code,{children:"action"}),"'s width before it overflows to a new line."]}),"\n",(0,c.jsxs)(n.p,{children:["If the width of the snackbar's ",(0,c.jsx)(n.code,{children:"content"})," is greater than this percentage of the width of the snackbar minus the width of\nits ",(0,c.jsx)(n.code,{children:"action"}),", then the ",(0,c.jsx)(n.code,{children:"action"})," will appear below the ",(0,c.jsx)(n.code,{children:"content"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:["At a value of ",(0,c.jsx)(n.code,{children:"0.0"}),", the ",(0,c.jsx)(n.code,{children:"action"})," will not overflow to a new line."]}),"\n",(0,c.jsxs)(n.p,{children:["Defaults to ",(0,c.jsx)(n.code,{children:"0.25"}),"."]}),"\n",(0,c.jsx)(n.h3,{id:"behavior",children:(0,c.jsx)(n.code,{children:"behavior"})}),"\n",(0,c.jsx)(n.p,{children:"This defines the behavior and location of the snack bar."}),"\n",(0,c.jsxs)(n.p,{children:["Defines where a SnackBar should appear within a page and how its location should be adjusted when the page also includes a ",(0,c.jsx)(n.code,{children:"FloatingActionButton"})," or a ",(0,c.jsx)(n.code,{children:"NavigationBar"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:["Value is of type ",(0,c.jsx)(n.a,{href:"/docs/reference/types/snackbarbehavior",children:(0,c.jsx)(n.code,{children:"SnackBarBehavior"})})," and defaults to ",(0,c.jsx)(n.code,{children:"SnackBarBehavior.FIXED"}),"."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Note:"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["If ",(0,c.jsx)(n.code,{children:"behavior=SnackBarBehavior.FLOATING"}),", the length of the bar is defined by either ",(0,c.jsx)(n.code,{children:"width"})," or ",(0,c.jsx)(n.code,{children:"margin"}),", and if both\nare specified, ",(0,c.jsx)(n.code,{children:"width"})," takes precedence over ",(0,c.jsx)(n.code,{children:"margin"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"width"})," and ",(0,c.jsx)(n.code,{children:"margin"})," are ignored if ",(0,c.jsx)(n.code,{children:"behavior!=SnackBarBehavior.FLOATING"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"bgcolor",children:(0,c.jsx)(n.code,{children:"bgcolor"})}),"\n",(0,c.jsxs)(n.p,{children:["SnackBar background ",(0,c.jsx)(n.a,{href:"/docs/reference/colors",children:"color"}),"."]}),"\n",(0,c.jsx)(n.h3,{id:"clip_behavior",children:(0,c.jsx)(n.code,{children:"clip_behavior"})}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.code,{children:"content"})," will be clipped (or not) according to this option."]}),"\n",(0,c.jsxs)(n.p,{children:["Value is of type ",(0,c.jsx)(n.a,{href:"/docs/reference/types/clipbehavior",children:(0,c.jsx)(n.code,{children:"ClipBehavior"})})," and defaults to ",(0,c.jsx)(n.code,{children:"ClipBehavior.HARD_EDGE"}),"."]}),"\n",(0,c.jsx)(n.h3,{id:"close_icon_color",children:(0,c.jsx)(n.code,{children:"close_icon_color"})}),"\n",(0,c.jsxs)(n.p,{children:["An optional color for the close icon, if ",(0,c.jsx)(n.code,{children:"show_close_icon=True"}),"."]}),"\n",(0,c.jsx)(n.h3,{id:"content",children:(0,c.jsx)(n.code,{children:"content"})}),"\n",(0,c.jsx)(n.p,{children:"The primary content of the snack bar."}),"\n",(0,c.jsxs)(n.p,{children:["Typically a ",(0,c.jsx)(n.a,{href:"/docs/controls/text",children:(0,c.jsx)(n.code,{children:"Text"})})," control."]}),"\n",(0,c.jsx)(n.h3,{id:"dismiss_direction",children:(0,c.jsx)(n.code,{children:"dismiss_direction"})}),"\n",(0,c.jsx)(n.p,{children:"The direction in which the SnackBar can be dismissed."}),"\n",(0,c.jsxs)(n.p,{children:["Value is of type ",(0,c.jsx)(n.a,{href:"/docs/reference/types/dismissdirection",children:(0,c.jsx)(n.code,{children:"DismissDirection"})})," and defaults to ",(0,c.jsx)(n.code,{children:"DismissDirection.DOWN"}),"."]}),"\n",(0,c.jsx)(n.h3,{id:"duration",children:(0,c.jsx)(n.code,{children:"duration"})}),"\n",(0,c.jsxs)(n.p,{children:["The number of ",(0,c.jsx)(n.em,{children:"milliseconds"})," that the SnackBar stays open for."]}),"\n",(0,c.jsxs)(n.p,{children:["Defaults to ",(0,c.jsx)(n.code,{children:"4000"})," (",(0,c.jsx)(n.a,{href:"https://api.flutter.dev/flutter/material/SnackBar/duration.html",children:"4 seconds"}),")."]}),"\n",(0,c.jsx)(n.h3,{id:"elevation",children:(0,c.jsx)(n.code,{children:"elevation"})}),"\n",(0,c.jsx)(n.p,{children:"The z-coordinate at which to place the snack bar. This controls the size of the shadow below the snack bar."}),"\n",(0,c.jsx)(n.h3,{id:"margin",children:(0,c.jsx)(n.code,{children:"margin"})}),"\n",(0,c.jsx)(n.p,{children:"Empty space to surround the snack bar."}),"\n",(0,c.jsxs)(n.p,{children:["Has effect only when ",(0,c.jsx)(n.code,{children:"behavior=SnackBarBehavior.FLOATING"})," and will be ignored if ",(0,c.jsx)(n.code,{children:"width"})," is specified."]}),"\n",(0,c.jsx)(n.h3,{id:"open",children:(0,c.jsx)(n.code,{children:"open"})}),"\n",(0,c.jsxs)(n.p,{children:["Set to ",(0,c.jsx)(n.code,{children:"True"})," to display a SnackBar. This property is automatically set to ",(0,c.jsx)(n.code,{children:"False"})," once SnackBar is shown."]}),"\n",(0,c.jsx)(n.h3,{id:"padding",children:(0,c.jsx)(n.code,{children:"padding"})}),"\n",(0,c.jsx)(n.p,{children:"The amount of padding to apply to the snack bar's content and optional action."}),"\n",(0,c.jsxs)(n.p,{children:["Value is of type ",(0,c.jsx)(n.a,{href:"/docs/reference/types/padding",children:(0,c.jsx)(n.code,{children:"Padding"})})," or a number."]}),"\n",(0,c.jsx)(n.h3,{id:"shape",children:(0,c.jsx)(n.code,{children:"shape"})}),"\n",(0,c.jsx)(n.p,{children:"The shape of the snack bar's."}),"\n",(0,c.jsxs)(n.p,{children:["Value is of type ",(0,c.jsx)(n.a,{href:"/docs/reference/types/outlinedborder",children:(0,c.jsx)(n.code,{children:"OutlinedBorder"})}),"."]}),"\n",(0,c.jsx)(n.h3,{id:"show_close_icon",children:(0,c.jsx)(n.code,{children:"show_close_icon"})}),"\n",(0,c.jsx)(n.p,{children:'Whether to include a "close" icon widget.'}),"\n",(0,c.jsx)(n.p,{children:"Tapping the icon will close the snack bar."}),"\n",(0,c.jsx)(n.h3,{id:"width",children:(0,c.jsx)(n.code,{children:"width"})}),"\n",(0,c.jsx)(n.p,{children:"The width of the snack bar."}),"\n",(0,c.jsx)(n.p,{children:"If width is specified, the snack bar will be centered horizontally in the available space."}),"\n",(0,c.jsxs)(n.p,{children:["Has effect only when ",(0,c.jsx)(n.code,{children:"behavior=SnackBarBehavior.FLOATING"}),". It can not be used if ",(0,c.jsx)(n.code,{children:"margin"})," is specified."]}),"\n",(0,c.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,c.jsx)(n.h3,{id:"on_action",children:(0,c.jsx)(n.code,{children:"on_action"})}),"\n",(0,c.jsx)(n.p,{children:"Fires when action button is clicked."}),"\n",(0,c.jsx)(n.h3,{id:"on_visible",children:(0,c.jsx)(n.code,{children:"on_visible"})}),"\n",(0,c.jsx)(n.p,{children:"Fires the first time that the snackbar is visible within the page."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var c=i(96540);const o={},s=c.createContext(o);function d(e){const n=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),c.createElement(s.Provider,{value:n},e.children)}}}]);