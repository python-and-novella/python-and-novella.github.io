"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[98859],{16175:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=n(74848),i=n(28453);const a={title:"Displaying data",sidebar_label:"Displaying data"},r=void 0,o={id:"getting-started/displaying-data",title:"Displaying data",description:"Text",source:"@site/docs/getting-started/displaying-data.md",sourceDirName:"getting-started",slug:"/getting-started/displaying-data",permalink:"/flet-docs/docs/getting-started/displaying-data",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/getting-started/displaying-data.md",tags:[],version:"current",frontMatter:{title:"Displaying data",sidebar_label:"Displaying data"}},l={},d=[{value:"Text",id:"text",level:2},{value:"Text styles",id:"text-styles",level:3},{value:"Icon",id:"icon",level:2},{value:"Image",id:"image",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"text",children:"Text"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Text"})," control is used to output textual data. Its main properties are ",(0,s.jsx)(t.code,{children:"value"})," and ",(0,s.jsx)(t.code,{children:"size"}),", but it also has a number of formatting properties to control its appearance. For example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'t = ft.Text(\n    value="This is a Text control sample",\n    size=30,\n    color="white",\n    bgcolor="pink",\n    weight="bold",\n    italic=True,\n)\npage.add(t)\n'})}),"\n",(0,s.jsx)("img",{src:"/img/docs/getting-started/displaying-data-text.png",className:"screenshot-50"}),"\n",(0,s.jsx)(t.h3,{id:"text-styles",children:"Text styles"}),"\n",(0,s.jsx)(t.p,{children:"[TBD]\nFonts?\nVariable weight?\nBuilt-in styles with customization.\nTextField class description."}),"\n",(0,s.jsx)(t.h2,{id:"icon",children:"Icon"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Icons list"}),"\n",(0,s.jsx)(t.li,{children:"Link to an app"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"image",children:"Image"}),"\n",(0,s.jsx)(t.p,{children:"Note about CORS\nSide-loading assets\nHTML renderer in web to display all formats\nwhat formats are supported?"}),"\n",(0,s.jsxs)(t.p,{children:["in the desktop version it does support jpeg, jpg, png\nin the web version it only supports png\nCould you try using html renderer for the web? ",(0,s.jsx)(t.a,{href:"https://flet.dev/docs/controls/text/#using-system-fonts",children:"https://flet.dev/docs/controls/text/#using-system-fonts"}),'\nReading this I think "html" renderer must support any format supported by the browser: ',(0,s.jsx)(t.a,{href:"https://docs.flutter.dev/development/platform-integration/web/web-images",children:"https://docs.flutter.dev/development/platform-integration/web/web-images"})]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(96540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);