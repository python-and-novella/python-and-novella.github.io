"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[55820],{16836:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>u});var l=t(74848),s=t(28453),o=t(11470),c=t(19365);const i={title:"SegmentedButton",sidebar_label:"SegmentedButton"},d=void 0,r={id:"controls/segmentedbutton",title:"SegmentedButton",description:"A Material button that allows the user to select from limited set of options and are typically used in cases where there are only 2-5 options.",source:"@site/docs/controls/segmentedbutton.md",sourceDirName:"controls",slug:"/controls/segmentedbutton",permalink:"/docs/flet-docs/docs/controls/segmentedbutton",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/segmentedbutton.md",tags:[],version:"current",frontMatter:{title:"SegmentedButton",sidebar_label:"SegmentedButton"},sidebar:"docs",previous:{title:"PopupMenuButton",permalink:"/docs/flet-docs/docs/controls/popupmenubutton"},next:{title:"SubmenuButton",permalink:"/docs/flet-docs/docs/controls/submenubutton"}},a={},u=[{value:"Examples",id:"examples",level:2},{value:"<code>SegmentedButton</code> Properties",id:"segmentedbutton-properties",level:2},{value:"<code>allow_empty_selection</code>",id:"allow_empty_selection",level:3},{value:"<code>allow_multiple_selection</code>",id:"allow_multiple_selection",level:3},{value:"<code>direction</code>",id:"direction",level:3},{value:"<code>padding</code>",id:"padding",level:3},{value:"<code>segments</code>",id:"segments",level:3},{value:"<code>selected</code>",id:"selected",level:3},{value:"<code>selected_icon</code>",id:"selected_icon",level:3},{value:"<code>show_selected_icon</code>",id:"show_selected_icon",level:3},{value:"<code>style</code>",id:"style",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_change</code>",id:"on_change",level:3},{value:"<code>Segment</code> Properties",id:"segment-properties",level:2},{value:"<code>disabled</code>",id:"disabled",level:3},{value:"<code>icon</code>",id:"icon",level:3},{value:"<code>label</code>",id:"label",level:3},{value:"<code>tooltip</code>",id:"tooltip",level:3},{value:"<code>value</code>",id:"value",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"A Material button that allows the user to select from limited set of options and are typically used in cases where there are only 2-5 options."}),"\n","\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://flet-controls-gallery.fly.dev/buttons/segmentedbutton",children:"Live example"})}),"\n",(0,l.jsx)(o.A,{groupId:"language",children:(0,l.jsx)(c.A,{value:"python",label:"Python",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\n\ndef main(page: ft.Page):\n    def handle_change(e):\n        print("on_change data : " + str(e.data))\n\n    page.add(\n        ft.SegmentedButton(\n            on_change=handle_change,\n            selected_icon=ft.Icon(ft.Icons.ONETWOTHREE),\n            selected={"1", "4"},\n            allow_multiple_selection=True,\n            segments=[\n                ft.Segment(\n                    value="1",\n                    label=ft.Text("1"),\n                    icon=ft.Icon(ft.Icons.LOOKS_ONE),\n                ),\n                ft.Segment(\n                    value="2",\n                    label=ft.Text("2"),\n                    icon=ft.Icon(ft.Icons.LOOKS_TWO),\n                ),\n                ft.Segment(\n                    value="3",\n                    label=ft.Text("3"),\n                    icon=ft.Icon(ft.Icons.LOOKS_3),\n                ),\n                ft.Segment(\n                    value="4",\n                    label=ft.Text("4"),\n                    icon=ft.Icon(ft.Icons.LOOKS_4),\n                ),\n            ],\n        )\n    )\n\n\nft.app(main)\n'})})})}),"\n",(0,l.jsx)("img",{src:"/docs/flet-docs/img/docs/controls/segmented-button/segmented-button.png",className:"screenshot-40"}),"\n",(0,l.jsxs)(n.h2,{id:"segmentedbutton-properties",children:[(0,l.jsx)(n.code,{children:"SegmentedButton"})," Properties"]}),"\n",(0,l.jsx)(n.h3,{id:"allow_empty_selection",children:(0,l.jsx)(n.code,{children:"allow_empty_selection"})}),"\n",(0,l.jsx)(n.p,{children:"A boolean value that indicates if having no selected segments is allowed."}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"True"}),", then it is acceptable for none of the segments to be selected and also that ",(0,l.jsx)(n.code,{children:"selected"})," can be empty."]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"False"})," (the default), there must be at least one segment selected. If the user taps on the only selected segment it will not be deselected, and ",(0,l.jsx)(n.code,{children:"on_change"})," will not be called."]}),"\n",(0,l.jsx)(n.h3,{id:"allow_multiple_selection",children:(0,l.jsx)(n.code,{children:"allow_multiple_selection"})}),"\n",(0,l.jsx)(n.p,{children:"A boolean value that indicates if multiple segments can be selected at one time."}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"True"}),", more than one segment can be selected. When selecting a segment, the other ",(0,l.jsx)(n.code,{children:"selected"})," segments will stay selected. Selecting an already selected segment will unselect it."]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"False"}),"(the default), only one segment may be selected at a time. When a segment is selected, any previously selected segment will be unselected."]}),"\n",(0,l.jsx)(n.h3,{id:"direction",children:(0,l.jsx)(n.code,{children:"direction"})}),"\n",(0,l.jsxs)(n.p,{children:["The orientation of the button's ",(0,l.jsx)(n.code,{children:"segments"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Value is of type ",(0,l.jsx)(n.a,{href:"/docs/reference/types/axis",children:(0,l.jsx)(n.code,{children:"Axis"})})," and defaults to ",(0,l.jsx)(n.code,{children:"Axis.HORIZONTAL"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"padding",children:(0,l.jsx)(n.code,{children:"padding"})}),"\n",(0,l.jsx)(n.p,{children:"Defines the button's size and padding. If specified, the button expands to fill its parent's space with this padding."}),"\n",(0,l.jsxs)(n.p,{children:["When ",(0,l.jsx)(n.code,{children:"None"}),", the button adopts its intrinsic content size."]}),"\n",(0,l.jsxs)(n.p,{children:["Value is of type ",(0,l.jsx)(n.a,{href:"/docs/reference/types/aliases#paddingvalue",children:(0,l.jsx)(n.code,{children:"PaddingValue"})}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"segments",children:(0,l.jsx)(n.code,{children:"segments"})}),"\n",(0,l.jsxs)(n.p,{children:["A required parameter that describes the segments in the button. It's a list of ",(0,l.jsx)(n.code,{children:"Segment"})," objects."]}),"\n",(0,l.jsx)(n.h3,{id:"selected",children:(0,l.jsx)(n.code,{children:"selected"})}),"\n",(0,l.jsxs)(n.p,{children:["A set of ",(0,l.jsx)(n.code,{children:"Segment.value"}),"s that indicate which segments are selected. It is updated when the user (un)selects a segment."]}),"\n",(0,l.jsx)(n.h3,{id:"selected_icon",children:(0,l.jsx)(n.code,{children:"selected_icon"})}),"\n",(0,l.jsxs)(n.p,{children:["An ",(0,l.jsx)(n.code,{children:"Icon"})," control that is used to indicate a segment is selected."]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"show_selected_icon"})," is ",(0,l.jsx)(n.code,{children:"True"})," then for ",(0,l.jsx)(n.code,{children:"selected"})," segments this icon will be shown before the ",(0,l.jsx)(n.code,{children:"Segment.label"}),", replacing the ",(0,l.jsx)(n.code,{children:"Segment.icon"})," if it is specified."]}),"\n",(0,l.jsxs)(n.p,{children:["Defaults to an ",(0,l.jsx)(n.code,{children:"Icon"})," with the ",(0,l.jsx)(n.code,{children:"CHECK"})," icon."]}),"\n",(0,l.jsx)(n.h3,{id:"show_selected_icon",children:(0,l.jsx)(n.code,{children:"show_selected_icon"})}),"\n",(0,l.jsxs)(n.p,{children:["A boolean value that indicates if the ",(0,l.jsx)(n.code,{children:"selected_icon"})," is displayed on the ",(0,l.jsx)(n.code,{children:"selected"})," segments."]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"True"}),", the ",(0,l.jsx)(n.code,{children:"selected_icon"})," will be displayed at the start of the ",(0,l.jsx)(n.code,{children:"selected"})," segments."]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"False"}),", then the ",(0,l.jsx)(n.code,{children:"selected_icon"})," is not used and will not be displayed on ",(0,l.jsx)(n.code,{children:"selected"})," segments."]}),"\n",(0,l.jsx)(n.h3,{id:"style",children:(0,l.jsx)(n.code,{children:"style"})}),"\n",(0,l.jsx)(n.p,{children:"Customizes this button's appearance."}),"\n",(0,l.jsxs)(n.p,{children:["Value is of type ",(0,l.jsx)(n.a,{href:"/docs/reference/types/buttonstyle",children:(0,l.jsx)(n.code,{children:"ButtonStyle"})}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,l.jsx)(n.h3,{id:"on_change",children:(0,l.jsx)(n.code,{children:"on_change"})}),"\n",(0,l.jsx)(n.p,{children:"Fires when the selection changes."}),"\n",(0,l.jsxs)(n.h2,{id:"segment-properties",children:[(0,l.jsx)(n.code,{children:"Segment"})," Properties"]}),"\n",(0,l.jsx)(n.h3,{id:"disabled",children:(0,l.jsx)(n.code,{children:"disabled"})}),"\n",(0,l.jsx)(n.p,{children:"Determines if the segment is available for selection."}),"\n",(0,l.jsx)(n.h3,{id:"icon",children:(0,l.jsx)(n.code,{children:"icon"})}),"\n",(0,l.jsxs)(n.p,{children:["The icon (typically an ",(0,l.jsx)(n.a,{href:"/docs/controls/icon",children:(0,l.jsx)(n.code,{children:"Icon"})}),") to be displayed in the segment."]}),"\n",(0,l.jsx)(n.h3,{id:"label",children:(0,l.jsx)(n.code,{children:"label"})}),"\n",(0,l.jsxs)(n.p,{children:["The label (usually a ",(0,l.jsx)(n.a,{href:"/docs/controls/text",children:(0,l.jsx)(n.code,{children:"Text"})}),") to be displayed in the segment."]}),"\n",(0,l.jsx)(n.h3,{id:"tooltip",children:(0,l.jsx)(n.code,{children:"tooltip"})}),"\n",(0,l.jsx)(n.p,{children:"The tooltip for the segment."}),"\n",(0,l.jsx)(n.h3,{id:"value",children:(0,l.jsx)(n.code,{children:"value"})}),"\n",(0,l.jsxs)(n.p,{children:["Used to identify the ",(0,l.jsx)(n.code,{children:"Segment"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>c});t(96540);var l=t(18215);const s={tabItem:"tabItem_Ymn6"};var o=t(74848);function c(e){let{children:n,hidden:t,className:c}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,l.A)(s.tabItem,c),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>_});var l=t(96540),s=t(18215),o=t(23104),c=t(56347),i=t(205),d=t(57485),r=t(31682),a=t(70679);function u(e){var n,t;return null!=(n=null==(t=l.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function h(e){const{values:n,children:t}=e;return(0,l.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:l,default:s}}=e;return{value:n,label:t,attributes:l,default:s}}))}(t);return function(e){const n=(0,r.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,c.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,d.aZ)(o),(0,l.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(s.location.search);n.set(o,e),s.replace({...s.location,search:n.toString()})}),[o,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,o=h(e),[c,d]=(0,l.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:l}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+l.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const s=null!=(n=l.find((e=>e.default)))?n:l[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:o}))),[r,u]=m({queryString:t,groupId:s}),[f,x]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[s,o]=(0,a.Dv)(t);return[s,(0,l.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:s}),b=(()=>{const e=null!=r?r:f;return p({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{b&&d(b)}),[b]);return{selectedValue:c,selectValue:(0,l.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error("Can't select invalid tab value="+e);d(e),u(e),x(e)}),[u,x,o]),tabValues:o}}var x=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(74848);function j(e){let{className:n,block:t,selectedValue:l,selectValue:c,tabValues:i}=e;const d=[],{blockElementScrollPositionUntilNextRender:r}=(0,o.a_)(),a=e=>{const n=e.currentTarget,t=d.indexOf(n),s=i[t].value;s!==l&&(r(n),c(s))},u=e=>{var n;let t=null;switch(e.key){case"Enter":a(e);break;case"ArrowRight":{var l;const n=d.indexOf(e.currentTarget)+1;t=null!=(l=d[n])?l:d[0];break}case"ArrowLeft":{var s;const n=d.indexOf(e.currentTarget)-1;t=null!=(s=d[n])?s:d[d.length-1];break}}null==(n=t)||n.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:e=>d.push(e),onKeyDown:u,onClick:a,...o,className:(0,s.A)("tabs__item",b.tabItem,null==o?void 0:o.className,{"tabs__item--active":l===n}),children:null!=t?t:n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===s));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=f(e);return(0,g.jsxs)("div",{className:(0,s.A)("tabs-container",b.tabList),children:[(0,g.jsx)(j,{...n,...e}),(0,g.jsx)(v,{...n,...e})]})}function _(e){const n=(0,x.A)();return(0,g.jsx)(y,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var l=t(96540);const s={},o=l.createContext(s);function c(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),l.createElement(o.Provider,{value:n},e.children)}}}]);