"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[83986],{15200:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var l=i(74848),o=i(28453);const s={title:"Packaging app for macOS",sidebar_label:"macOS"},t=void 0,c={id:"publish/macos",title:"Packaging app for macOS",description:"Flet CLI provides flet build macos command that allows packaging Flet app into a macOS application bundle.",source:"@site/docs/publish/macos.md",sourceDirName:"publish",slug:"/publish/macos",permalink:"/docs/flet-docs/docs/publish/macos",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/publish/macos.md",tags:[],version:"current",frontMatter:{title:"Packaging app for macOS",sidebar_label:"macOS"},sidebar:"docs",previous:{title:"iOS",permalink:"/docs/flet-docs/docs/publish/ios"},next:{title:"Linux",permalink:"/docs/flet-docs/docs/publish/linux"}},r={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Prerequisites",id:"prerequisites-1",level:2},{value:"Rosetta 2",id:"rosetta-2",level:3},{value:"Xcode",id:"xcode",level:3},{value:"CocoaPods",id:"cocoapods",level:3},{value:"<code>flet build macos</code>",id:"flet-build-macos",level:2},{value:"Bundle architecture",id:"bundle-architecture",level:2},{value:"Permissions",id:"permissions",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["Flet CLI provides ",(0,l.jsx)(n.code,{children:"flet build macos"})," command that allows packaging Flet app into a macOS application bundle."]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsx)(n.p,{children:"The command can be run on macOS only."})}),"\n",(0,l.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsx)(n.h2,{id:"prerequisites-1",children:"Prerequisites"}),"\n",(0,l.jsx)(n.h3,{id:"rosetta-2",children:"Rosetta 2"}),"\n",(0,l.jsxs)(n.p,{children:["Flutter requires ",(0,l.jsx)(n.a,{href:"https://support.apple.com/en-us/HT211861",children:"Rosetta 2"})," on Apple silicon:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"sudo softwareupdate --install-rosetta --agree-to-license\n"})}),"\n",(0,l.jsx)(n.h3,{id:"xcode",children:"Xcode"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://developer.apple.com/xcode/",children:"Xcode"})," 15 or later to compile native Swift or ObjectiveC code."]}),"\n",(0,l.jsx)(n.h3,{id:"cocoapods",children:"CocoaPods"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://cocoapods.org/",children:"CocoaPods"})," 1.16 to compile and enable Flutter plugins."]}),"\n",(0,l.jsx)(n.h2,{id:"flet-build-macos",children:(0,l.jsx)(n.code,{children:"flet build macos"})}),"\n",(0,l.jsx)(n.p,{children:"Creates a macOS application bundle from your Flet app."}),"\n",(0,l.jsx)(n.h2,{id:"bundle-architecture",children:"Bundle architecture"}),"\n",(0,l.jsxs)(n.p,{children:["By default, ",(0,l.jsx)(n.code,{children:"flet build macos"})," command builds universal app bundle that works on both Apple Silicon and older Intel processors. Therefore, packaging utility will try to download Python binary wheels for both ",(0,l.jsx)(n.code,{children:"arm64"})," and ",(0,l.jsx)(n.code,{children:"x86_64"})," platforms. Recent releases\nof some popular packages do not include ",(0,l.jsx)(n.code,{children:"x86_64"})," wheels anymore, so the entire packaging operation will fail."]}),"\n",(0,l.jsxs)(n.p,{children:["You can limit the build command to a specific architecture only, by using ",(0,l.jsx)(n.code,{children:"--arch"})," option. For example, to build macOS app bundle that works on Apple Silicon only use the following command:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"flet build macos --arch arm64\n"})}),"\n",(0,l.jsxs)(n.p,{children:["The same can be configured in ",(0,l.jsx)(n.code,{children:"pyproject.toml"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",children:'[tool.flet.macos]\nbuild_arch = "arm64"\n'})}),"\n",(0,l.jsx)(n.h2,{id:"permissions",children:"Permissions"}),"\n",(0,l.jsxs)(n.p,{children:["Setting macOS entitlements which are written and ",(0,l.jsx)(n.code,{children:".entitlements"})," files:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"flet build --macos-entitlements name_1=True|False name_2=True|False ...\n"})}),"\n",(0,l.jsx)(n.p,{children:"Default macOS entitlements:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"com.apple.security.app-sandbox = False"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"com.apple.security.cs.allow-jit = True"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"com.apple.security.network.client = True"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:'com.apple.security.network.server" = True'})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Configuring macOS app entitlements in ",(0,l.jsx)(n.code,{children:"pyproject.toml"})," (notice ",(0,l.jsx)(n.code,{children:'"'})," around entitlement name):"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",children:'[tool.flet.macos]\nentitlement."com.apple.security.personal-information.photos-library" = true\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var l=i(96540);const o={},s=l.createContext(o);function t(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);