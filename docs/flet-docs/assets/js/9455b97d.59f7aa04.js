"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[86116],{58024:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var s=t(74848),n=t(28453);const r={title:"Keyboard shortcuts",sidebar_label:"Keyboard shortcuts"},d=void 0,c={id:"cookbook/keyboard-shortcuts",title:"Keyboard shortcuts",description:"A solid keyboard support is a key for user productivity while using your web and, especially, desktop app. Indeed, it could be really annoying to constantly switch between mouse and keyboard.",source:"@site/docs/cookbook/keyboard-shortcuts.md",sourceDirName:"cookbook",slug:"/cookbook/keyboard-shortcuts",permalink:"/docs/flet-docs/docs/cookbook/keyboard-shortcuts",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/cookbook/keyboard-shortcuts.md",tags:[],version:"current",frontMatter:{title:"Keyboard shortcuts",sidebar_label:"Keyboard shortcuts"},sidebar:"docs",previous:{title:"Theming",permalink:"/docs/flet-docs/docs/cookbook/theming"},next:{title:"Large lists",permalink:"/docs/flet-docs/docs/cookbook/large-lists"}},i={},a=[];function l(e){const o={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.p,{children:"A solid keyboard support is a key for user productivity while using your web and, especially, desktop app. Indeed, it could be really annoying to constantly switch between mouse and keyboard."}),"\n",(0,s.jsxs)(o.p,{children:["In addition to form controls' ",(0,s.jsx)(o.code,{children:".autofocus"})," property and ",(0,s.jsx)(o.a,{href:"/docs/controls/textfield#focus",children:(0,s.jsx)(o.code,{children:"TextField.focus()"})}),' method Flet allows handling "global" keyboard events.']}),"\n",(0,s.jsxs)(o.p,{children:["To capture all keystrokes implement ",(0,s.jsx)(o.code,{children:"page.on_keyboard_event"})," handler. Event handler parameter ",(0,s.jsx)(o.code,{children:"e"})," is an instance of ",(0,s.jsx)(o.code,{children:"KeyboardEvent"})," class with the following properties:"]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"key"})," - a textual representation of a pressed key, e.g. ",(0,s.jsx)(o.code,{children:"A"}),", ",(0,s.jsx)(o.code,{children:"Enter"})," or ",(0,s.jsx)(o.code,{children:"F5"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"shift"})," - ",(0,s.jsx)(o.code,{children:"True"}),' if "Shift" key is pressed.']}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"ctrl"})," - ",(0,s.jsx)(o.code,{children:"True"}),' if "Control" key is pressed.']}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"alt"})," - ",(0,s.jsx)(o.code,{children:"True"}),' if "Alt" ("Option") key is pressed.']}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"meta"})," - ",(0,s.jsx)(o.code,{children:"True"}),' if "Command" key is pressed.']}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:"This is a simple usage example:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    def on_keyboard(e: ft.KeyboardEvent):\n        page.add(\n            ft.Text(\n                f"Key: {e.key}, Shift: {e.shift}, Control: {e.ctrl}, Alt: {e.alt}, Meta: {e.meta}"\n            )\n        )\n\n    page.on_keyboard_event = on_keyboard\n    page.add(\n        ft.Text("Press any key with a combination of CTRL, ALT, SHIFT and META keys...")\n    )\n\nft.app(main)\n'})}),"\n",(0,s.jsx)("img",{src:"/img/docs/getting-started/keyboard-shortcuts.png",className:"screenshot-100"}),"\n",(0,s.jsxs)(o.p,{children:["Here is ",(0,s.jsx)(o.a,{href:"https://github.com/flet-dev/examples/blob/main/python/controls/page/keyboard-events.py",children:"more advanced example"}),"."]})]})}function h(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>d,x:()=>c});var s=t(96540);const n={},r=s.createContext(n);function d(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(r.Provider,{value:o},e.children)}}}]);