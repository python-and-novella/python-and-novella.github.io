"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[70597],{46110:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=t(74848),a=t(28453);const r={title:"build",sidebar_label:"build"},i=void 0,s={id:"reference/cli/build",title:"build",description:"This command is used to package a Flet application for distribution. You can find it's guide here.",source:"@site/docs/reference/cli/build.md",sourceDirName:"reference/cli",slug:"/reference/cli/build",permalink:"/docs/flet-docs/docs/reference/cli/build",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/reference/cli/build.md",tags:[],version:"current",frontMatter:{title:"build",sidebar_label:"build"},sidebar:"docs",previous:{title:"run",permalink:"/docs/flet-docs/docs/reference/cli/run"},next:{title:"pack",permalink:"/docs/flet-docs/docs/reference/cli/pack"}},l={},d=[];function p(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["This command is used to package a Flet application for distribution. You can find it's guide ",(0,o.jsx)(n.a,{href:"/docs/publish",children:"here"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'usage: flet build [-h] [-v] [-o OUTPUT_DIR] [--project PROJECT_NAME] [--description DESCRIPTION] [--product PRODUCT_NAME] [--org ORG_NAME] [--company COMPANY_NAME] [--copyright COPYRIGHT]\n                  [--splash-color SPLASH_COLOR] [--splash-dark-color SPLASH_DARK_COLOR] [--no-web-splash] [--no-ios-splash] [--no-android-splash] [--team TEAM_ID] [--base-url BASE_URL]\n                  [--web-renderer {canvaskit,html}] [--use-color-emoji] [--route-url-strategy {path,hash}] [--flutter-build-args [FLUTTER_BUILD_ARGS ...]] [--include-packages FLUTTER_PACKAGES [FLUTTER_PACKAGES ...]]\n                  [--build-number BUILD_NUMBER] [--build-version BUILD_VERSION] [--module-name MODULE_NAME] [--template TEMPLATE] [--template-dir TEMPLATE_DIR] [--template-ref TEMPLATE_REF]\n                  {macos,linux,windows,web,apk,aab,ipa} [python_app_path]\n\nBuild an executable app or install bundle.\n\npositional arguments:\n  {macos,linux,windows,web,apk,aab,ipa}\n                        the type of a package or target platform to build\n  python_app_path       path to a directory with a Python program\n\noptions:\n  -h, --help            show this help message and exit\n  -v, --verbose         -v for detailed output and -vv for more detailed\n  -o OUTPUT_DIR, --output OUTPUT_DIR\n                        where to put resulting executable or bundle (default is <python_app_directory>/build/<target_platform>)\n  --project PROJECT_NAME\n                        project name for executable or bundle\n  --description DESCRIPTION\n                        the description to use for executable or bundle\n  --product PRODUCT_NAME\n                        project display name that is shown in window titles and about app dialogs\n  --org ORG_NAME        org name in reverse domain name notation, e.g. "com.mycompany" - combined with project name and used as an iOS and Android bundle ID\n  --company COMPANY_NAME\n                        company name to display in about app dialogs\n  --copyright COPYRIGHT\n                        copyright text to display in about app dialogs\n  --splash-color SPLASH_COLOR\n                        background color of app splash screen on iOS, Android and web\n  --splash-dark-color SPLASH_DARK_COLOR\n                        background color in dark mode of app splash screen on iOS, Android and web\n  --no-web-splash       disable web app splash screen\n  --no-ios-splash       disable iOS app splash screen\n  --no-android-splash   disable Android app splash screen\n  --team TEAM_ID        Team ID to sign iOS bundle (ipa only)\n  --base-url BASE_URL   base URL for the app (web only)\n  --web-renderer {canvaskit,html}\n                        renderer to use (web only)\n  --use-color-emoji     enables color emojis with CanvasKit renderer (web only)\n  --route-url-strategy {path,hash}\n                        URL routing strategy (web only)\n  --flutter-build-args [FLUTTER_BUILD_ARGS ...]\n                        additional arguments for flutter build command\n  --include-packages FLUTTER_PACKAGES [FLUTTER_PACKAGES ...]\n                        include extra Flutter Flet packages, such as flet_video, flet_audio, etc.\n  --build-number BUILD_NUMBER\n                        build number - an identifier used as an internal version number\n  --build-version BUILD_VERSION\n                        build version - a "x.y.z" string used as the version number shown to users\n  --module-name MODULE_NAME\n                        python module name with an app entry point\n  --template TEMPLATE   a directory containing Flutter bootstrap template, or a URL to a git repository template\n  --template-dir TEMPLATE_DIR\n                        relative path to a Flutter bootstrap template in a repository\n  --template-ref TEMPLATE_REF\n                        the branch, tag or commit ID to checkout after cloning the repository with Flutter bootstrap template\n'})})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(96540);const a={},r=o.createContext(a);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);