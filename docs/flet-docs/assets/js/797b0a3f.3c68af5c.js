"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[61258],{78496:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>v,frontMatter:()=>i,metadata:()=>d,toc:()=>u});var t=r(74848),l=r(28453),s=r(11470),a=r(19365);const i={title:"RangeSlider",sidebar_label:"RangeSlider"},o=void 0,d={id:"controls/rangeslider",title:"RangeSlider",description:"A Material Design range slider. Used to select a range from a range of values.",source:"@site/docs/controls/rangeslider.md",sourceDirName:"controls",slug:"/controls/rangeslider",permalink:"/flet-docs/docs/controls/rangeslider",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/rangeslider.md",tags:[],version:"current",frontMatter:{title:"RangeSlider",sidebar_label:"RangeSlider"},sidebar:"docs",previous:{title:"Radio",permalink:"/flet-docs/docs/controls/radio"},next:{title:"SearchBar",permalink:"/flet-docs/docs/controls/searchbar"}},c={},u=[{value:"Examples",id:"examples",level:2},{value:"Range slider with divisions and labels",id:"range-slider-with-divisions-and-labels",level:3},{value:"RangeSlider with events",id:"rangeslider-with-events",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>active_color</code>",id:"active_color",level:3},{value:"<code>divisions</code>",id:"divisions",level:3},{value:"<code>end_value</code>",id:"end_value",level:3},{value:"<code>inactive_color</code>",id:"inactive_color",level:3},{value:"<code>label</code>",id:"label",level:3},{value:"<code>max</code>",id:"max",level:3},{value:"<code>min</code>",id:"min",level:3},{value:"<code>mouse_cursor</code>",id:"mouse_cursor",level:3},{value:"<code>overlay_color</code>",id:"overlay_color",level:3},{value:"<code>round</code>",id:"round",level:3},{value:"<code>start_value</code>",id:"start_value",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_change</code>",id:"on_change",level:3},{value:"<code>on_change_end</code>",id:"on_change_end",level:3},{value:"<code>on_change_start</code>",id:"on_change_start",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"A Material Design range slider. Used to select a range from a range of values.\nA range slider can be used to select from either a continuous or a discrete set of values.\nThe default is to use a continuous range of values from min to max."}),"\n","\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://flet-controls-gallery.fly.dev/input/rangeslider",children:"Live example"})}),"\n",(0,t.jsx)(n.h3,{id:"range-slider-with-divisions-and-labels",children:"Range slider with divisions and labels"}),"\n",(0,t.jsx)(s.A,{groupId:"language",children:(0,t.jsx)(a.A,{value:"python",label:"Python",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\n\ndef main(page: ft.Page):\n    range_slider = ft.RangeSlider(\n        min=0,\n        max=50,\n        start_value=10,\n        divisions=10,\n        end_value=20,\n        inactive_color=ft.Colors.GREEN_300,\n        active_color=ft.Colors.GREEN_700,\n        overlay_color=ft.Colors.GREEN_100,\n        label="{value}%",\n    )\n\n    page.add(\n        ft.Column(\n            horizontal_alignment=ft.CrossAxisAlignment.CENTER,\n            controls=[\n                ft.Text(\n                    "Range slider with divisions and labels",\n                    size=20,\n                    weight=ft.FontWeight.BOLD,\n                ),\n                ft.Container(height=30),\n                range_slider,\n            ],\n        )\n    )\n\n\nft.app(main)\n'})})})}),"\n",(0,t.jsx)("img",{src:"/img/docs/controls/rangeslider/rangeslider.gif",className:"screenshot-70"}),"\n",(0,t.jsx)(n.h3,{id:"rangeslider-with-events",children:"RangeSlider with events"}),"\n",(0,t.jsx)(s.A,{groupId:"language",children:(0,t.jsx)(a.A,{value:"python",label:"Python",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\n\ndef main(page: ft.Page):\n    def slider_change_start(e):\n        print(f"on_change_start: {e.control.start_value}, {e.control.end_value}")\n\n    def slider_is_changing(e):\n        print(f"on_change: {e.control.start_value}, {e.control.end_value}")\n\n    def slider_change_end(e):\n        print(f"on_change_end: {e.control.start_value}, {e.control.end_value}")\n\n    range_slider = ft.RangeSlider(\n        min=0,\n        max=50,\n        start_value=10,\n        end_value=20,\n        on_change_start=slider_change_start,\n        on_change=slider_is_changing,\n        on_change_end=slider_change_end,\n    )\n\n    page.add(\n        ft.Column(\n            horizontal_alignment=ft.CrossAxisAlignment.CENTER,\n            controls=[\n                ft.Text(\n                    "Range slider with events",\n                    size=20,\n                    weight=ft.FontWeight.BOLD,\n                ),\n                ft.Container(height=30),\n                range_slider,\n            ],\n        )\n    )\n\n\nft.app(main)\n'})})})}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"active_color",children:(0,t.jsx)(n.code,{children:"active_color"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/docs/reference/colors",children:"color"})," to use for the portion of the slider track that is active."]}),"\n",(0,t.jsx)(n.p,{children:'The "active" segment of the range slider is the span between the thumbs.'}),"\n",(0,t.jsx)(n.h3,{id:"divisions",children:(0,t.jsx)(n.code,{children:"divisions"})}),"\n",(0,t.jsx)(n.p,{children:"The number of discrete divisions."}),"\n",(0,t.jsxs)(n.p,{children:["Typically used with ",(0,t.jsx)(n.code,{children:"label"})," to show the current discrete values."]}),"\n",(0,t.jsx)(n.p,{children:"If not set, the slider is continuous."}),"\n",(0,t.jsx)(n.h3,{id:"end_value",children:(0,t.jsx)(n.code,{children:"end_value"})}),"\n",(0,t.jsx)(n.p,{children:"The currently selected end value for the slider."}),"\n",(0,t.jsx)(n.p,{children:"The slider's right thumb is drawn at a position that corresponds to this value."}),"\n",(0,t.jsx)(n.h3,{id:"inactive_color",children:(0,t.jsx)(n.code,{children:"inactive_color"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/docs/reference/colors",children:"color"})," for the inactive portions of the slider track."]}),"\n",(0,t.jsx)(n.p,{children:'The "inactive" segments of the slider are the span of tracks between the min and the start thumb, and the end thumb and the max.'}),"\n",(0,t.jsx)(n.h3,{id:"label",children:(0,t.jsx)(n.code,{children:"label"})}),"\n",(0,t.jsxs)(n.p,{children:["A label to show above the slider thumbs when the slider is active. The value of ",(0,t.jsx)(n.code,{children:"label"})," may contain ",(0,t.jsx)(n.code,{children:"{value}"})," which will be replaced with a current slider ",(0,t.jsx)(n.code,{children:"start_value"})," and ",(0,t.jsx)(n.code,{children:"end_value"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"If not set, then the labels will not be displayed."}),"\n",(0,t.jsx)(n.h3,{id:"max",children:(0,t.jsx)(n.code,{children:"max"})}),"\n",(0,t.jsxs)(n.p,{children:["The maximum value the user can select. Must be greater than or equal to ",(0,t.jsx)(n.code,{children:"min"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If the ",(0,t.jsx)(n.code,{children:"max"})," is equal to the ",(0,t.jsx)(n.code,{children:"min"}),", then the slider is disabled."]}),"\n",(0,t.jsxs)(n.p,{children:["Defaults to ",(0,t.jsx)(n.code,{children:"1.0"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"min",children:(0,t.jsx)(n.code,{children:"min"})}),"\n",(0,t.jsx)(n.p,{children:"The minimum value the user can select."}),"\n",(0,t.jsxs)(n.p,{children:["Defaults to ",(0,t.jsx)(n.code,{children:"0.0"}),". Must be less than or equal to ",(0,t.jsx)(n.code,{children:"max"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If the ",(0,t.jsx)(n.code,{children:"max"})," is equal to the ",(0,t.jsx)(n.code,{children:"min"}),", then the slider is disabled."]}),"\n",(0,t.jsx)(n.h3,{id:"mouse_cursor",children:(0,t.jsx)(n.code,{children:"mouse_cursor"})}),"\n",(0,t.jsxs)(n.p,{children:["The cursor for a mouse pointer entering or hovering over this control. It's value can be made to depend on the slider's ",(0,t.jsx)(n.a,{href:"/docs/reference/types/controlstate",children:(0,t.jsx)(n.code,{children:"ControlState"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Value is of type ",(0,t.jsx)(n.a,{href:"/docs/reference/types/mousecursor",children:(0,t.jsx)(n.code,{children:"MouseCursor"})}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"overlay_color",children:(0,t.jsx)(n.code,{children:"overlay_color"})}),"\n",(0,t.jsxs)(n.p,{children:["The highlight ",(0,t.jsx)(n.a,{href:"/docs/reference/colors",children:"color"})," that's typically used to indicate that the range slider thumb is\nin ",(0,t.jsx)(n.code,{children:"HOVERED"})," or ",(0,t.jsx)(n.code,{children:"DRAGGED"})," ",(0,t.jsx)(n.a,{href:"/docs/reference/types/controlstate",children:(0,t.jsx)(n.code,{children:"ControlState"})}),"s."]}),"\n",(0,t.jsx)(n.h3,{id:"round",children:(0,t.jsx)(n.code,{children:"round"})}),"\n",(0,t.jsxs)(n.p,{children:["The number of decimals displayed on the ",(0,t.jsx)(n.code,{children:"label"})," containing ",(0,t.jsx)(n.code,{children:"{value}"}),". The default is 0 (displays value rounded to the nearest integer)."]}),"\n",(0,t.jsx)(n.h3,{id:"start_value",children:(0,t.jsx)(n.code,{children:"start_value"})}),"\n",(0,t.jsx)(n.p,{children:"The currently selected start value for the slider."}),"\n",(0,t.jsx)(n.p,{children:"The slider's left thumb is drawn at a position that corresponds to this value."}),"\n",(0,t.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,t.jsx)(n.h3,{id:"on_change",children:(0,t.jsx)(n.code,{children:"on_change"})}),"\n",(0,t.jsx)(n.p,{children:"Fires when the state of the Slider is changed."}),"\n",(0,t.jsx)(n.h3,{id:"on_change_end",children:(0,t.jsx)(n.code,{children:"on_change_end"})}),"\n",(0,t.jsx)(n.p,{children:"Fires when the user is done selecting a new value for the slider."}),"\n",(0,t.jsx)(n.h3,{id:"on_change_start",children:(0,t.jsx)(n.code,{children:"on_change_start"})}),"\n",(0,t.jsx)(n.p,{children:"Fires when the user starts selecting a new value for the slider."})]})}function v(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},19365:(e,n,r)=>{r.d(n,{A:()=>a});r(96540);var t=r(18215);const l={tabItem:"tabItem_Ymn6"};var s=r(74848);function a(e){let{children:n,hidden:r,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(l.tabItem,a),hidden:r,children:n})}},11470:(e,n,r)=>{r.d(n,{A:()=>w});var t=r(96540),l=r(18215),s=r(23104),a=r(56347),i=r(205),o=r(57485),d=r(31682),c=r(70679);function u(e){var n,r;return null!=(n=null==(r=t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:r.filter(Boolean))?n:[]}function h(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:l}}=e;return{value:n,label:r,attributes:t,default:l}}))}(r);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,r])}function v(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:r}=e;const l=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:n,groupId:r});return[(0,o.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(l.location.search);n.set(s,e),l.replace({...l.location,search:n.toString()})}),[s,l])]}function p(e){const{defaultValue:n,queryString:r=!1,groupId:l}=e,s=h(e),[a,o]=(0,t.useState)((()=>function(e){var n;let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!v({value:r,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+t.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}const l=null!=(n=t.find((e=>e.default)))?n:t[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:n,tabValues:s}))),[d,u]=f({queryString:r,groupId:l}),[p,g]=function(e){let{groupId:n}=e;const r=function(e){return e?"docusaurus.tab."+e:null}(n),[l,s]=(0,c.Dv)(r);return[l,(0,t.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:l}),x=(()=>{const e=null!=d?d:p;return v({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{x&&o(x)}),[x]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!v({value:e,tabValues:s}))throw new Error("Can't select invalid tab value="+e);o(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var g=r(92303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=r(74848);function j(e){let{className:n,block:r,selectedValue:t,selectValue:a,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const n=e.currentTarget,r=o.indexOf(n),l=i[r].value;l!==t&&(d(n),a(l))},u=e=>{var n;let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var t;const n=o.indexOf(e.currentTarget)+1;r=null!=(t=o[n])?t:o[0];break}case"ArrowLeft":{var l;const n=o.indexOf(e.currentTarget)-1;r=null!=(l=o[n])?l:o[o.length-1];break}}null==(n=r)||n.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},n),children:i.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>o.push(e),onKeyDown:u,onClick:c,...s,className:(0,l.A)("tabs__item",x.tabItem,null==s?void 0:s.className,{"tabs__item--active":t===n}),children:null!=r?r:n},n)}))})}function b(e){let{lazy:n,children:r,selectedValue:l}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===l));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function _(e){const n=p(e);return(0,m.jsxs)("div",{className:(0,l.A)("tabs-container",x.tabList),children:[(0,m.jsx)(j,{...n,...e}),(0,m.jsx)(b,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,m.jsx)(_,{...e,children:u(e.children)},String(n))}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(96540);const l={},s=t.createContext(l);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);