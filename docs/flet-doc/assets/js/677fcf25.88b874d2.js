"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[31341],{58152:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var o=n(74848),l=n(28453),a=n(14252);const s={title:"Create Calculator app in Python with Flet",sidebar_label:"Calculator app",slug:"python-calculator"},i=void 0,r={id:"tutorials/python-calculator",title:"Create Calculator app in Python with Flet",description:"In this tutorial we will show you, step-by-step, how to create a Calculator app in Python using Flet framework and publish it as a desktop, mobile or web app. The app is a simple console program, yet it is a multi-platform application with similar to iPhone calculator app UI:",source:"@site/docs/tutorials/python-calculator.md",sourceDirName:"tutorials",slug:"/tutorials/python-calculator",permalink:"/docs/flet-doc/docs/tutorials/python-calculator",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/tutorials/python-calculator.md",tags:[],version:"current",frontMatter:{title:"Create Calculator app in Python with Flet",sidebar_label:"Calculator app",slug:"python-calculator"},sidebar:"docs",previous:{title:"To-Do app",permalink:"/docs/flet-doc/docs/tutorials/python-todo"},next:{title:"Trello clone",permalink:"/docs/flet-doc/docs/tutorials/trello-clone"}},c={},d=[{value:"Getting started with Flet",id:"getting-started-with-flet",level:2},{value:"Adding page controls",id:"adding-page-controls",level:2},{value:"Building page layout",id:"building-page-layout",level:2},{value:"Using Container for decoration",id:"using-container-for-decoration",level:3},{value:"Styled Controls",id:"styled-controls",level:3},{value:"Reusable UI components",id:"reusable-ui-components",level:2},{value:"Handling events",id:"handling-events",level:2},{value:"Publishing your app",id:"publishing-your-app",level:2},{value:"Summary",id:"summary",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["In this tutorial we will show you, step-by-step, how to create a Calculator app in Python using Flet framework and publish it as a desktop, mobile or web app. The app is ",(0,o.jsx)(t.a,{href:"https://github.com/flet-dev/examples/blob/main/python/tutorials/calc/calc.py",children:"a simple console program"}),", yet it is a multi-platform application with similar to iPhone calculator app UI:"]}),"\n",(0,o.jsx)("img",{src:"/docs/flet-doc/img/docs/calc-tutorial/calc-app.gif",className:"screenshot-40"}),"\n",(0,o.jsxs)(t.p,{children:["You can find the live demo ",(0,o.jsx)(t.a,{href:"https://gallery.flet.dev/calculator/",children:"here"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"In this tutorial, we will cover all of the basic concepts for creating a Flet app: building a page layout, adding controls, making reusable UI components, handling events, and publishing options."}),"\n",(0,o.jsx)(t.p,{children:"The tutorial consists of the following steps:"}),"\n","\n",(0,o.jsx)(a.A,{toc:d,maxHeadingLevel:2}),"\n",(0,o.jsx)(t.h2,{id:"getting-started-with-flet",children:"Getting started with Flet"}),"\n",(0,o.jsx)(t.p,{children:"To create a multi-platform app in Python with Flet, you don't need to know HTML, CSS or JavaScript, but you do need a basic knowledge of Python and object-oriented programming."}),"\n",(0,o.jsxs)(t.p,{children:["Before you can create your first Flet app, you need to ",(0,o.jsx)(t.a,{href:"/docs/getting-started/",children:"setup your development environment"}),", which requires Python 3.9 or above and ",(0,o.jsx)(t.code,{children:"flet"})," package."]}),"\n",(0,o.jsxs)(t.p,{children:["Once you have Flet installed, let's ",(0,o.jsx)(t.a,{href:"/docs/getting-started/create-flet-app",children:"create"})," a simple hello-world app."]}),"\n",(0,o.jsxs)(t.p,{children:["Create ",(0,o.jsx)(t.code,{children:"hello.py"})," with the following contents:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    page.add(ft.Text(value="Hello, world!"))\n\nft.app(main)\n'})}),"\n",(0,o.jsx)(t.p,{children:"Run this app and you will see a new window with a greeting:"}),"\n",(0,o.jsx)("img",{src:"/docs/flet-doc/img/docs/tutorial/todo-app-hello-world.png",className:"screenshot-40"}),"\n",(0,o.jsx)(t.h2,{id:"adding-page-controls",children:"Adding page controls"}),"\n",(0,o.jsx)(t.p,{children:"Now you are ready to create a calculator app."}),"\n",(0,o.jsxs)(t.p,{children:["To start, you'll need a ",(0,o.jsx)(t.a,{href:"/docs/controls/text",children:"Text"})," control for showing the result of calculation, and a few ",(0,o.jsx)(t.a,{href:"/docs/controls/elevatedbutton",children:"ElevatedButtons"})," with all the numbers and actions on them."]}),"\n",(0,o.jsxs)(t.p,{children:["Create ",(0,o.jsx)(t.code,{children:"calc.py"})," with the following contents:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import flet as ft\n\n\ndef main(page: ft.Page):\n    page.title = "Calc App"\n    result = ft.Text(value="0")\n\n    page.add(\n        result,\n        ft.ElevatedButton(text="AC"),\n        ft.ElevatedButton(text="+/-"),\n        ft.ElevatedButton(text="%"),\n        ft.ElevatedButton(text="/"),\n        ft.ElevatedButton(text="7"),\n        ft.ElevatedButton(text="8"),\n        ft.ElevatedButton(text="9"),\n        ft.ElevatedButton(text="*"),\n        ft.ElevatedButton(text="4"),\n        ft.ElevatedButton(text="5"),\n        ft.ElevatedButton(text="6"),\n        ft.ElevatedButton(text="-"),\n        ft.ElevatedButton(text="1"),\n        ft.ElevatedButton(text="2"),\n        ft.ElevatedButton(text="3"),\n        ft.ElevatedButton(text="+"),\n        ft.ElevatedButton(text="0"),\n        ft.ElevatedButton(text="."),\n        ft.ElevatedButton(text="="),\n    )\n\n\nft.app(main)\n'})}),"\n",(0,o.jsx)(t.p,{children:"Run the app and you should see a page like this:"}),"\n",(0,o.jsx)("img",{src:"/docs/flet-doc/img/docs/calc-tutorial/calc-app-1.png",className:"screenshot-10"}),"\n",(0,o.jsx)(t.h2,{id:"building-page-layout",children:"Building page layout"}),"\n",(0,o.jsxs)(t.p,{children:["Now let's arrange the text and buttons in 6 horizontal ",(0,o.jsx)(t.a,{href:"/docs/controls/row",children:"rows"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["Replace ",(0,o.jsx)(t.code,{children:"calc.py"})," contents with the following:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import flet as ft\n\n\ndef main(page: ft.Page):\n    page.title = "Calc App"\n    result = ft.Text(value="0")\n\n    page.add(\n        ft.Row(controls=[result]),\n        ft.Row(\n            controls=[\n                ft.ElevatedButton(text="AC"),\n                ft.ElevatedButton(text="+/-"),\n                ft.ElevatedButton(text="%"),\n                ft.ElevatedButton(text="/"),\n            ]\n        ),\n        ft.Row(\n            controls=[\n                ft.ElevatedButton(text="7"),\n                ft.ElevatedButton(text="8"),\n                ft.ElevatedButton(text="9"),\n                ft.ElevatedButton(text="*"),\n            ]\n        ),\n        ft.Row(\n            controls=[\n                ft.ElevatedButton(text="4"),\n                ft.ElevatedButton(text="5"),\n                ft.ElevatedButton(text="6"),\n                ft.ElevatedButton(text="-"),\n            ]\n        ),\n        ft.Row(\n            controls=[\n                ft.ElevatedButton(text="1"),\n                ft.ElevatedButton(text="2"),\n                ft.ElevatedButton(text="3"),\n                ft.ElevatedButton(text="+"),\n            ]\n        ),\n        ft.Row(\n             controls=[\n                ft.ElevatedButton(text="0"),\n                ft.ElevatedButton(text="."),\n                ft.ElevatedButton(text="="),\n            ]\n        ),\n    )\n\n\nft.app(main)\n'})}),"\n",(0,o.jsx)(t.p,{children:"Run the app and you should see a page like this:"}),"\n",(0,o.jsx)("img",{src:"/docs/flet-doc/img/docs/calc-tutorial/calc-app-2.png",className:"screenshot-40"}),"\n",(0,o.jsx)(t.h3,{id:"using-container-for-decoration",children:"Using Container for decoration"}),"\n",(0,o.jsxs)(t.p,{children:["To add a black background with rounded border around the calculator, we will be using ",(0,o.jsx)(t.a,{href:"/docs/controls/container",children:"Container"})," control. Container may decorate only one control, so we will need to wrap all the 6 rows into a single vertical ",(0,o.jsx)(t.a,{href:"/docs/controls/container",children:"Column"})," that will be used as the container's ",(0,o.jsx)(t.code,{children:"content"}),":"]}),"\n",(0,o.jsx)("img",{src:"/docs/flet-doc/img/docs/calc-tutorial/container-layout.svg",className:"screenshot"}),"\n",(0,o.jsx)(t.p,{children:"Here is the code for adding the container to the page:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"    page.add(\n        ft.Container(\n            width=350,\n            bgcolor=ft.Colors.BLACK,\n            border_radius=ft.border_radius.all(20),\n            padding=20,\n            content=ft.Column(\n                controls=\n                    [] # Controls will the six rows with the text \n                       # and the calculator buttons.\n            )\n        )\n    )\n"})}),"\n",(0,o.jsx)(t.h3,{id:"styled-controls",children:"Styled Controls"}),"\n",(0,o.jsx)(t.p,{children:"To complete the UI portion of the program, we need to update style for result text and buttons to look similar to iPhone calculator app."}),"\n",(0,o.jsxs)(t.p,{children:["For the result text, let's specify its  ",(0,o.jsx)(t.code,{children:"color"})," and ",(0,o.jsx)(t.code,{children:"size"})," properties:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'result = ft.Text(value="0", color=ft.Colors.WHITE, size=20)\n'})}),"\n",(0,o.jsx)(t.p,{children:"For the buttons, if we look again at the UI we are aiming to achieve, there are 3 types of buttons:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Digit Buttons"}),". They have dark grey background color and white text, size is the same for all."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Action Buttons"}),".  They have orange background color and white text, size is the same for all except ",(0,o.jsx)(t.code,{children:"0"})," button which is twice as large."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Extra action buttons"}),". They have light grey background color and dark text, size is the same for all."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["The buttons will be used multiple time in the program, so we will be creating\ncustom ",(0,o.jsx)(t.a,{href:"/docs/getting-started/custom-controls#styled-controls",children:"Styled Controls"})," to reuse the code."]}),"\n",(0,o.jsxs)(t.p,{children:["Since all those types should inherit from ",(0,o.jsx)(t.code,{children:"ElevatedButton"})," class and have common ",(0,o.jsx)(t.code,{children:"text"})," and ",(0,o.jsx)(t.code,{children:"expand"})," properties, let's create a parent ",(0,o.jsx)(t.code,{children:"CalcButton"})," class:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"    class CalcButton(ft.ElevatedButton):\n        def __init__(self, text, expand=1):\n            super().__init__()\n            self.text = text\n            self.expand = expand\n"})}),"\n",(0,o.jsx)(t.p,{children:"Now let's create child classes for all three types of buttons:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"    class DigitButton(CalcButton):\n        def __init__(self, text, expand=1):\n            CalcButton.__init__(self, text, expand)\n            self.bgcolor = ft.Colors.WHITE24\n            self.color = ft.Colors.WHITE\n\n    class ActionButton(CalcButton):\n        def __init__(self, text):\n            CalcButton.__init__(self, text)\n            self.bgcolor = ft.Colors.ORANGE\n            self.color = ft.Colors.WHITE\n\n    class ExtraActionButton(CalcButton):\n        def __init__(self, text):\n            CalcButton.__init__(self, text)\n            self.bgcolor = ft.Colors.BLUE_GREY_100\n            self.color = ft.Colors.BLACK\n"})}),"\n",(0,o.jsx)(t.p,{children:"We will be using these new classes now to create rows of buttons in the Container:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'content=ft.Column(\n                controls=[\n                    ft.Row(controls=[result], alignment="end"),\n                    ft.Row(\n                        controls=[\n                            ExtraActionButton(text="AC"),\n                            ExtraActionButton(text="+/-"),\n                            ExtraActionButton(text="%"),\n                            ActionButton(text="/"),\n                        ]\n                    ),\n                    ft.Row(\n                        controls=[\n                            DigitButton(text="7"),\n                            DigitButton(text="8"),\n                            DigitButton(text="9"),\n                            ActionButton(text="*"),\n                        ]\n                    ),\n                    ft.Row(\n                        controls=[\n                            DigitButton(text="4"),\n                            DigitButton(text="5"),\n                            DigitButton(text="6"),\n                            ActionButton(text="-"),\n                        ]\n                    ),\n                    ft.Row(\n                        controls=[\n                            DigitButton(text="1"),\n                            DigitButton(text="2"),\n                            DigitButton(text="3"),\n                            ActionButton(text="+"),\n                        ]\n                    ),\n                    ft.Row(\n                        controls=[\n                            DigitButton(text="0", expand=2),\n                            DigitButton(text="."),\n                            ActionButton(text="="),\n                        ]\n                    ),\n                ]\n            ),\n'})}),"\n",(0,o.jsxs)(t.p,{children:["Since the program is too long now to be fully included in this tutorial, copy the entire code for this step from ",(0,o.jsx)(t.a,{href:"https://github.com/flet-dev/examples/blob/main/python/tutorials/calc/calc3.py",children:"here"}),". Run the app and you should see a page like this:"]}),"\n",(0,o.jsx)("img",{src:"/docs/flet-doc/img/docs/calc-tutorial/calc-app.png",className:"screenshot-40"}),"\n",(0,o.jsx)(t.p,{children:"Just what we wanted!"}),"\n",(0,o.jsx)(t.h2,{id:"reusable-ui-components",children:"Reusable UI components"}),"\n",(0,o.jsxs)(t.p,{children:["While you can continue writing your app in the ",(0,o.jsx)(t.code,{children:"main"})," function, the best practice would be to create a ",(0,o.jsx)(t.a,{href:"/docs/getting-started/custom-controls#composite-controls",children:"reusable UI component"}),"."]}),"\n",(0,o.jsx)(t.p,{children:'Imagine you are working on an app header, a side menu, or UI that will be a part of a larger project (for example, at Flet we will be using this Calculator app in a bigger "Gallery" app that will show all the examples for Flet framework).'}),"\n",(0,o.jsx)(t.p,{children:"Even if you can't think of such uses right now, we still recommend creating all your Flet apps with composability and reusability in mind."}),"\n",(0,o.jsxs)(t.p,{children:["To make a reusable Calc app component, we are going to encapsulate its state and presentation logic in a separate ",(0,o.jsx)(t.code,{children:"CalculatorApp"})," class. Copy the entire code for this step from ",(0,o.jsx)(t.a,{href:"https://github.com/flet-dev/examples/blob/main/python/tutorials/calc/calc4.py",children:"here"}),"."]}),"\n",(0,o.jsxs)(t.admonition,{title:"Try something",type:"note",children:[(0,o.jsxs)(t.p,{children:["Try adding two ",(0,o.jsx)(t.code,{children:"CalculatorApp"})," components to the page:"]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"# create application instance\ncalc1 = CalculatorApp()\ncalc2 = CalculatorApp()\n\n# add application's root control to the page\npage.add(calc1, calc2)\n"})})]}),"\n",(0,o.jsx)(t.h2,{id:"handling-events",children:"Handling events"}),"\n",(0,o.jsxs)(t.p,{children:["Now let's make the calculator do its job. We will be using the same event handler for all the buttons and use ",(0,o.jsx)(t.code,{children:"data"})," property to differentiate between the actions depending on the button clicked. For ",(0,o.jsx)(t.code,{children:"CalcButton"})," class, let's specify ",(0,o.jsx)(t.code,{children:"on_click=button_clicked"})," event and set ",(0,o.jsx)(t.code,{children:"data"})," property equal to button's text:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class CalcButton(ft.ElevatedButton):\n    def __init__(self, text, button_clicked, expand=1):\n        super().__init__()\n        self.text = text\n        self.expand = expand\n        self.on_click = button_clicked\n        self.data = text\n"})}),"\n",(0,o.jsxs)(t.p,{children:["We will define ",(0,o.jsx)(t.code,{children:"button_click"})," method in ",(0,o.jsx)(t.code,{children:"CalculatorClass"})," and pass it to each button. Below is ",(0,o.jsx)(t.code,{children:"on_click"}),' event handler that will reset the Text value when "AC" button is clicked:']}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'def button_clicked(self, e):\n    if e.control.data == "AC":\n        self.result.value = "0"\n'})}),"\n",(0,o.jsxs)(t.p,{children:["With similar approach, ",(0,o.jsx)(t.code,{children:"button_click"})," method will handle different calculator actions depending on ",(0,o.jsx)(t.code,{children:"data"})," property for each button. Copy the entire code for this step from ",(0,o.jsx)(t.a,{href:"https://github.com/flet-dev/examples/blob/main/python/tutorials/calc/calc.py",children:"here"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"Run the app and see it in the action:"}),"\n",(0,o.jsx)("img",{src:"/docs/flet-doc/img/docs/calc-tutorial/calc-app.gif",className:"screenshot-40"}),"\n",(0,o.jsx)(t.h2,{id:"publishing-your-app",children:"Publishing your app"}),"\n",(0,o.jsx)(t.p,{children:"Congratulations! You have created your Calculator app with Flet, and it looks awesome! Now it's time to share your app with the world!"}),"\n",(0,o.jsxs)(t.p,{children:["Flet Python app and all its dependencies can be packaged into a standalone executable a package for distribution using ",(0,o.jsx)(t.code,{children:"flet build"})," command."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"/docs/publish",children:"Follow these instructions"})," to package your Calculator app into a desktop executable, mobile app bundle or web app."]}),"\n",(0,o.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(t.p,{children:"In this tutorial you have learned how to:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"/docs/getting-started/create-flet-app",children:"Create"})," a simple Flet app;"]}),"\n",(0,o.jsxs)(t.li,{children:["Work with ",(0,o.jsx)(t.a,{href:"/docs/getting-started/custom-controls",children:"Reusable UI components"}),";"]}),"\n",(0,o.jsxs)(t.li,{children:["Design UI layout using ",(0,o.jsx)(t.code,{children:"Column"}),", ",(0,o.jsx)(t.code,{children:"Row"})," and ",(0,o.jsx)(t.code,{children:"Container"})," controls;"]}),"\n",(0,o.jsx)(t.li,{children:"Handle events;"}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"/docs/publish/",children:"Publish"})," your Flet app to multiple platforms;"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["For further reading you can explore ",(0,o.jsx)(t.a,{href:"/docs/controls",children:"controls"})," and ",(0,o.jsx)(t.a,{href:"https://github.com/flet-dev/examples/tree/main/python",children:"examples repository"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["We would love to hear your feedback! Please drop us an ",(0,o.jsx)(t.a,{href:"mailto:hello@flet.dev",children:"email"}),", join the discussion on ",(0,o.jsx)(t.a,{href:"https://discord.gg/dzWXP8SHG8",children:"Discord"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},14252:(e,t,n)=>{n.d(t,{A:()=>s});n(96540);var o=n(65195);const l={tableOfContentsInline:"tableOfContentsInline_prmo"};var a=n(74848);function s(e){let{toc:t,minHeadingLevel:n,maxHeadingLevel:s}=e;return(0,a.jsx)("div",{className:l.tableOfContentsInline,children:(0,a.jsx)(o.A,{toc:t,minHeadingLevel:n,maxHeadingLevel:s,className:"table-of-contents",linkClassName:null})})}},65195:(e,t,n)=>{n.d(t,{A:()=>f});var o=n(96540),l=n(6342);function a(e){const t=e.map((e=>({...e,parentIndex:-1,children:[]}))),n=Array(7).fill(-1);t.forEach(((e,t)=>{const o=n.slice(2,e.level);e.parentIndex=Math.max(...o),n[e.level]=t}));const o=[];return t.forEach((e=>{const{parentIndex:n,...l}=e;n>=0?t[n].children.push(l):o.push(l)})),o}function s(e){let{toc:t,minHeadingLevel:n,maxHeadingLevel:o}=e;return t.flatMap((e=>{const t=s({toc:e.children,minHeadingLevel:n,maxHeadingLevel:o});return function(e){return e.level>=n&&e.level<=o}(e)?[{...e,children:t}]:t}))}function i(e){const t=e.getBoundingClientRect();return t.top===t.bottom?i(e.parentNode):t}function r(e,t){var n;let{anchorTopOffset:o}=t;const l=e.find((e=>i(e).top>=o));if(l){var a;return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(i(l))?l:null!=(a=e[e.indexOf(l)-1])?a:null}return null!=(n=e[e.length-1])?n:null}function c(){const e=(0,o.useRef)(0),{navbar:{hideOnScroll:t}}=(0,l.p)();return(0,o.useEffect)((()=>{e.current=t?0:document.querySelector(".navbar").clientHeight}),[t]),e}function d(e){const t=(0,o.useRef)(void 0),n=c();(0,o.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:o,linkActiveClassName:l,minHeadingLevel:a,maxHeadingLevel:s}=e;function i(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(o),i=function(e){let{minHeadingLevel:t,maxHeadingLevel:n}=e;const o=[];for(let l=t;l<=n;l+=1)o.push("h"+l+".anchor");return Array.from(document.querySelectorAll(o.join()))}({minHeadingLevel:a,maxHeadingLevel:s}),c=r(i,{anchorTopOffset:n.current}),d=e.find((e=>c&&c.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,n){n?(t.current&&t.current!==e&&t.current.classList.remove(l),e.classList.add(l),t.current=e):e.classList.remove(l)}(e,e===d)}))}return document.addEventListener("scroll",i),document.addEventListener("resize",i),i(),()=>{document.removeEventListener("scroll",i),document.removeEventListener("resize",i)}}),[e,n])}var u=n(28774),h=n(74848);function p(e){let{toc:t,className:n,linkClassName:o,isChild:l}=e;return t.length?(0,h.jsx)("ul",{className:l?void 0:n,children:t.map((e=>(0,h.jsxs)("li",{children:[(0,h.jsx)(u.A,{to:"#"+e.id,className:null!=o?o:void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,h.jsx)(p,{isChild:!0,toc:e.children,className:n,linkClassName:o})]},e.id)))}):null}const x=o.memo(p);function f(e){let{toc:t,className:n="table-of-contents table-of-contents__left-border",linkClassName:i="table-of-contents__link",linkActiveClassName:r,minHeadingLevel:c,maxHeadingLevel:u,...p}=e;const f=(0,l.p)(),g=null!=c?c:f.tableOfContents.minHeadingLevel,m=null!=u?u:f.tableOfContents.maxHeadingLevel,v=function(e){let{toc:t,minHeadingLevel:n,maxHeadingLevel:l}=e;return(0,o.useMemo)((()=>s({toc:a(t),minHeadingLevel:n,maxHeadingLevel:l})),[t,n,l])}({toc:t,minHeadingLevel:g,maxHeadingLevel:m});return d((0,o.useMemo)((()=>{if(i&&r)return{linkClassName:i,linkActiveClassName:r,minHeadingLevel:g,maxHeadingLevel:m}}),[i,r,g,m])),(0,h.jsx)(x,{toc:v,className:n,linkClassName:i,...p})}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var o=n(96540);const l={},a=o.createContext(l);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);