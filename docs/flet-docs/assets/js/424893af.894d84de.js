"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[15480],{55197:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var s=i(74848),l=i(28453);const r={title:"Publishing Flet app to multiple platforms",slug:"/publish"},o=void 0,d={id:"publish/index",title:"Publishing Flet app to multiple platforms",description:"Introduction",source:"@site/docs/publish/index.md",sourceDirName:"publish",slug:"/publish",permalink:"/flet-docs/docs/publish",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/publish/index.md",tags:[],version:"current",frontMatter:{title:"Publishing Flet app to multiple platforms",slug:"/publish"},sidebar:"docs",previous:{title:"Async apps",permalink:"/flet-docs/docs/getting-started/async-apps"},next:{title:"Android",permalink:"/flet-docs/docs/publish/android"}},t={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Platform matrix",id:"platform-matrix",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Flutter SDK",id:"flutter-sdk",level:3},{value:"Project structure",id:"project-structure",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Including optional controls",id:"including-optional-controls",level:2},{value:"Icons",id:"icons",level:2},{value:"Splash screen",id:"splash-screen",level:2},{value:"Entry point",id:"entry-point",level:2},{value:"Compilation and cleanup",id:"compilation-and-cleanup",level:2},{value:"Permissions",id:"permissions",level:2},{value:"Cross-platform permissions",id:"cross-platform-permissions",level:3},{value:"iOS mapping to <code>Info.plist</code> entries",id:"ios-mapping-to-infoplist-entries",level:4},{value:"macOS mapping to entitlements",id:"macos-mapping-to-entitlements",level:4},{value:"Android mappings",id:"android-mappings",level:4},{value:"Versioning",id:"versioning",level:2},{value:"Customizing packaging template",id:"customizing-packaging-template",level:2},{value:"Extra args to <code>flutter build</code> command",id:"extra-args-to-flutter-build-command",level:2},{value:"Verbose logging",id:"verbose-logging",level:2},{value:"Console output",id:"console-output",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:["Flet CLI provides ",(0,s.jsx)(n.code,{children:"flet build"})," command that allows packaging Flet app into a standalone executable or install package for distribution."]}),"\n",(0,s.jsx)(n.h2,{id:"platform-matrix",children:"Platform matrix"}),"\n",(0,s.jsxs)(n.p,{children:["The following matrix shows which OS you should run ",(0,s.jsx)(n.code,{children:"flet build"})," command on in order to build a package for specific platform:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.th,{style:{textAlign:"center"},children:["Run on / ",(0,s.jsx)(n.code,{children:"flet build"})]}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"apk/aab"})}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"ipa"})}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"macos"})}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"linux"})}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"windows"})}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"web"})})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"macOS"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(n.td,{style:{textAlign:"center"}}),(0,s.jsx)(n.td,{style:{textAlign:"center"}}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Windows"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(n.td,{style:{textAlign:"center"}}),(0,s.jsx)(n.td,{style:{textAlign:"center"}}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705 (WSL)"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Linux"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(n.td,{style:{textAlign:"center"}}),(0,s.jsx)(n.td,{style:{textAlign:"center"}}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(n.td,{style:{textAlign:"center"}}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.h3,{id:"flutter-sdk",children:"Flutter SDK"}),"\n",(0,s.jsxs)(n.p,{children:["If the correct version of the Flutter SDK is not found in the ",(0,s.jsx)(n.code,{children:"PATH"}),", it will be automatically installed during the first run when building a Flet app for any platform."]}),"\n",(0,s.jsxs)(n.p,{children:["Flutter SDK is installed into ",(0,s.jsx)(n.code,{children:"$HOME/flutter/{version}"})," directory."]}),"\n",(0,s.jsx)(n.h2,{id:"project-structure",children:"Project structure"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"flet build"})," command assumes the following minimal Flet project structure:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 pyproject.toml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 assets\n    \u2502   \u2514\u2500\u2500 icon.png\n    \u2514\u2500\u2500 main.py\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"main.py"})," is the entry point of your Flet application with ",(0,s.jsx)(n.code,{children:"ft.app(main)"})," at the end. A different entry point could be specified with ",(0,s.jsx)(n.code,{children:"--module-name"})," argument."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"assets"})," is an optional directory that contains application assets (images, sound, text and other files required by your app) as well as images used for package icons and splash screens."]}),"\n",(0,s.jsxs)(n.p,{children:["If only ",(0,s.jsx)(n.code,{children:"icon.png"})," (or other supported format such as ",(0,s.jsx)(n.code,{children:".bmp"}),", ",(0,s.jsx)(n.code,{children:".jpg"}),", ",(0,s.jsx)(n.code,{children:".webp"}),") is provided it will be used as a source image to generate all icons and splash screens for all platforms. See section below for more information about icons and splashes."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"pyproject.toml"})," contains the application metadata, lists its dependencies and controls build process. The list of project dependencies should contain at least ",(0,s.jsx)(n.code,{children:"flet"})," package:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'title="pyproject.toml"',children:'[project]\nname = "myapp"\nversion = "0.1.0"\ndescription = ""\nreadme = "README.md"\nrequires-python = ">=3.9"\nauthors = [\n    { name = "Flet developer", email = "you@example.com" }\n]\ndependencies = [\n  "flet"\n]\n\n[tool.flet]\norg = "com.mycompany"\nproduct = "MyApp"\ncompany = "My Company"\ncopyright = "Copyright (C) 2025 by My Company"\n\n[tool.flet.app]\npath = "src"\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Though ",(0,s.jsx)(n.code,{children:"requirements.txt"})," can also be used to list app requirements Flet recommends using ",(0,s.jsx)(n.code,{children:"pyproject.toml"})," for new projects. If both ",(0,s.jsx)(n.code,{children:"pyproject.toml"})," and ",(0,s.jsx)(n.code,{children:"requirements.txt"})," exist the latter will be ignored."]})}),"\n",(0,s.jsxs)(n.admonition,{title:"No pip freeze",type:"caution",children:[(0,s.jsxs)(n.p,{children:["Do not use ",(0,s.jsx)(n.code,{children:"pip freeze > requirements.txt"})," command to create ",(0,s.jsx)(n.code,{children:"requirements.txt"})," for the app that\nwill be running on mobile. As you run ",(0,s.jsx)(n.code,{children:"pip freeze"})," command on a desktop ",(0,s.jsx)(n.code,{children:"requirements.txt"})," will have\ndependencies that are not intended to work on a mobile device, such as ",(0,s.jsx)(n.code,{children:"watchdog"}),"."]}),(0,s.jsxs)(n.p,{children:["Hand-pick ",(0,s.jsx)(n.code,{children:"requirements.txt"})," to have only direct dependencies required by your app, plus ",(0,s.jsx)(n.code,{children:"flet"}),"."]})]}),"\n",(0,s.jsxs)(n.p,{children:["The easiest way to start with the right project structure is to use ",(0,s.jsx)(n.code,{children:"flet create"})," command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"flet create myapp\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"myapp"})," is a target directory."]}),"\n",(0,s.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"flet build <target_platform>"})," command could be run from the root of Flet app directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"<flet_app_directory> % flet build <target_platform>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"<target_platform>"})," could be one of the following: ",(0,s.jsx)(n.code,{children:"apk"}),", ",(0,s.jsx)(n.code,{children:"aab"}),", ",(0,s.jsx)(n.code,{children:"ipa"}),", ",(0,s.jsx)(n.code,{children:"web"}),", ",(0,s.jsx)(n.code,{children:"macos"}),", ",(0,s.jsx)(n.code,{children:"windows"}),", ",(0,s.jsx)(n.code,{children:"linux"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"When running from a different directory you can provide the path to a directory with Flet app:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"flet build <target_platform> <path_to_python_app>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Build results are copied to ",(0,s.jsx)(n.code,{children:"<python_app_directory>/build/<target_platform>"}),". You can specify a custom output directory with ",(0,s.jsx)(n.code,{children:"--output"})," option:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"flet build <target_platform> --output <path-to-output-dir>\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"flet build"})," uses Flutter SDK and the number of Flutter packages to build a distribution package from your Flet app."]}),"\n",(0,s.jsxs)(n.p,{children:["When you run ",(0,s.jsx)(n.code,{children:"flet build <target_platform>"})," command it:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Creates a new Flutter project in ",(0,s.jsx)(n.code,{children:"{flet_app_directory}/build/flutter"})," directory from ",(0,s.jsx)(n.a,{href:"https://github.com/flet-dev/flet-build-template",children:"https://github.com/flet-dev/flet-build-template"})," template. Flutter app will contain a packaged Python app in the assets and use ",(0,s.jsx)(n.code,{children:"flet"})," and ",(0,s.jsx)(n.code,{children:"serious_python"})," packages to run Python app and render its UI respectively. The project is ephemeral and deleted upon completion."]}),"\n",(0,s.jsxs)(n.li,{children:["Copies custom icons and splash images (see below) from ",(0,s.jsx)(n.code,{children:"assets"})," directory into a Flutter project."]}),"\n",(0,s.jsxs)(n.li,{children:["Generates icons for all platforms using ",(0,s.jsx)(n.a,{href:"https://pub.dev/packages/flutter_launcher_icons",children:(0,s.jsx)(n.code,{children:"flutter_launcher_icons"})})," package."]}),"\n",(0,s.jsxs)(n.li,{children:["Generates splash screens for web, iOS and Android targets using ",(0,s.jsx)(n.a,{href:"https://pub.dev/packages/flutter_native_splash",children:(0,s.jsx)(n.code,{children:"flutter_native_splash"})})," package."]}),"\n",(0,s.jsxs)(n.li,{children:["Packages Python app using ",(0,s.jsx)(n.code,{children:"package"})," command of ",(0,s.jsx)(n.a,{href:"https://pub.dev/packages/serious_python",children:(0,s.jsx)(n.code,{children:"serious_python"})})," package. ",(0,s.jsx)(n.code,{children:"package"})," command installs pure and binary Python packages from ",(0,s.jsx)(n.a,{href:"https://pypi.org",children:"https://pypi.org"})," and ",(0,s.jsx)(n.a,{href:"https://pypi.flet.dev",children:"https://pypi.flet.dev"})," for selected platform. If configured, ",(0,s.jsx)(n.code,{children:".py"})," files of installed packages and/or application will be compiled to ",(0,s.jsx)(n.code,{children:".pyc"})," files. All files, except ",(0,s.jsx)(n.code,{children:"build"})," directory will be added to a package asset."]}),"\n",(0,s.jsxs)(n.li,{children:["Runs ",(0,s.jsx)(n.code,{children:"flutter build <target_platform>"})," command to produce an executable or an install package."]}),"\n",(0,s.jsxs)(n.li,{children:["Copies build results to ",(0,s.jsx)(n.code,{children:"{flet_app_directory}/build/<target_platform>"})," directory."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"including-optional-controls",children:"Including optional controls"}),"\n",(0,s.jsx)(n.p,{children:"If your app uses the following controls their packages must be added to a build command:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ad controls (",(0,s.jsx)(n.code,{children:"BannerAd"})," and ",(0,s.jsx)(n.code,{children:"InterstitialAd"}),") implemented in ",(0,s.jsx)(n.code,{children:"flet_ads"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/audio",children:(0,s.jsx)(n.code,{children:"Audio"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_audio"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/audiorecorder",children:(0,s.jsx)(n.code,{children:"AudioRecorder"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_audio_recorder"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/flashlight",children:(0,s.jsx)(n.code,{children:"Flashlight"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_flashlight"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/geolocator",children:(0,s.jsx)(n.code,{children:"Geolocator"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_geolocator"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/lottie",children:(0,s.jsx)(n.code,{children:"Lottie"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_lottie"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/map",children:(0,s.jsx)(n.code,{children:"Map"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_map"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/permissionhandler",children:(0,s.jsx)(n.code,{children:"PermissionHandler"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_permission_handler"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/rive",children:(0,s.jsx)(n.code,{children:"Rive"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_rive"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/video",children:(0,s.jsx)(n.code,{children:"Video"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_video"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/controls/webview",children:(0,s.jsx)(n.code,{children:"WebView"})})," control implemented in ",(0,s.jsx)(n.code,{children:"flet_webview"})," package."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"--include-packages <package_1> <package_2> ..."})," option to add Flutter packages with optional\nFlet controls or use ",(0,s.jsx)(n.code,{children:"tool.flet.flutter.dependencies"})," section in ",(0,s.jsx)(n.code,{children:"pyproject.toml"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, to build your Flet app with ",(0,s.jsx)(n.code,{children:"Video"})," and ",(0,s.jsx)(n.code,{children:"Audio"})," controls add ",(0,s.jsx)(n.code,{children:"--include-packages flet_video flet_audio"})," to your ",(0,s.jsx)(n.code,{children:"flet build"})," command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"flet build apk --include-packages flet_video flet_audio\n"})}),"\n",(0,s.jsxs)(n.p,{children:["or the same in ",(0,s.jsx)(n.code,{children:"pyproject.toml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'flutter.dependencies = ["flet_video", "flet_audio"]\n'})}),"\n",(0,s.jsx)(n.p,{children:"or an alternative syntax with versions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[tool.flet.flutter.dependencies]\nflet_video = "1.0.0"\nflet_audio = "2.0.0"\n'})}),"\n",(0,s.jsx)(n.p,{children:"or with path to the package on your disk:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[tool.flet.flutter.dependencies.my_package]\npath = "/path/to/my_package"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"icons",children:"Icons"}),"\n",(0,s.jsxs)(n.p,{children:["You can customize app icons for all platforms (excluding Linux) with images in ",(0,s.jsx)(n.code,{children:"assets"})," directory of your Flet app."]}),"\n",(0,s.jsxs)(n.p,{children:["If only ",(0,s.jsx)(n.code,{children:"icon.png"})," (or other supported format such as ",(0,s.jsx)(n.code,{children:".bmp"}),", ",(0,s.jsx)(n.code,{children:".jpg"}),", ",(0,s.jsx)(n.code,{children:".webp"}),") is provided it will be used as a source image to generate all icons."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"iOS"})," - ",(0,s.jsx)(n.code,{children:"icon_ios.png"})," (or any supported image format). Recommended minimum image size is 1024 px. Image should not be transparent (have alpha channel). Defaults to ",(0,s.jsx)(n.code,{children:"icon.png"})," with alpha-channel automatically removed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Android"})," - ",(0,s.jsx)(n.code,{children:"icon_android.png"})," (or any supported image format). Recommended minimum image size is 192 px. Defaults to ",(0,s.jsx)(n.code,{children:"icon.png"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Web"})," - ",(0,s.jsx)(n.code,{children:"icon_web.png"})," (or any supported image format). Recommended minimum image size is 512 px. Defaults to ",(0,s.jsx)(n.code,{children:"icon.png"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Windows"})," - ",(0,s.jsx)(n.code,{children:"icon_windows.png"})," (or any supported image format). ICO will be produced of 256 px size. Defaults to ",(0,s.jsx)(n.code,{children:"icon.png"}),". If ",(0,s.jsx)(n.code,{children:"icon_windows.ico"})," file is provided it will be just copied to ",(0,s.jsx)(n.code,{children:"windows/runner/resources/app_icon.ico"})," unmodified."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"macOS"})," - ",(0,s.jsx)(n.code,{children:"icon_macos.png"})," (or any supported image format). Recommended minimum image size is 1024 px. Defaults to ",(0,s.jsx)(n.code,{children:"icon.png"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"splash-screen",children:"Splash screen"}),"\n",(0,s.jsxs)(n.p,{children:["You can customize splash screens for iOS, Android and web applications with images in ",(0,s.jsx)(n.code,{children:"assets"})," directory of your Flet app."]}),"\n",(0,s.jsxs)(n.p,{children:["If only ",(0,s.jsx)(n.code,{children:"splash.png"})," or ",(0,s.jsx)(n.code,{children:"icon.png"})," (or other supported format such as ",(0,s.jsx)(n.code,{children:".bmp"}),", ",(0,s.jsx)(n.code,{children:".jpg"}),", ",(0,s.jsx)(n.code,{children:".webp"}),") is provided it will be used as a source image to generate all splash screen."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"iOS (light)"})," - ",(0,s.jsx)(n.code,{children:"splash_ios.png"})," (or any supported image format). Defaults to ",(0,s.jsx)(n.code,{children:"splash.png"})," and then ",(0,s.jsx)(n.code,{children:"icon.png"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"iOS (dark)"})," - ",(0,s.jsx)(n.code,{children:"splash_dark_ios.png"})," (or any supported image format). Defaults to light iOS splash, then to ",(0,s.jsx)(n.code,{children:"splash_dark.png"}),", then to ",(0,s.jsx)(n.code,{children:"splash.png"})," and then ",(0,s.jsx)(n.code,{children:"icon.png"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Android (light)"})," - ",(0,s.jsx)(n.code,{children:"splash_android.png"})," (or any supported image format). Defaults to ",(0,s.jsx)(n.code,{children:"splash.png"})," and then ",(0,s.jsx)(n.code,{children:"icon.png"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Android (dark)"})," - ",(0,s.jsx)(n.code,{children:"splash_dark_android.png"})," (or any supported image format).  Defaults to light Android splash, then to ",(0,s.jsx)(n.code,{children:"splash_dark.png"}),", then to ",(0,s.jsx)(n.code,{children:"splash.png"})," and then ",(0,s.jsx)(n.code,{children:"icon.png"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Web (light)"})," - ",(0,s.jsx)(n.code,{children:"splash_web.png"})," (or any supported image format). Defaults to ",(0,s.jsx)(n.code,{children:"splash.png"})," and then ",(0,s.jsx)(n.code,{children:"icon.png"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Web (dark)"})," - ",(0,s.jsx)(n.code,{children:"splash_dark_web.png"})," (or any supported image format). Defaults to light web splash, then ",(0,s.jsx)(n.code,{children:"splash_dark.png"}),", then to ",(0,s.jsx)(n.code,{children:"splash.png"})," and then ",(0,s.jsx)(n.code,{children:"icon.png"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--splash-color"})," option specifies background color for a splash screen in light mode. Defaults to ",(0,s.jsx)(n.code,{children:"#ffffff"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--splash-dark-color"})," option specifies background color for a splash screen in dark mode. Defaults to ",(0,s.jsx)(n.code,{children:"#333333"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Configuring splash settings in ",(0,s.jsx)(n.code,{children:"pyproject.toml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[tool.flet.splash]\ncolor = "#FFFF00" # --splash-color\ndark_color = "#8B8000" # --splash-dark-color\nweb = false # --no-web-splash\nios = false # --no-ios-splash\nandroid = false # --no-android-splash\n'})}),"\n",(0,s.jsx)(n.h2,{id:"entry-point",children:"Entry point"}),"\n",(0,s.jsxs)(n.p,{children:["By default, ",(0,s.jsx)(n.code,{children:"flet build"})," command assumes ",(0,s.jsx)(n.code,{children:"main.py"})," as the entry point of your Flet application, i.e. the file with ",(0,s.jsx)(n.code,{children:"ft.app(main)"})," at the end. A different entry point could be specified with ",(0,s.jsx)(n.code,{children:"--module-name"})," argument or in ",(0,s.jsx)(n.code,{children:"pyproject.toml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[tool.flet]\napp.module = "main"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"compilation-and-cleanup",children:"Compilation and cleanup"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"flet build"})," command is not compiling app ",(0,s.jsx)(n.code,{children:".py"})," files into ",(0,s.jsx)(n.code,{children:".pyc"})," by default which allows you to avoid (or defer?) discovery of any syntax errors in your app and successfully complete the packaging."]}),"\n",(0,s.jsx)(n.p,{children:"You can enable the compilation and cleanup with the following new options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--compile-app"})," - compile app's ",(0,s.jsx)(n.code,{children:".py"})," files."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--compile-packages"})," - compile installed packages' ",(0,s.jsx)(n.code,{children:".py"})," files."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--cleanup-on-compile"})," - remove unnecessary files upon successful compilation."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Configuring compilation in ",(0,s.jsx)(n.code,{children:"pyproject.toml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:"[tool.flet]\ncompile.app = true # --compile-app\ncompile.packages = true # --compile-packages\ncompile.cleanup = true # --cleanup-on-compile\n"})}),"\n",(0,s.jsx)(n.h2,{id:"permissions",children:"Permissions"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"flet build"})," command allows granular control over permissions, features and entitlements embedded into ",(0,s.jsx)(n.code,{children:"AndroidManifest.xml"}),", ",(0,s.jsx)(n.code,{children:"Info.plist"})," and ",(0,s.jsx)(n.code,{children:".entitlements"})," files."]}),"\n",(0,s.jsxs)(n.p,{children:["See platform guides for setting specific ",(0,s.jsx)(n.a,{href:"/docs/publish/ios",children:"iOS"}),", ",(0,s.jsx)(n.a,{href:"/docs/publish/android",children:"Android"})," and ",(0,s.jsx)(n.a,{href:"/docs/publish/macos",children:"macOS"})," permissions."]}),"\n",(0,s.jsx)(n.h3,{id:"cross-platform-permissions",children:"Cross-platform permissions"}),"\n",(0,s.jsxs)(n.p,{children:["There are pre-defined permissions that mapped to ",(0,s.jsx)(n.code,{children:"Info.plist"}),", ",(0,s.jsx)(n.code,{children:"*.entitlements"})," and ",(0,s.jsx)(n.code,{children:"AndroidManifest.xml"})," for respective platforms."]}),"\n",(0,s.jsx)(n.p,{children:"Setting cross-platform permissions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"flet build --permissions permission_1 permission_2 ...\n"})}),"\n",(0,s.jsx)(n.p,{children:"Supported permissions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"location"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"camera"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"microphone"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"photo_library"})}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"ios-mapping-to-infoplist-entries",children:["iOS mapping to ",(0,s.jsx)(n.code,{children:"Info.plist"})," entries"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"location"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"NSLocationWhenInUseUsageDescription = This app uses location service when in use."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"NSLocationAlwaysAndWhenInUseUsageDescription = This app uses location service."})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"camera"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"NSCameraUsageDescription = This app uses the camera to capture photos and videos."})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"microphone"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"NSMicrophoneUsageDescription = This app uses microphone to record sounds."})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"photo_library"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"NSPhotoLibraryUsageDescription = This app saves photos and videos to the photo library."})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"macos-mapping-to-entitlements",children:"macOS mapping to entitlements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"location"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"com.apple.security.personal-information.location = True"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"camera"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"com.apple.security.device.camera = True"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"microphone"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"com.apple.security.device.audio-input = True"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"photo_library"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"com.apple.security.personal-information.photos-library = True"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"android-mappings",children:"Android mappings"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"location"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["permissions:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.permission.ACCESS_FINE_LOCATION": True'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.permission.ACCESS_COARSE_LOCATION": True'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.permission.ACCESS_BACKGROUND_LOCATION": True'})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["features:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.hardware.location.network": False'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.hardware.location.gps": False'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"camera"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["permissions:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.permission.CAMERA": True'})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["features:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.hardware.camera": False'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.hardware.camera.any": False'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.hardware.camera.front": False'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.hardware.camera.external": False'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.hardware.camera.autofocus": False'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"microphone"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["permissions:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.permission.RECORD_AUDIO": True'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.permission.WRITE_EXTERNAL_STORAGE": True'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.permission.READ_EXTERNAL_STORAGE": True'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"photo_library"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["permissions:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'android.permission.READ_MEDIA_VISUAL_USER_SELECTED": True'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Configuring cross-platform permissions in ",(0,s.jsx)(n.code,{children:"pyproject.toml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[tool.flet]\npermissions = ["camera", "microphone"]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"versioning",children:"Versioning"}),"\n",(0,s.jsxs)(n.p,{children:["You can provide a version information for built executable or package with ",(0,s.jsx)(n.code,{children:"--build-number"})," and ",(0,s.jsx)(n.code,{children:"--build-version"})," arguments. This is the information that is used to distinguish one build/release from another in App Store and Google Play and is shown to the user in about dialogs."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--build-number"})," - an integer number (defaults to ",(0,s.jsx)(n.code,{children:"1"}),"), an identifier used as an internal version number.\nEach build must have a unique identifier to differentiate it from previous builds.\nIt is used to determine whether one build is more recent than another, with higher numbers indicating\nmore recent build."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--build-version"}),' - a "x.y.z" string (defaults to ',(0,s.jsx)(n.code,{children:"1.0.0"}),") used as the version number shown to users. For each new\nversion of your app, you will provide a version number to differentiate it from previous versions."]}),"\n",(0,s.jsxs)(n.p,{children:["Configuring display version and version number in ",(0,s.jsx)(n.code,{children:"pyproject.toml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[project]\nname = "my_app"\nversion = "1.0.0"\ndescription = "My Flet app"\nauthors = [\n  {name = "John Smith", email = "john@email.com"}\n]\ndependencies = ["flet==0.25.0"]\n\n[tool.flet]\nbuild_number = 1\n'})}),"\n",(0,s.jsx)(n.h2,{id:"customizing-packaging-template",children:"Customizing packaging template"}),"\n",(0,s.jsxs)(n.p,{children:["To create a temporary Flutter project ",(0,s.jsx)(n.code,{children:"flet build"})," uses ",(0,s.jsx)(n.a,{href:"https://cookiecutter.readthedocs.io/en/stable/",children:"cookiecutter"})," template stored in ",(0,s.jsx)(n.a,{href:"https://github.com/flet-dev/flet-build-template",children:"https://github.com/flet-dev/flet-build-template"})," repository."]}),"\n",(0,s.jsxs)(n.p,{children:["You can customize that template to suit your specific needs and then use it with ",(0,s.jsx)(n.code,{children:"flet build"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--template"})," option can be used to provide the URL to the repository or path to a directory with your own template. Use ",(0,s.jsx)(n.code,{children:"gh:"})," prefix for GitHub repos, e.g. ",(0,s.jsx)(n.code,{children:"gh:{my-org}/{my-repo}"})," or provide a full path to a Git repository, e.g. ",(0,s.jsx)(n.code,{children:"https://github.com/{my-org}/{my-repo}.git"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For Git repositories you can checkout specific branch/tag/commit with ",(0,s.jsx)(n.code,{children:"--template-ref"})," option."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--template-dir"})," option specifies a relative path to a cookiecutter template in a repository given by ",(0,s.jsx)(n.code,{children:"--template"})," option. When ",(0,s.jsx)(n.code,{children:"--template"})," option is not used, this option specifies path relative to the ",(0,s.jsx)(n.code,{children:"<user-directory>/.cookiecutters/flet-build-template"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Configuring template in ",(0,s.jsx)(n.code,{children:"pyproject.toml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[tool.flet.template]\npath = "gh:some-github/repo" # --template\ndir = "" # --template-dir\nref = "" # --template-ref\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"extra-args-to-flutter-build-command",children:["Extra args to ",(0,s.jsx)(n.code,{children:"flutter build"})," command"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--flutter-build-args"})," option allows passing extra arguments to ",(0,s.jsx)(n.code,{children:"flutter build"})," command called during the build process. The option can be used multiple times."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, if you want to add ",(0,s.jsx)(n.code,{children:"--no-tree-shake-icons"})," option:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"flet build macos --flutter-build-args=--no-tree-shake-icons\n"})}),"\n",(0,s.jsx)(n.p,{children:"To pass an option with a value:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"flet build ipa --flutter-build-args=--export-method --flutter-build-args=development\n"})}),"\n",(0,s.jsx)(n.p,{children:"Configuring Flutter build extra args:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[tool.flet]\nflutter.build_args = [\n    "--some-flutter-arg-1",\n    "--some-flutter-arg-2"\n]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"verbose-logging",children:"Verbose logging"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--verbose"})," or ",(0,s.jsx)(n.code,{children:"-vv"})," option allows to see the output of all commands during ",(0,s.jsx)(n.code,{children:"flet build"})," run.\nWe might ask for a detailed log if you need support."]}),"\n",(0,s.jsx)(n.h2,{id:"console-output",children:"Console output"}),"\n",(0,s.jsxs)(n.p,{children:["All Flet apps output to ",(0,s.jsx)(n.code,{children:"stdout"})," and ",(0,s.jsx)(n.code,{children:"stderr"})," (e.g. all ",(0,s.jsx)(n.code,{children:"print()"})," statements or ",(0,s.jsx)(n.code,{children:"sys.stdout.write()"})," calls, Python ",(0,s.jsx)(n.code,{children:"logging"})," library) is now redirected to ",(0,s.jsx)(n.code,{children:"console.log"})," file with a full path to it stored in ",(0,s.jsx)(n.code,{children:"FLET_APP_CONSOLE"})," environment variable."]}),"\n",(0,s.jsx)(n.p,{children:"Writes to that file are unbuffered, so you can retrieve a log in your Python program at any moment with a simple:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'with open(os.getenv("FLET_APP_CONSOLE"), "r") as f:\n    log = f.read()\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"AlertDialog"})," or any other control can be used to display the value of ",(0,s.jsx)(n.code,{children:"log"})," variable."]}),"\n",(0,s.jsxs)(n.p,{children:["When the program is terminated by calling ",(0,s.jsx)(n.code,{children:"sys.exit()"})," with exit code ",(0,s.jsx)(n.code,{children:"100"})," (magic code)\nthe entire log will be displayed in a scrollable window."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import sys\nsys.exit(100)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Calling ",(0,s.jsx)(n.code,{children:"sys.exit()"})," with any other exit code will terminate (close) the app without displaying a log."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var s=i(96540);const l={},r=s.createContext(l);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);