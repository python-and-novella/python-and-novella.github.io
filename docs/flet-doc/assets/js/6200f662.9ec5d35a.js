"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[82527],{52269:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var o=n(74848),t=n(28453);const i={title:"BarChart",sidebar_label:"BarChart"},l=void 0,a={id:"controls/barchart",title:"BarChart",description:"Draws a bar chart.",source:"@site/docs/controls/barchart.md",sourceDirName:"controls",slug:"/controls/barchart",permalink:"/docs/flet-doc/docs/controls/barchart",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/barchart.md",tags:[],version:"current",frontMatter:{title:"BarChart",sidebar_label:"BarChart"},sidebar:"docs",previous:{title:"Charts",permalink:"/docs/flet-doc/docs/controls/charts"},next:{title:"LineChart",permalink:"/docs/flet-doc/docs/controls/linechart"}},d={},s=[{value:"Examples",id:"examples",level:2},{value:"BarChart 1",id:"barchart-1",level:3},{value:"BarChart 2",id:"barchart-2",level:3},{value:"<code>BarChart</code> properties",id:"barchart-properties",level:2},{value:"<code>animate</code>",id:"animate",level:3},{value:"<code>bar_groups</code>",id:"bar_groups",level:3},{value:"<code>baseline_y</code>",id:"baseline_y",level:3},{value:"<code>bgcolor</code>",id:"bgcolor",level:3},{value:"<code>border</code>",id:"border",level:3},{value:"<code>bottom_axis</code>",id:"bottom_axis",level:3},{value:"<code>groups_space</code>",id:"groups_space",level:3},{value:"<code>horizontal_grid_lines</code>",id:"horizontal_grid_lines",level:3},{value:"<code>interactive</code>",id:"interactive",level:3},{value:"<code>left_axis</code>",id:"left_axis",level:3},{value:"<code>max_y</code>",id:"max_y",level:3},{value:"<code>min_y</code>",id:"min_y",level:3},{value:"<code>right_axis</code>",id:"right_axis",level:3},{value:"<code>top_axis</code>",id:"top_axis",level:3},{value:"<code>tooltip_bgcolor</code>",id:"tooltip_bgcolor",level:3},{value:"<code>tooltip_border_side</code>",id:"tooltip_border_side",level:3},{value:"<code>tooltip_direction</code>",id:"tooltip_direction",level:3},{value:"<code>tooltip_fit_inside_horizontally</code>",id:"tooltip_fit_inside_horizontally",level:3},{value:"<code>tooltip_fit_inside_vertically</code>",id:"tooltip_fit_inside_vertically",level:3},{value:"<code>tooltip_horizontal_offset</code>",id:"tooltip_horizontal_offset",level:3},{value:"<code>tooltip_margin</code>",id:"tooltip_margin",level:3},{value:"<code>tooltip_max_content_width</code>",id:"tooltip_max_content_width",level:3},{value:"<code>tooltip_padding</code>",id:"tooltip_padding",level:3},{value:"<code>tooltip_rounded_radius</code>",id:"tooltip_rounded_radius",level:3},{value:"<code>tooltip_rotate_angle</code>",id:"tooltip_rotate_angle",level:3},{value:"<code>vertical_grid_lines</code>",id:"vertical_grid_lines",level:3},{value:"<code>BarChart</code> events",id:"barchart-events",level:2},{value:"<code>on_chart_event</code>",id:"on_chart_event",level:3}];function c(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.p,{children:"Draws a bar chart."}),"\n",(0,o.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.a,{href:"https://flet-controls-gallery.fly.dev/charts/barchart",children:"Live example"})}),"\n",(0,o.jsx)(r.h3,{id:"barchart-1",children:"BarChart 1"}),"\n",(0,o.jsx)("img",{src:"/img/docs/controls/charts/barchart-sample-1.png",className:"screenshot-50"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    chart = ft.BarChart(\n        bar_groups=[\n            ft.BarChartGroup(\n                x=0,\n                bar_rods=[\n                    ft.BarChartRod(\n                        from_y=0,\n                        to_y=40,\n                        width=40,\n                        color=ft.Colors.AMBER,\n                        tooltip="Apple",\n                        border_radius=0,\n                    ),\n                ],\n            ),\n            ft.BarChartGroup(\n                x=1,\n                bar_rods=[\n                    ft.BarChartRod(\n                        from_y=0,\n                        to_y=100,\n                        width=40,\n                        color=ft.Colors.BLUE,\n                        tooltip="Blueberry",\n                        border_radius=0,\n                    ),\n                ],\n            ),\n            ft.BarChartGroup(\n                x=2,\n                bar_rods=[\n                    ft.BarChartRod(\n                        from_y=0,\n                        to_y=30,\n                        width=40,\n                        color=ft.Colors.RED,\n                        tooltip="Cherry",\n                        border_radius=0,\n                    ),\n                ],\n            ),\n            ft.BarChartGroup(\n                x=3,\n                bar_rods=[\n                    ft.BarChartRod(\n                        from_y=0,\n                        to_y=60,\n                        width=40,\n                        color=ft.Colors.ORANGE,\n                        tooltip="Orange",\n                        border_radius=0,\n                    ),\n                ],\n            ),\n        ],\n        border=ft.border.all(1, ft.Colors.GREY_400),\n        left_axis=ft.ChartAxis(\n            labels_size=40, title=ft.Text("Fruit supply"), title_size=40\n        ),\n        bottom_axis=ft.ChartAxis(\n            labels=[\n                ft.ChartAxisLabel(\n                    value=0, label=ft.Container(ft.Text("Apple"), padding=10)\n                ),\n                ft.ChartAxisLabel(\n                    value=1, label=ft.Container(ft.Text("Blueberry"), padding=10)\n                ),\n                ft.ChartAxisLabel(\n                    value=2, label=ft.Container(ft.Text("Cherry"), padding=10)\n                ),\n                ft.ChartAxisLabel(\n                    value=3, label=ft.Container(ft.Text("Orange"), padding=10)\n                ),\n            ],\n            labels_size=40,\n        ),\n        horizontal_grid_lines=ft.ChartGridLines(\n            color=ft.Colors.GREY_300, width=1, dash_pattern=[3, 3]\n        ),\n        tooltip_bgcolor=ft.Colors.with_opacity(0.5, ft.Colors.GREY_300),\n        max_y=110,\n        interactive=True,\n        expand=True,\n    )\n\n    page.add(chart)\n\nft.app(main)\n'})}),"\n",(0,o.jsx)(r.h3,{id:"barchart-2",children:"BarChart 2"}),"\n",(0,o.jsx)("img",{src:"/img/docs/controls/charts/barchart-sample-2.gif",className:"screenshot-50"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-python",children:'import flet as ft\n\nclass SampleRod(ft.BarChartRod):\n    def __init__(self, y: float, hovered: bool = False):\n        super().__init__()\n        self.hovered = hovered\n        self.y = y\n\n    def _before_build_command(self):\n        self.to_y = self.y + 1 if self.hovered else self.y\n        self.color = ft.Colors.YELLOW if self.hovered else ft.Colors.WHITE\n        self.border_side = (\n            ft.BorderSide(width=1, color=ft.Colors.GREEN_400)\n            if self.hovered\n            else ft.BorderSide(width=0, color=ft.Colors.WHITE)\n        )\n        super()._before_build_command()\n\n    def _build(self):\n        self.tooltip = str(self.y)\n        self.width = 22\n        self.color = ft.Colors.WHITE\n        self.bg_to_y = 20\n        self.bg_color = ft.Colors.GREEN_300\n\n\ndef main(page: ft.Page):\n    def on_chart_event(e: ft.BarChartEvent):\n        for group_index, group in enumerate(chart.bar_groups):\n            for rod_index, rod in enumerate(group.bar_rods):\n                rod.hovered = e.group_index == group_index and e.rod_index == rod_index\n        chart.update()\n\n    chart = ft.BarChart(\n        bar_groups=[\n            ft.BarChartGroup(\n                x=0,\n                bar_rods=[SampleRod(5)],\n            ),\n            ft.BarChartGroup(\n                x=1,\n                bar_rods=[SampleRod(6.5)],\n            ),\n            ft.BarChartGroup(\n                x=2,\n                bar_rods=[SampleRod(5)],\n            ),\n            ft.BarChartGroup(\n                x=3,\n                bar_rods=[SampleRod(7.5)],\n            ),\n            ft.BarChartGroup(\n                x=4,\n                bar_rods=[SampleRod(9)],\n            ),\n            ft.BarChartGroup(\n                x=5,\n                bar_rods=[SampleRod(11.5)],\n            ),\n            ft.BarChartGroup(\n                x=6,\n                bar_rods=[SampleRod(6)],\n            ),\n        ],\n        bottom_axis=ft.ChartAxis(\n            labels=[\n                ft.ChartAxisLabel(value=0, label=ft.Text("M")),\n                ft.ChartAxisLabel(value=1, label=ft.Text("T")),\n                ft.ChartAxisLabel(value=2, label=ft.Text("W")),\n                ft.ChartAxisLabel(value=3, label=ft.Text("T")),\n                ft.ChartAxisLabel(value=4, label=ft.Text("F")),\n                ft.ChartAxisLabel(value=5, label=ft.Text("S")),\n                ft.ChartAxisLabel(value=6, label=ft.Text("S")),\n            ],\n        ),\n        on_chart_event=on_chart_event,\n        interactive=True,\n    )\n\n    page.add(\n        ft.Container(\n            chart, bgcolor=ft.Colors.GREEN_200, padding=10, border_radius=5, expand=True\n        )\n    )\n\nft.app(main)\n'})}),"\n",(0,o.jsxs)(r.h2,{id:"barchart-properties",children:[(0,o.jsx)(r.code,{children:"BarChart"})," properties"]}),"\n",(0,o.jsx)("img",{src:"/img/docs/controls/charts/barchart-diagram.svg",className:"screenshot-100"}),"\n",(0,o.jsx)(r.h3,{id:"animate",children:(0,o.jsx)(r.code,{children:"animate"})}),"\n",(0,o.jsx)(r.p,{children:"Controls chart implicit animation."}),"\n",(0,o.jsxs)(r.p,{children:["Value is of ",(0,o.jsx)(r.a,{href:"/docs/reference/types/animationvalue",children:(0,o.jsx)(r.code,{children:"AnimationValue"})})," type."]}),"\n",(0,o.jsx)(r.h3,{id:"bar_groups",children:(0,o.jsx)(r.code,{children:"bar_groups"})}),"\n",(0,o.jsxs)(r.p,{children:["The list of ",(0,o.jsx)(r.a,{href:"/docs/reference/types/barchartgroup",children:(0,o.jsx)(r.code,{children:"BarChartGroup"})})," to draw."]}),"\n",(0,o.jsx)(r.h3,{id:"baseline_y",children:(0,o.jsx)(r.code,{children:"baseline_y"})}),"\n",(0,o.jsx)(r.p,{children:"Baseline value for Y axis."}),"\n",(0,o.jsxs)(r.p,{children:["Defaults to ",(0,o.jsx)(r.code,{children:"0"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"bgcolor",children:(0,o.jsx)(r.code,{children:"bgcolor"})}),"\n",(0,o.jsxs)(r.p,{children:["Background ",(0,o.jsx)(r.a,{href:"/docs/reference/colors",children:"color"})," of the chart."]}),"\n",(0,o.jsx)(r.h3,{id:"border",children:(0,o.jsx)(r.code,{children:"border"})}),"\n",(0,o.jsx)(r.p,{children:"The border around the chart."}),"\n",(0,o.jsxs)(r.p,{children:["Value is of type ",(0,o.jsx)(r.a,{href:"/docs/reference/types/border",children:(0,o.jsx)(r.code,{children:"Border"})}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"bottom_axis",children:(0,o.jsx)(r.code,{children:"bottom_axis"})}),"\n",(0,o.jsxs)(r.p,{children:["Configures the appearance of the bottom axis, its title and labels. The value is the instance\nof ",(0,o.jsx)(r.a,{href:"/docs/reference/types/chartaxis",children:(0,o.jsx)(r.code,{children:"ChartAxis"})})," class."]}),"\n",(0,o.jsx)(r.h3,{id:"groups_space",children:(0,o.jsx)(r.code,{children:"groups_space"})}),"\n",(0,o.jsx)(r.p,{children:"A gap between bar groups."}),"\n",(0,o.jsx)(r.h3,{id:"horizontal_grid_lines",children:(0,o.jsx)(r.code,{children:"horizontal_grid_lines"})}),"\n",(0,o.jsx)(r.p,{children:"Controls drawing of chart's horizontal lines."}),"\n",(0,o.jsxs)(r.p,{children:["Value is of type ",(0,o.jsx)(r.a,{href:"/docs/reference/types/chartgridlines",children:(0,o.jsx)(r.code,{children:"ChartGridLines"})}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"interactive",children:(0,o.jsx)(r.code,{children:"interactive"})}),"\n",(0,o.jsx)(r.p,{children:"Enables automatic tooltips when hovering chart bars."}),"\n",(0,o.jsx)(r.h3,{id:"left_axis",children:(0,o.jsx)(r.code,{children:"left_axis"})}),"\n",(0,o.jsx)(r.p,{children:"Configures the appearance of the left axis, its title and labels."}),"\n",(0,o.jsxs)(r.p,{children:["Value is of type ",(0,o.jsx)(r.a,{href:"/docs/reference/types/chartaxis",children:(0,o.jsx)(r.code,{children:"ChartAxis"})}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"max_y",children:(0,o.jsx)(r.code,{children:"max_y"})}),"\n",(0,o.jsx)(r.p,{children:"Configures the maximum displayed value for Y axis."}),"\n",(0,o.jsx)(r.h3,{id:"min_y",children:(0,o.jsx)(r.code,{children:"min_y"})}),"\n",(0,o.jsx)(r.p,{children:"Configures the minimum displayed value for Y axis."}),"\n",(0,o.jsx)(r.h3,{id:"right_axis",children:(0,o.jsx)(r.code,{children:"right_axis"})}),"\n",(0,o.jsxs)(r.p,{children:["Configures the appearance of the right axis, its title and labels. The value is the instance\nof ",(0,o.jsx)(r.a,{href:"/docs/reference/types/chartaxis",children:(0,o.jsx)(r.code,{children:"ChartAxis"})})," class."]}),"\n",(0,o.jsx)(r.h3,{id:"top_axis",children:(0,o.jsx)(r.code,{children:"top_axis"})}),"\n",(0,o.jsxs)(r.p,{children:["Configures the appearance of the top axis, its title and labels. The value is the instance\nof ",(0,o.jsx)(r.a,{href:"/docs/reference/types/chartaxis",children:(0,o.jsx)(r.code,{children:"ChartAxis"})})," class."]}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_bgcolor",children:(0,o.jsx)(r.code,{children:"tooltip_bgcolor"})}),"\n",(0,o.jsxs)(r.p,{children:["Background ",(0,o.jsx)(r.a,{href:"/docs/reference/colors",children:"color"})," of tooltips."]}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_border_side",children:(0,o.jsx)(r.code,{children:"tooltip_border_side"})}),"\n",(0,o.jsx)(r.p,{children:"The tooltip border side."}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_direction",children:(0,o.jsx)(r.code,{children:"tooltip_direction"})}),"\n",(0,o.jsx)(r.p,{children:"Controls showing tooltip on top or bottom, default is auto."}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_fit_inside_horizontally",children:(0,o.jsx)(r.code,{children:"tooltip_fit_inside_horizontally"})}),"\n",(0,o.jsx)(r.p,{children:"Forces the tooltip to shift horizontally inside the chart, if overflow happens."}),"\n",(0,o.jsxs)(r.p,{children:["Value is of type ",(0,o.jsx)(r.code,{children:"bool"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_fit_inside_vertically",children:(0,o.jsx)(r.code,{children:"tooltip_fit_inside_vertically"})}),"\n",(0,o.jsx)(r.p,{children:"Forces the tooltip to shift vertically inside the chart, if overflow happens."}),"\n",(0,o.jsxs)(r.p,{children:["Value is of type ",(0,o.jsx)(r.code,{children:"bool"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_horizontal_offset",children:(0,o.jsx)(r.code,{children:"tooltip_horizontal_offset"})}),"\n",(0,o.jsx)(r.p,{children:"Applies horizontal offset for showing tooltip."}),"\n",(0,o.jsxs)(r.p,{children:["Defaults to ",(0,o.jsx)(r.code,{children:"0"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_margin",children:(0,o.jsx)(r.code,{children:"tooltip_margin"})}),"\n",(0,o.jsx)(r.p,{children:"Applies a bottom margin for showing tooltip on top of rods."}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_max_content_width",children:(0,o.jsx)(r.code,{children:"tooltip_max_content_width"})}),"\n",(0,o.jsx)(r.p,{children:"Restricts the tooltip's width."}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_padding",children:(0,o.jsx)(r.code,{children:"tooltip_padding"})}),"\n",(0,o.jsx)(r.p,{children:"Applies a padding for showing contents inside the tooltip."}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_rounded_radius",children:(0,o.jsx)(r.code,{children:"tooltip_rounded_radius"})}),"\n",(0,o.jsx)(r.p,{children:"Sets a rounded radius for the tooltip."}),"\n",(0,o.jsx)(r.h3,{id:"tooltip_rotate_angle",children:(0,o.jsx)(r.code,{children:"tooltip_rotate_angle"})}),"\n",(0,o.jsx)(r.p,{children:"The rotation angle of the tooltip."}),"\n",(0,o.jsx)(r.h3,{id:"vertical_grid_lines",children:(0,o.jsx)(r.code,{children:"vertical_grid_lines"})}),"\n",(0,o.jsx)(r.p,{children:"Controls drawing of chart's vertical lines."}),"\n",(0,o.jsxs)(r.p,{children:["Value is of type ",(0,o.jsx)(r.a,{href:"/docs/reference/types/chartgridlines",children:(0,o.jsx)(r.code,{children:"ChartGridLines"})}),"."]}),"\n",(0,o.jsxs)(r.h2,{id:"barchart-events",children:[(0,o.jsx)(r.code,{children:"BarChart"})," events"]}),"\n",(0,o.jsx)(r.h3,{id:"on_chart_event",children:(0,o.jsx)(r.code,{children:"on_chart_event"})}),"\n",(0,o.jsx)(r.p,{children:"Fires when a bar is hovered or clicked."}),"\n",(0,o.jsxs)(r.p,{children:["Event handler receives an instance of ",(0,o.jsx)(r.a,{href:"/docs/reference/types/barchartevent",children:(0,o.jsx)(r.code,{children:"BarChartEvent"})}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>a});var o=n(96540);const t={},i=o.createContext(t);function l(e){const r=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),o.createElement(i.Provider,{value:r},e.children)}}}]);