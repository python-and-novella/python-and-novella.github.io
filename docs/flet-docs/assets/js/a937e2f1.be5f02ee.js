"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[80709],{51908:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(74848),l=n(28453);const r={title:"MatplotlibChart",sidebar_label:"MatplotlibChart"},s=void 0,i={id:"controls/matplotlibchart",title:"MatplotlibChart",description:"Displays Matplotlib chart.",source:"@site/docs/controls/matplotlibchart.md",sourceDirName:"controls",slug:"/controls/matplotlibchart",permalink:"/docs/flet-docs/docs/controls/matplotlibchart",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/matplotlibchart.md",tags:[],version:"current",frontMatter:{title:"MatplotlibChart",sidebar_label:"MatplotlibChart"},sidebar:"docs",previous:{title:"LineChart",permalink:"/docs/flet-docs/docs/controls/linechart"},next:{title:"PieChart",permalink:"/docs/flet-docs/docs/controls/piechart"}},o={},c=[{value:"Examples",id:"examples",level:2},{value:"Bar color chart",id:"bar-color-chart",level:3},{value:"Line chart",id:"line-chart",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>figure</code>",id:"figure",level:3},{value:"<code>isolated</code>",id:"isolated",level:3},{value:"<code>original_size</code>",id:"original_size",level:3},{value:"<code>transparent</code>",id:"transparent",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["Displays ",(0,a.jsx)(t.a,{href:"https://matplotlib.org/",children:"Matplotlib"})," chart."]}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(t.h3,{id:"bar-color-chart",children:"Bar color chart"}),"\n",(0,a.jsxs)(t.p,{children:["The following example is based on ",(0,a.jsx)(t.a,{href:"https://matplotlib.org/stable/gallery/lines_bars_and_markers/bar_colors.html#sphx-glr-gallery-lines-bars-and-markers-bar-colors-py",children:"original example from Matplotlib docs"}),"."]}),"\n",(0,a.jsx)("img",{src:"/img/docs/controls/charts/matplotlib-barchart.png",className:"screenshot-60"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import matplotlib\nimport matplotlib.pyplot as plt\n\nimport flet as ft\nfrom flet.matplotlib_chart import MatplotlibChart\n\nmatplotlib.use("svg")\n\n\ndef main(page: ft.Page):\n\n    fig, ax = plt.subplots()\n\n    fruits = ["apple", "blueberry", "cherry", "orange"]\n    counts = [40, 100, 30, 55]\n    bar_labels = ["red", "blue", "_red", "orange"]\n    bar_colors = ["tab:red", "tab:blue", "tab:red", "tab:orange"]\n\n    ax.bar(fruits, counts, label=bar_labels, color=bar_colors)\n\n    ax.set_ylabel("fruit supply")\n    ax.set_title("Fruit supply by kind and color")\n    ax.legend(title="Fruit color")\n\n    page.add(MatplotlibChart(fig, expand=True))\n\n\nft.app(main)\n'})}),"\n",(0,a.jsx)(t.h3,{id:"line-chart",children:"Line chart"}),"\n",(0,a.jsxs)(t.p,{children:["The following example is based on ",(0,a.jsx)(t.a,{href:"https://matplotlib.org/stable/gallery/lines_bars_and_markers/cohere.html#sphx-glr-gallery-lines-bars-and-markers-cohere-py",children:"original example from Matplotlib docs"}),"."]}),"\n",(0,a.jsx)("img",{src:"/img/docs/controls/charts/matplotlib-linechart.png",className:"screenshot-60"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimport flet as ft\nfrom flet.matplotlib_chart import MatplotlibChart\n\nmatplotlib.use("svg")\n\ndef main(page: ft.Page):\n\n    # Fixing random state for reproducibility\n    np.random.seed(19680801)\n\n    dt = 0.01\n    t = np.arange(0, 30, dt)\n    nse1 = np.random.randn(len(t))  # white noise 1\n    nse2 = np.random.randn(len(t))  # white noise 2\n\n    # Two signals with a coherent part at 10Hz and a random part\n    s1 = np.sin(2 * np.pi * 10 * t) + nse1\n    s2 = np.sin(2 * np.pi * 10 * t) + nse2\n\n    fig, axs = plt.subplots(2, 1)\n    axs[0].plot(t, s1, t, s2)\n    axs[0].set_xlim(0, 2)\n    axs[0].set_xlabel("time")\n    axs[0].set_ylabel("s1 and s2")\n    axs[0].grid(True)\n\n    cxy, f = axs[1].cohere(s1, s2, 256, 1.0 / dt)\n    axs[1].set_ylabel("coherence")\n\n    fig.tight_layout()\n\n    page.add(MatplotlibChart(fig, expand=True))\n\nft.app(main)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.h3,{id:"figure",children:(0,a.jsx)(t.code,{children:"figure"})}),"\n",(0,a.jsxs)(t.p,{children:["Matplotlib figure to draw - an instance of ",(0,a.jsx)(t.code,{children:"matplotlib.figure.Figure"})," class."]}),"\n",(0,a.jsx)(t.h3,{id:"isolated",children:(0,a.jsx)(t.code,{children:"isolated"})}),"\n",(0,a.jsxs)(t.p,{children:["Every time when a page or parent chart control are updated with ",(0,a.jsx)(t.code,{children:"page.update()"})," or ",(0,a.jsx)(t.code,{children:"Control.update()"})," methods respectively the chart is re-drawn by calling Matplotlib API. Frequent re-drawings of large charts could affect the performance of the entire Flet app."]}),"\n",(0,a.jsxs)(t.p,{children:["Set ",(0,a.jsx)(t.code,{children:"isolated"})," to ",(0,a.jsx)(t.code,{children:"True"})," to enable explicit chart updates. To re-draw the chart call its ",(0,a.jsx)(t.code,{children:"update()"})," method. For example the first example on this page could be modified as following:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'def main(page: ft.Page):\n\n    # ...\n\n    # set initial axis legent\n    ax.legend(title="Fruit color")\n\n    # enable explicit updates\n    # and add chart to a page\n    chart1 = MatplotlibChart(fig, isolated=True, expand=True)\n    page.add(chart1)\n\n    sleep(5)\n\n    # update chart axis\n    ax.legend(title="Colors")\n    chart1.update()\n\nft.app(main)\n'})}),"\n",(0,a.jsx)(t.h3,{id:"original_size",children:(0,a.jsx)(t.code,{children:"original_size"})}),"\n",(0,a.jsx)(t.p,{children:"Whether to display chart in original size."}),"\n",(0,a.jsxs)(t.p,{children:["Defaults to ",(0,a.jsx)(t.code,{children:"False"})," - display a chart that fits configured bounds."]}),"\n",(0,a.jsx)(t.h3,{id:"transparent",children:(0,a.jsx)(t.code,{children:"transparent"})}),"\n",(0,a.jsx)(t.p,{children:"Whether to remove the background from the chart."}),"\n",(0,a.jsxs)(t.p,{children:["Defaults to ",(0,a.jsx)(t.code,{children:"False"})," - display a chart with background."]})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var a=n(96540);const l={},r=a.createContext(l);function s(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);