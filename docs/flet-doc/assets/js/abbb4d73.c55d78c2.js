"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[9512],{82301:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=n(74848),a=n(28453);const i={title:"publish",sidebar_label:"publish"},r=void 0,o={id:"reference/cli/publish",title:"publish",description:"This command is used to publish a Flet application as a standalone static web app using Pyodide. You can find it's guide here.",source:"@site/docs/reference/cli/publish.md",sourceDirName:"reference/cli",slug:"/reference/cli/publish",permalink:"/docs/flet-doc/docs/reference/cli/publish",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/reference/cli/publish.md",tags:[],version:"current",frontMatter:{title:"publish",sidebar_label:"publish"},sidebar:"docs",previous:{title:"pack",permalink:"/docs/flet-doc/docs/reference/cli/pack"},next:{title:"Environment variables",permalink:"/docs/flet-doc/docs/reference/environment-variables"}},p={},c=[];function l(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["This command is used to publish a Flet application as a standalone static web app using Pyodide. You can find it's guide ",(0,s.jsx)(t.a,{href:"/docs/publish/web/static-website",children:"here"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"usage: flet publish [-h] [-v] [--pre] [-a ASSETS_DIR] [--distpath DISTPATH] [--app-name APP_NAME] [--app-short-name APP_SHORT_NAME] [--app-description APP_DESCRIPTION] [--base-url BASE_URL]\n                    [--web-renderer {canvaskit,html}] [--use-color-emoji] [--route-url-strategy {path,hash}]\n                    script\n\nPublish Flet app as a standalone web app.\n\npositional arguments:\n  script                path to a Python script\n\noptions:\n  -h, --help            show this help message and exit\n  -v, --verbose         -v for detailed output and -vv for more detailed\n  --pre                 allow micropip to install pre-release Python packages\n  -a ASSETS_DIR, --assets ASSETS_DIR\n                        path to an assets directory\n  --distpath DISTPATH   where to put the published app (default: ./dist)\n  --app-name APP_NAME   application name\n  --app-short-name APP_SHORT_NAME\n                        application short name\n  --app-description APP_DESCRIPTION\n                        application description\n  --base-url BASE_URL   base URL for the app\n  --web-renderer {canvaskit,html}\n                        web renderer to use\n  --use-color-emoji     enables color emojis with CanvasKit renderer\n  --route-url-strategy {path,hash}\n                        URL routing strategy\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(96540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);