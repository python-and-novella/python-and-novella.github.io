"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[59949],{87791:(e,c,o)=>{o.r(c),o.d(c,{assets:()=>d,contentTitle:()=>a,default:()=>x,frontMatter:()=>s,metadata:()=>i,toc:()=>h});var l=o(74848),n=o(28453),r=o(11470),t=o(19365);const s={title:"Checkbox",sidebar_label:"Checkbox"},a=void 0,i={id:"controls/checkbox",title:"Checkbox",description:"Checkbox allows to select one or more items from a group, or switch between two mutually exclusive options (checked or unchecked, on or off).",source:"@site/docs/controls/checkbox.md",sourceDirName:"controls",slug:"/controls/checkbox",permalink:"/flet-docs/docs/controls/checkbox",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/checkbox.md",tags:[],version:"current",frontMatter:{title:"Checkbox",sidebar_label:"Checkbox"},sidebar:"docs",previous:{title:"AutofillGroup",permalink:"/flet-docs/docs/controls/autofillgroup"},next:{title:"Chip",permalink:"/flet-docs/docs/controls/chip"}},d={},h=[{value:"Examples",id:"examples",level:2},{value:"Basic checkboxes",id:"basic-checkboxes",level:3},{value:"Checkbox with <code>on_change</code> event",id:"checkbox-with-on_change-event",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>active_color</code>",id:"active_color",level:3},{value:"<code>adaptive</code>",id:"adaptive",level:3},{value:"<code>autofocus</code>",id:"autofocus",level:3},{value:"<code>border</code>",id:"border",level:3},{value:"<code>check_color</code>",id:"check_color",level:3},{value:"<code>fill_color</code>",id:"fill_color",level:3},{value:"<code>hover_color</code>",id:"hover_color",level:3},{value:"<code>is_error</code>",id:"is_error",level:3},{value:"<code>label</code>",id:"label",level:3},{value:"<code>label_style</code>",id:"label_style",level:3},{value:"<code>label_position</code>",id:"label_position",level:3},{value:"<code>mouse_cursor</code>",id:"mouse_cursor",level:3},{value:"<code>overlay_color</code>",id:"overlay_color",level:3},{value:"<code>semantics_label</code>",id:"semantics_label",level:3},{value:"<code>shape</code>",id:"shape",level:3},{value:"<code>splash_radius</code>",id:"splash_radius",level:3},{value:"<code>tristate</code>",id:"tristate",level:3},{value:"<code>value</code>",id:"value",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_blur</code>",id:"on_blur",level:3},{value:"<code>on_change</code>",id:"on_change",level:3},{value:"<code>on_focus</code>",id:"on_focus",level:3}];function u(e){const c={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(c.p,{children:"Checkbox allows to select one or more items from a group, or switch between two mutually exclusive options (checked or unchecked, on or off)."}),"\n","\n",(0,l.jsx)(c.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(c.p,{children:(0,l.jsx)(c.a,{href:"https://flet-controls-gallery.fly.dev/input/checkbox",children:"Live example"})}),"\n",(0,l.jsx)(c.h3,{id:"basic-checkboxes",children:"Basic checkboxes"}),"\n",(0,l.jsx)(r.A,{groupId:"language",children:(0,l.jsx)(t.A,{value:"python",label:"Python",default:!0,children:(0,l.jsx)(c.pre,{children:(0,l.jsx)(c.code,{className:"language-python",children:'import flet as ft\n\ndef main(page):\n    def button_clicked(e):\n        t.value = (\n            f"Checkboxes values are:  {c1.value}, {c2.value}, {c3.value}, {c4.value}, {c5.value}."\n        )\n        page.update()\n\n    t = ft.Text()\n    c1 = ft.Checkbox(label="Unchecked by default checkbox", value=False)\n    c2 = ft.Checkbox(label="Undefined by default tristate checkbox", tristate=True)\n    c3 = ft.Checkbox(label="Checked by default checkbox", value=True)\n    c4 = ft.Checkbox(label="Disabled checkbox", disabled=True)\n    c5 = ft.Checkbox(\n        label="Checkbox with rendered label_position=\'left\'", label_position=ft.LabelPosition.LEFT\n    )\n    b = ft.ElevatedButton(text="Submit", on_click=button_clicked)\n    page.add(c1, c2, c3, c4, c5, b, t)\n\nft.app(main)\n'})})})}),"\n",(0,l.jsx)("img",{src:"/img/docs/controls/checkbox/basic-checkbox.gif",className:"screenshot-40"}),"\n",(0,l.jsxs)(c.h3,{id:"checkbox-with-on_change-event",children:["Checkbox with ",(0,l.jsx)(c.code,{children:"on_change"})," event"]}),"\n",(0,l.jsx)(r.A,{groupId:"language",children:(0,l.jsx)(t.A,{value:"python",label:"Python",default:!0,children:(0,l.jsx)(c.pre,{children:(0,l.jsx)(c.code,{className:"language-python",children:'import flet as ft\n\ndef main(page):\n  def checkbox_changed(e):\n    t.value = f"Checkbox value changed to {c.value}" \n    t.update()\n\n  c = ft.Checkbox(label="Checkbox with \'change\' event", on_change=checkbox_changed)\n  t = ft.Text()\n\n  page.add(c, t)\n\nft.app(main)\n'})})})}),"\n",(0,l.jsx)("img",{src:"/img/docs/controls/checkbox/checkbox-with-change-event.gif",className:"screenshot-40"}),"\n",(0,l.jsx)(c.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(c.h3,{id:"active_color",children:(0,l.jsx)(c.code,{children:"active_color"})}),"\n",(0,l.jsxs)(c.p,{children:["The ",(0,l.jsx)(c.a,{href:"/docs/reference/colors",children:"color"})," to use when this checkbox is checked."]}),"\n",(0,l.jsx)(c.h3,{id:"adaptive",children:(0,l.jsx)(c.code,{children:"adaptive"})}),"\n",(0,l.jsxs)(c.p,{children:["If the value is ",(0,l.jsx)(c.code,{children:"True"}),", an adaptive Checkbox is created based on whether the target platform is iOS/macOS."]}),"\n",(0,l.jsxs)(c.p,{children:["On iOS and macOS, a ",(0,l.jsx)(c.a,{href:"/docs/controls/cupertinocheckbox",children:(0,l.jsx)(c.code,{children:"CupertinoCheckbox"})})," is created, which has matching functionality and presentation as ",(0,l.jsx)(c.code,{children:"Checkbox"}),", and the graphics as expected on iOS. On other platforms, a Material Checkbox is created."]}),"\n",(0,l.jsxs)(c.p,{children:["See the example of usage ",(0,l.jsx)(c.a,{href:"/docs/controls/cupertinocheckbox#cupertinocheckbox-and-adaptive-checkbox-example",children:"here"}),"."]}),"\n",(0,l.jsxs)(c.p,{children:["Defaults to ",(0,l.jsx)(c.code,{children:"False"}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"autofocus",children:(0,l.jsx)(c.code,{children:"autofocus"})}),"\n",(0,l.jsx)(c.p,{children:"True if the control will be selected as the initial focus. If there is more than one control on a page with autofocus set, then the first one added to the page will get focus."}),"\n",(0,l.jsx)(c.h3,{id:"border",children:(0,l.jsx)(c.code,{children:"border"})}),"\n",(0,l.jsxs)(c.p,{children:["The color and width of the checkbox's border to be rendered when the checkbox's ",(0,l.jsx)(c.code,{children:"value"})," is ",(0,l.jsx)(c.code,{children:"False"}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"check_color",children:(0,l.jsx)(c.code,{children:"check_color"})}),"\n",(0,l.jsxs)(c.p,{children:["The ",(0,l.jsx)(c.a,{href:"/docs/reference/colors",children:"color"})," to use for the check icon when this checkbox is checked."]}),"\n",(0,l.jsx)(c.h3,{id:"fill_color",children:(0,l.jsx)(c.code,{children:"fill_color"})}),"\n",(0,l.jsxs)(c.p,{children:["The ",(0,l.jsx)(c.a,{href:"/docs/reference/colors",children:"color"})," that fills the checkbox in\nvarious ",(0,l.jsx)(c.a,{href:"/docs/reference/types/controlstate",children:(0,l.jsx)(c.code,{children:"ControlState"})})," states."]}),"\n",(0,l.jsx)(c.h3,{id:"hover_color",children:(0,l.jsx)(c.code,{children:"hover_color"})}),"\n",(0,l.jsxs)(c.p,{children:["The ",(0,l.jsx)(c.a,{href:"/docs/reference/colors",children:"color"})," to use when this checkbox is hovered."]}),"\n",(0,l.jsx)(c.h3,{id:"is_error",children:(0,l.jsx)(c.code,{children:"is_error"})}),"\n",(0,l.jsxs)(c.p,{children:["Whether this checkbox wants to show an error state. When ",(0,l.jsx)(c.code,{children:"True"})," this checkbox will have a different default container color and check color. Defaults to ",(0,l.jsx)(c.code,{children:"False"}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"label",children:(0,l.jsx)(c.code,{children:"label"})}),"\n",(0,l.jsx)(c.p,{children:"The clickable label to display on the right of a checkbox."}),"\n",(0,l.jsx)(c.h3,{id:"label_style",children:(0,l.jsx)(c.code,{children:"label_style"})}),"\n",(0,l.jsxs)(c.p,{children:["The label's style. An instance of type ",(0,l.jsx)(c.a,{href:"/docs/reference/types/textstyle",children:(0,l.jsx)(c.code,{children:"TextStyle"})}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"label_position",children:(0,l.jsx)(c.code,{children:"label_position"})}),"\n",(0,l.jsxs)(c.p,{children:["Defines on which side of the checkbox the ",(0,l.jsx)(c.code,{children:"label"})," should be shown."]}),"\n",(0,l.jsxs)(c.p,{children:["Value is of type ",(0,l.jsx)(c.a,{href:"/docs/reference/types/labelposition",children:(0,l.jsx)(c.code,{children:"LabelPosition"})})," and defaults to ",(0,l.jsx)(c.code,{children:"LabelPosition.RIGHT"}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"mouse_cursor",children:(0,l.jsx)(c.code,{children:"mouse_cursor"})}),"\n",(0,l.jsx)(c.p,{children:"The cursor to be displayed when a mouse pointer enters or is hovering over this control."}),"\n",(0,l.jsxs)(c.p,{children:["Value is of type ",(0,l.jsx)(c.a,{href:"/docs/reference/types/mousecursor",children:(0,l.jsx)(c.code,{children:"MouseCursor"})}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"overlay_color",children:(0,l.jsx)(c.code,{children:"overlay_color"})}),"\n",(0,l.jsxs)(c.p,{children:["The ",(0,l.jsx)(c.a,{href:"/docs/reference/colors",children:"color"})," of the checkbox's overlay in\nvarious ",(0,l.jsx)(c.a,{href:"/docs/reference/types/controlstate",children:(0,l.jsx)(c.code,{children:"ControlState"})})," states."]}),"\n",(0,l.jsxs)(c.p,{children:["This property supports the following ",(0,l.jsx)(c.code,{children:"ControlState"})," values: ",(0,l.jsx)(c.code,{children:"PRESSED"}),", ",(0,l.jsx)(c.code,{children:"SELECTED"}),", ",(0,l.jsx)(c.code,{children:"HOVERED"})," and ",(0,l.jsx)(c.code,{children:"FOCUSED"}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"semantics_label",children:(0,l.jsx)(c.code,{children:"semantics_label"})}),"\n",(0,l.jsx)(c.p,{children:"The semantic label for the checkbox that is not shown in the UI, but will be announced by screen readers in accessibility modes (e.g TalkBack/VoiceOver)."}),"\n",(0,l.jsx)(c.h3,{id:"shape",children:(0,l.jsx)(c.code,{children:"shape"})}),"\n",(0,l.jsxs)(c.p,{children:["The shape of the checkbox. The value is an instance of ",(0,l.jsx)(c.a,{href:"/docs/reference/types/outlinedborder",children:(0,l.jsx)(c.code,{children:"OutlinedBorder"})})," class."]}),"\n",(0,l.jsxs)(c.p,{children:["Defaults to ",(0,l.jsx)(c.code,{children:"RoundedRectangleBorder(radius=2)"}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"splash_radius",children:(0,l.jsx)(c.code,{children:"splash_radius"})}),"\n",(0,l.jsx)(c.p,{children:"The radius of the circular Material ink response (ripple) in logical pixels."}),"\n",(0,l.jsxs)(c.p,{children:["Defaults to ",(0,l.jsx)(c.code,{children:"20.0"}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"tristate",children:(0,l.jsx)(c.code,{children:"tristate"})}),"\n",(0,l.jsxs)(c.p,{children:["If ",(0,l.jsx)(c.code,{children:"True"})," the checkboxes value can be ",(0,l.jsx)(c.code,{children:"True"}),", ",(0,l.jsx)(c.code,{children:"False"}),", or ",(0,l.jsx)(c.code,{children:"None"}),"."]}),"\n",(0,l.jsxs)(c.p,{children:["Checkbox displays a dash when its value is ",(0,l.jsx)(c.code,{children:"None"}),"."]}),"\n",(0,l.jsx)(c.h3,{id:"value",children:(0,l.jsx)(c.code,{children:"value"})}),"\n",(0,l.jsx)(c.p,{children:"Current value of the checkbox."}),"\n",(0,l.jsx)(c.h2,{id:"events",children:"Events"}),"\n",(0,l.jsx)(c.h3,{id:"on_blur",children:(0,l.jsx)(c.code,{children:"on_blur"})}),"\n",(0,l.jsx)(c.p,{children:"Fires when the control has lost focus."}),"\n",(0,l.jsx)(c.h3,{id:"on_change",children:(0,l.jsx)(c.code,{children:"on_change"})}),"\n",(0,l.jsx)(c.p,{children:"Fires when the state of the Checkbox is changed."}),"\n",(0,l.jsx)(c.h3,{id:"on_focus",children:(0,l.jsx)(c.code,{children:"on_focus"})}),"\n",(0,l.jsx)(c.p,{children:"Fires when the control has received focus."})]})}function x(e={}){const{wrapper:c}={...(0,n.R)(),...e.components};return c?(0,l.jsx)(c,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},19365:(e,c,o)=>{o.d(c,{A:()=>t});o(96540);var l=o(18215);const n={tabItem:"tabItem_Ymn6"};var r=o(74848);function t(e){let{children:c,hidden:o,className:t}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,l.A)(n.tabItem,t),hidden:o,children:c})}},11470:(e,c,o)=>{o.d(c,{A:()=>_});var l=o(96540),n=o(18215),r=o(23104),t=o(56347),s=o(205),a=o(57485),i=o(31682),d=o(70679);function h(e){var c,o;return null!=(c=null==(o=l.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:c}=e;return!!c&&"object"==typeof c&&"value"in c}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:o.filter(Boolean))?c:[]}function u(e){const{values:c,children:o}=e;return(0,l.useMemo)((()=>{const e=null!=c?c:function(e){return h(e).map((e=>{let{props:{value:c,label:o,attributes:l,default:n}}=e;return{value:c,label:o,attributes:l,default:n}}))}(o);return function(e){const c=(0,i.X)(e,((e,c)=>e.value===c.value));if(c.length>0)throw new Error('Docusaurus error: Duplicate values "'+c.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[c,o])}function x(e){let{value:c,tabValues:o}=e;return o.some((e=>e.value===c))}function b(e){let{queryString:c=!1,groupId:o}=e;const n=(0,t.W6)(),r=function(e){let{queryString:c=!1,groupId:o}=e;if("string"==typeof c)return c;if(!1===c)return null;if(!0===c&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=o?o:null}({queryString:c,groupId:o});return[(0,a.aZ)(r),(0,l.useCallback)((e=>{if(!r)return;const c=new URLSearchParams(n.location.search);c.set(r,e),n.replace({...n.location,search:c.toString()})}),[r,n])]}function p(e){const{defaultValue:c,queryString:o=!1,groupId:n}=e,r=u(e),[t,a]=(0,l.useState)((()=>function(e){var c;let{defaultValue:o,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(o){if(!x({value:o,tabValues:l}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+o+'" but none of its children has the corresponding value. Available values are: '+l.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return o}const n=null!=(c=l.find((e=>e.default)))?c:l[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:c,tabValues:r}))),[i,h]=b({queryString:o,groupId:n}),[p,f]=function(e){let{groupId:c}=e;const o=function(e){return e?"docusaurus.tab."+e:null}(c),[n,r]=(0,d.Dv)(o);return[n,(0,l.useCallback)((e=>{o&&r.set(e)}),[o,r])]}({groupId:n}),v=(()=>{const e=null!=i?i:p;return x({value:e,tabValues:r})?e:null})();(0,s.A)((()=>{v&&a(v)}),[v]);return{selectedValue:t,selectValue:(0,l.useCallback)((e=>{if(!x({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);a(e),h(e),f(e)}),[h,f,r]),tabValues:r}}var f=o(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=o(74848);function m(e){let{className:c,block:o,selectedValue:l,selectValue:t,tabValues:s}=e;const a=[],{blockElementScrollPositionUntilNextRender:i}=(0,r.a_)(),d=e=>{const c=e.currentTarget,o=a.indexOf(c),n=s[o].value;n!==l&&(i(c),t(n))},h=e=>{var c;let o=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var l;const c=a.indexOf(e.currentTarget)+1;o=null!=(l=a[c])?l:a[0];break}case"ArrowLeft":{var n;const c=a.indexOf(e.currentTarget)-1;o=null!=(n=a[c])?n:a[a.length-1];break}}null==(c=o)||c.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":o},c),children:s.map((e=>{let{value:c,label:o,attributes:r}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:l===c?0:-1,"aria-selected":l===c,ref:e=>a.push(e),onKeyDown:h,onClick:d,...r,className:(0,n.A)("tabs__item",v.tabItem,null==r?void 0:r.className,{"tabs__item--active":l===c}),children:null!=o?o:c},c)}))})}function k(e){let{lazy:c,children:o,selectedValue:n}=e;const r=(Array.isArray(o)?o:[o]).filter(Boolean);if(c){const e=r.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map(((e,c)=>(0,l.cloneElement)(e,{key:c,hidden:e.props.value!==n})))})}function g(e){const c=p(e);return(0,j.jsxs)("div",{className:(0,n.A)("tabs-container",v.tabList),children:[(0,j.jsx)(m,{...c,...e}),(0,j.jsx)(k,{...c,...e})]})}function _(e){const c=(0,f.A)();return(0,j.jsx)(g,{...e,children:h(e.children)},String(c))}},28453:(e,c,o)=>{o.d(c,{R:()=>t,x:()=>s});var l=o(96540);const n={},r=l.createContext(n);function t(e){const c=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(c):{...c,...e}}),[c,e])}function s(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),l.createElement(r.Provider,{value:c},e.children)}}}]);