"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[55353],{90814:(e,l,i)=>{i.r(l),i.d(l,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>h});var n=i(74848),t=i(28453),s=i(11470),r=i(19365);const o={title:"FilePicker",sidebar_label:"FilePicker"},a=void 0,d={id:"controls/filepicker",title:"FilePicker",description:"A control that allows you to use the native file explorer to pick single or multiple files, with extensions filtering support and upload.",source:"@site/docs/controls/filepicker.md",sourceDirName:"controls",slug:"/controls/filepicker",permalink:"/docs/flet-docs/docs/controls/filepicker",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/filepicker.md",tags:[],version:"current",frontMatter:{title:"FilePicker",sidebar_label:"FilePicker"},sidebar:"docs",previous:{title:"DragTarget",permalink:"/docs/flet-docs/docs/controls/dragtarget"},next:{title:"Flashlight",permalink:"/docs/flet-docs/docs/controls/flashlight"}},c={},h=[{value:"Examples",id:"examples",level:2},{value:"Pick multiple files",id:"pick-multiple-files",level:3},{value:"All dialog modes",id:"all-dialog-modes",level:3},{value:"Upload multiple files",id:"upload-multiple-files",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>allowed_extensions</code>",id:"allowed_extensions",level:3},{value:"<code>allow_multiple</code>",id:"allow_multiple",level:3},{value:"<code>dialog_title</code>",id:"dialog_title",level:3},{value:"<code>file_name</code>",id:"file_name",level:3},{value:"<code>file_type</code>",id:"file_type",level:3},{value:"<code>initial_directory</code>",id:"initial_directory",level:3},{value:"<code>result</code>",id:"result",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>get_directory_path()</code>",id:"get_directory_path",level:3},{value:"<code>pick_files()</code>",id:"pick_files",level:3},{value:"<code>save_file()</code>",id:"save_file",level:3},{value:"<code>upload()</code>",id:"upload",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_result</code>",id:"on_result",level:3},{value:"<code>on_upload</code>",id:"on_upload",level:3}];function u(e){const l={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.p,{children:"A control that allows you to use the native file explorer to pick single or multiple files, with extensions filtering support and upload."}),"\n","\n",(0,n.jsxs)(l.admonition,{type:"info",children:[(0,n.jsxs)(l.p,{children:["In Linux, the FilePicker control depends on ",(0,n.jsx)(l.a,{href:"https://help.gnome.org/users/zenity/stable/",children:"Zenity"}),"  when running Flet as an app. This is not a requirement when running Flet in a browser."]}),(0,n.jsx)(l.p,{children:"To install Zenity on Ubuntu/Debian run the following commands:"}),(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-bash",children:"sudo apt-get install zenity\n"})})]}),"\n",(0,n.jsx)(l.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.a,{href:"https://flet-controls-gallery.fly.dev/utility/filepicker",children:"Live example"})}),"\n",(0,n.jsx)(l.h3,{id:"pick-multiple-files",children:"Pick multiple files"}),"\n",(0,n.jsx)(s.A,{groupId:"language",children:(0,n.jsx)(r.A,{value:"python",label:"Python",default:!0,children:(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    def pick_files_result(e: ft.FilePickerResultEvent):\n        selected_files.value = (\n            ", ".join(map(lambda f: f.name, e.files)) if e.files else "Cancelled!"\n        )\n        selected_files.update()\n\n    pick_files_dialog = ft.FilePicker(on_result=pick_files_result)\n    selected_files = ft.Text()\n\n    page.overlay.append(pick_files_dialog)\n\n    page.add(\n        ft.Row(\n            [\n                ft.ElevatedButton(\n                    "Pick files",\n                    icon=ft.Icons.UPLOAD_FILE,\n                    on_click=lambda _: pick_files_dialog.pick_files(\n                        allow_multiple=True\n                    ),\n                ),\n                selected_files,\n            ]\n        )\n    )\n\nft.app(main)\n'})})})}),"\n",(0,n.jsx)(l.h3,{id:"all-dialog-modes",children:"All dialog modes"}),"\n",(0,n.jsx)("img",{src:"/docs/flet-docs/img/docs/controls/file-picker/file-picker-all-modes-demo.png",className:"screenshot-70"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.a,{href:"https://github.com/flet-dev/examples/blob/main/python/controls/file-picker/file-picker-all-modes.py",children:"Source code"})}),"\n",(0,n.jsx)(l.h3,{id:"upload-multiple-files",children:"Upload multiple files"}),"\n",(0,n.jsx)("img",{src:"/docs/flet-docs/img/docs/controls/file-picker/file-picker-multiple-uploads.png",className:"screenshot-40"}),"\n",(0,n.jsx)(l.p,{children:(0,n.jsx)(l.a,{href:"https://github.com/flet-dev/examples/blob/main/python/controls/file-picker/file-picker-upload-progress.py",children:"Source code"})}),"\n",(0,n.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(l.h3,{id:"allowed_extensions",children:(0,n.jsx)(l.code,{children:"allowed_extensions"})}),"\n",(0,n.jsx)(l.p,{children:"Allow picking files with specified extensions only."}),"\n",(0,n.jsxs)(l.p,{children:["The value of this property is a list of strings, e.g. ",(0,n.jsx)(l.code,{children:'["pdf", "svg", "jpg"]'}),"."]}),"\n",(0,n.jsx)(l.h3,{id:"allow_multiple",children:(0,n.jsx)(l.code,{children:"allow_multiple"})}),"\n",(0,n.jsx)(l.p,{children:"Allow selecting multiple files."}),"\n",(0,n.jsx)(l.h3,{id:"dialog_title",children:(0,n.jsx)(l.code,{children:"dialog_title"})}),"\n",(0,n.jsx)(l.p,{children:"Can be optionally set on desktop platforms to set the modal window title. It will be ignored on other platforms."}),"\n",(0,n.jsx)(l.h3,{id:"file_name",children:(0,n.jsx)(l.code,{children:"file_name"})}),"\n",(0,n.jsx)(l.p,{children:'Works for "Save file" dialog only. Can be set to a non-empty string to provide a default file name.'}),"\n",(0,n.jsx)(l.h3,{id:"file_type",children:(0,n.jsx)(l.code,{children:"file_type"})}),"\n",(0,n.jsx)(l.p,{children:"Allow to pick files of specific group."}),"\n",(0,n.jsxs)(l.p,{children:["Value is of type ",(0,n.jsx)(l.a,{href:"/docs/reference/types/filepickerfiletype",children:(0,n.jsx)(l.code,{children:"FilePickerFileType"})})," and defaults\nto ",(0,n.jsx)(l.code,{children:"FilePickerFileType.ANY"}),"."]}),"\n",(0,n.jsx)(l.h3,{id:"initial_directory",children:(0,n.jsx)(l.code,{children:"initial_directory"})}),"\n",(0,n.jsx)(l.p,{children:"Can be optionally set to an absolute path to specify where the dialog should open. Only supported on Linux, macOS, and Windows."}),"\n",(0,n.jsx)(l.h3,{id:"result",children:(0,n.jsx)(l.code,{children:"result"})}),"\n",(0,n.jsx)(l.p,{children:"Result is set when the dialog is closed."}),"\n",(0,n.jsxs)(l.p,{children:["Value is of type ",(0,n.jsx)(l.a,{href:"/docs/reference/types/filepickerresultevent",children:(0,n.jsx)(l.code,{children:"FilePickerResultEvent"})}),"."]}),"\n",(0,n.jsx)(l.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(l.h3,{id:"get_directory_path",children:(0,n.jsx)(l.code,{children:"get_directory_path()"})}),"\n",(0,n.jsx)(l.p,{children:"Selects a directory and returns its absolute path."}),"\n",(0,n.jsx)(l.p,{children:"You could either set the following file picker properties or provide their values in the method call:"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"dialog_title"})," - the title of the dialog window."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"initial_directory"})," - the initial directory where the dialog should open."]}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"pick_files",children:(0,n.jsx)(l.code,{children:"pick_files()"})}),"\n",(0,n.jsx)(l.p,{children:"Retrieves the file(s) from the underlying platform."}),"\n",(0,n.jsx)(l.p,{children:"You could either set the following file picker properties or provide their values in the method call:"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"dialog_title"})," - the title of the dialog window."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"initial_directory"})," - the initial directory where the dialog should open."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"file_type"})," - the allowed ",(0,n.jsx)(l.a,{href:"/docs/reference/types/filepickerfiletype",children:(0,n.jsx)(l.code,{children:"FilePickerFileType"})}),"."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"allowed_extensions"})," - the allowed file extensions. Has effect only if ",(0,n.jsx)(l.code,{children:"file_type"})," is ",(0,n.jsx)(l.code,{children:"FilePickerFileType.CUSTOM"}),"."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"allow_multiple"})," - allow selecting multiple files."]}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"save_file",children:(0,n.jsx)(l.code,{children:"save_file()"})}),"\n",(0,n.jsx)(l.p,{children:"Opens a save file dialog which lets the user select a file path and a file name to save a file."}),"\n",(0,n.jsxs)(l.p,{children:["This function does not actually save a file. It only opens the dialog to let the user choose a location and file name. This function only returns the path to this (non-existing) file in ",(0,n.jsx)(l.code,{children:"FilePicker.result.path"})," property."]}),"\n",(0,n.jsx)(l.p,{children:"This method is only available on desktop platforms (Linux, macOS & Windows)."}),"\n",(0,n.jsx)(l.p,{children:"You could either set the following file picker properties or provide their values in the method call:"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"dialog_title"})," - the title of the dialog window."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"file_name"})," - the default file name."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"initial_directory"})," - the initial directory where the dialog should open."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"file_type"})," - the allowed ",(0,n.jsx)(l.a,{href:"/docs/reference/types/filepickerfiletype",children:(0,n.jsx)(l.code,{children:"FilePickerFileType"})}),"."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"allowed_extensions"})," - the allowed file extensions. Has effect only if ",(0,n.jsx)(l.code,{children:"file_type"})," is ",(0,n.jsx)(l.code,{children:"FilePickerFileType.CUSTOM"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(l.admonition,{type:"info",children:[(0,n.jsx)(l.p,{children:"To save a file from the web, you don't need to use the FilePicker object."}),(0,n.jsxs)(l.p,{children:["You can instead provides an API endpoint ",(0,n.jsx)(l.code,{children:"/download/:filename"})," that returns the file content, and then\nuse ",(0,n.jsx)(l.a,{href:"/docs/controls/page#launch_urlurl",children:(0,n.jsx)(l.code,{children:"page.launch_url"})})," to open the url, which will trigger the browser's save file dialog."]}),(0,n.jsxs)(l.p,{children:["Take ",(0,n.jsx)(l.a,{href:"/docs/publish/web/dynamic-website#advanced-fastapi-scenarios",children:"FastAPI"})," as an example, you can use the following code to implement the endpoint:"]}),(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'from fastapi import FastAPI, Response\nfrom fastapi.responses import FileResponse\n\napp = flet_fastapi.app(main)\n\n@app.get("/download/{filename}")\ndef download(filename: str):\n    path = prepare_file(filename)\n    return FileResponse(path)\n'})}),(0,n.jsxs)(l.p,{children:["and then use ",(0,n.jsx)(l.code,{children:'page.launch_url("/download/myfile.txt")'})," to open the url, for instance, when a button is clicked."]}),(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'ft.ElevatedButton("Download myfile", on_click=lambda _: page.launch_url("/download/myfile.txt"))\n'})})]}),"\n",(0,n.jsx)(l.h3,{id:"upload",children:(0,n.jsx)(l.code,{children:"upload()"})}),"\n",(0,n.jsx)(l.p,{children:"Uploads selected files to specified upload URLs."}),"\n",(0,n.jsxs)(l.p,{children:["Before calling upload ",(0,n.jsx)(l.a,{href:"#pick_files",children:(0,n.jsx)(l.code,{children:"pick_files()"})})," must be called, so the internal file picker selection is not empty."]}),"\n",(0,n.jsx)(l.p,{children:"Method arguments:"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"files"})," - a list of ",(0,n.jsx)(l.a,{href:"/docs/reference/types/filepickeruploadfile",children:(0,n.jsx)(l.code,{children:"FilePickerUploadFile"})}),"."]}),"\n"]}),"\n",(0,n.jsxs)(l.p,{children:["Each list item specifies which file should be uploaded to the upload URL with ",(0,n.jsx)(l.code,{children:"PUT"})," (default) or ",(0,n.jsx)(l.code,{children:"POST"})," method."]}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.code,{children:"name"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.code,{children:"upload_url"})}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"method"})," (",(0,n.jsx)(l.code,{children:"PUT"})," (default), ",(0,n.jsx)(l.code,{children:"POST"}),")"]}),"\n"]}),"\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.code,{children:"upload_url"})," is, generally, a pre-signed URL (\nlike ",(0,n.jsx)(l.a,{href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/PresignedUrlUploadObject.html",children:"AWS S3 object upload URL"}),")."]}),"\n",(0,n.jsx)(l.p,{children:"For built-in upload storage a signed upload URL can be generated with the following call:"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'upload_url = page.get_upload_url("dir/filename.ext", 60)\n'})}),"\n",(0,n.jsx)(l.p,{children:"First argument is a relative to upload storage path.\nSecond argument is a URL time-to-live in seconds."}),"\n",(0,n.jsxs)(l.p,{children:["To enable built-in upload storage provide ",(0,n.jsx)(l.code,{children:"upload_dir"})," argument to ",(0,n.jsx)(l.code,{children:"flet.app()"})," call:"]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'ft.app(main, upload_dir="uploads")\n'})}),"\n",(0,n.jsx)(l.h2,{id:"events",children:"Events"}),"\n",(0,n.jsx)(l.h3,{id:"on_result",children:(0,n.jsx)(l.code,{children:"on_result"})}),"\n",(0,n.jsx)(l.p,{children:"Fires when file picker dialog is closed."}),"\n",(0,n.jsxs)(l.p,{children:["Event object is an instance of ",(0,n.jsx)(l.a,{href:"/docs/reference/types/filepickerresultevent",children:(0,n.jsx)(l.code,{children:"FilePickerResultEvent"})}),".\nSee ",(0,n.jsx)(l.a,{href:"#result",children:(0,n.jsx)(l.code,{children:"FilePicker.result"})})," for class properties."]}),"\n",(0,n.jsx)(l.h3,{id:"on_upload",children:(0,n.jsx)(l.code,{children:"on_upload"})}),"\n",(0,n.jsx)(l.p,{children:"Fires when a file upload progress is updated."}),"\n",(0,n.jsxs)(l.p,{children:["Event object is an instance of ",(0,n.jsx)(l.a,{href:"/docs/reference/types/filepickeruploadevent",children:(0,n.jsx)(l.code,{children:"FilePickerUploadEvent"})}),"."]})]})}function p(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,n.jsx)(l,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},19365:(e,l,i)=>{i.d(l,{A:()=>r});i(96540);var n=i(18215);const t={tabItem:"tabItem_Ymn6"};var s=i(74848);function r(e){let{children:l,hidden:i,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(t.tabItem,r),hidden:i,children:l})}},11470:(e,l,i)=>{i.d(l,{A:()=>b});var n=i(96540),t=i(18215),s=i(23104),r=i(56347),o=i(205),a=i(57485),d=i(31682),c=i(70679);function h(e){var l,i;return null!=(l=null==(i=n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:l}=e;return!!l&&"object"==typeof l&&"value"in l}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:i.filter(Boolean))?l:[]}function u(e){const{values:l,children:i}=e;return(0,n.useMemo)((()=>{const e=null!=l?l:function(e){return h(e).map((e=>{let{props:{value:l,label:i,attributes:n,default:t}}=e;return{value:l,label:i,attributes:n,default:t}}))}(i);return function(e){const l=(0,d.X)(e,((e,l)=>e.value===l.value));if(l.length>0)throw new Error('Docusaurus error: Duplicate values "'+l.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[l,i])}function p(e){let{value:l,tabValues:i}=e;return i.some((e=>e.value===l))}function f(e){let{queryString:l=!1,groupId:i}=e;const t=(0,r.W6)(),s=function(e){let{queryString:l=!1,groupId:i}=e;if("string"==typeof l)return l;if(!1===l)return null;if(!0===l&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=i?i:null}({queryString:l,groupId:i});return[(0,a.aZ)(s),(0,n.useCallback)((e=>{if(!s)return;const l=new URLSearchParams(t.location.search);l.set(s,e),t.replace({...t.location,search:l.toString()})}),[s,t])]}function x(e){const{defaultValue:l,queryString:i=!1,groupId:t}=e,s=u(e),[r,a]=(0,n.useState)((()=>function(e){var l;let{defaultValue:i,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(i){if(!p({value:i,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+i+'" but none of its children has the corresponding value. Available values are: '+n.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return i}const t=null!=(l=n.find((e=>e.default)))?l:n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:l,tabValues:s}))),[d,h]=f({queryString:i,groupId:t}),[x,j]=function(e){let{groupId:l}=e;const i=function(e){return e?"docusaurus.tab."+e:null}(l),[t,s]=(0,c.Dv)(i);return[t,(0,n.useCallback)((e=>{i&&s.set(e)}),[i,s])]}({groupId:t}),m=(()=>{const e=null!=d?d:x;return p({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{m&&a(m)}),[m]);return{selectedValue:r,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error("Can't select invalid tab value="+e);a(e),h(e),j(e)}),[h,j,s]),tabValues:s}}var j=i(92303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=i(74848);function v(e){let{className:l,block:i,selectedValue:n,selectValue:r,tabValues:o}=e;const a=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const l=e.currentTarget,i=a.indexOf(l),t=o[i].value;t!==n&&(d(l),r(t))},h=e=>{var l;let i=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var n;const l=a.indexOf(e.currentTarget)+1;i=null!=(n=a[l])?n:a[0];break}case"ArrowLeft":{var t;const l=a.indexOf(e.currentTarget)-1;i=null!=(t=a[l])?t:a[a.length-1];break}}null==(l=i)||l.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":i},l),children:o.map((e=>{let{value:l,label:i,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:n===l?0:-1,"aria-selected":n===l,ref:e=>a.push(e),onKeyDown:h,onClick:c,...s,className:(0,t.A)("tabs__item",m.tabItem,null==s?void 0:s.className,{"tabs__item--active":n===l}),children:null!=i?i:l},l)}))})}function y(e){let{lazy:l,children:i,selectedValue:t}=e;const s=(Array.isArray(i)?i:[i]).filter(Boolean);if(l){const e=s.find((e=>e.props.value===t));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map(((e,l)=>(0,n.cloneElement)(e,{key:l,hidden:e.props.value!==t})))})}function _(e){const l=x(e);return(0,g.jsxs)("div",{className:(0,t.A)("tabs-container",m.tabList),children:[(0,g.jsx)(v,{...l,...e}),(0,g.jsx)(y,{...l,...e})]})}function b(e){const l=(0,j.A)();return(0,g.jsx)(_,{...e,children:h(e.children)},String(l))}},28453:(e,l,i)=>{i.d(l,{R:()=>r,x:()=>o});var n=i(96540);const t={},s=n.createContext(t);function r(e){const l=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function o(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(s.Provider,{value:l},e.children)}}}]);