"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[15092],{36134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=n(74848),r=n(28453);const i={title:"Self Hosting",sidebar_label:"Self Hosting"},l=void 0,a={id:"publish/web/dynamic-website/hosting/self-hosting",title:"Self Hosting",description:"Host a Flet app on your own server with NGINX.",source:"@site/docs/publish/web/dynamic-website/hosting/self-hosting.md",sourceDirName:"publish/web/dynamic-website/hosting",slug:"/publish/web/dynamic-website/hosting/self-hosting",permalink:"/docs/flet-doc/docs/publish/web/dynamic-website/hosting/self-hosting",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/publish/web/dynamic-website/hosting/self-hosting.md",tags:[],version:"current",frontMatter:{title:"Self Hosting",sidebar_label:"Self Hosting"},sidebar:"docs",previous:{title:"Replit",permalink:"/docs/flet-doc/docs/publish/web/dynamic-website/hosting/replit"},next:{title:"Built-in extensions",permalink:"/docs/flet-doc/docs/extend/built-in-extensions"}},o={},d=[{value:"Setup Flet Environment",id:"setup-flet-environment",level:2},{value:"<code>requirements.txt</code> and virtualenv",id:"requirementstxt-and-virtualenv",level:3},{value:"Sample Flet app",id:"sample-flet-app",level:3},{value:"Automatically start Flet app",id:"automatically-start-flet-app",level:2},{value:"Create <code>systemd</code> unit file",id:"create-systemd-unit-file",level:3},{value:"Enable Flet app service",id:"enable-flet-app-service",level:3},{value:"NGINX Proxy Setup",id:"nginx-proxy-setup",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Host a Flet app on your own server with NGINX."}),"\n",(0,s.jsxs)(t.p,{children:["There are free and inexpensive cloud server tiers available at ",(0,s.jsx)(t.a,{href:"https://aws.amazon.com/free/",children:"AWS"}),", ",(0,s.jsx)(t.a,{href:"https://www.oracle.com/cloud/free/",children:"Oracle"}),", ",(0,s.jsx)(t.a,{href:"https://www.linode.com/pricing/",children:"Linode"}),", and more."]}),"\n",(0,s.jsx)(t.h2,{id:"setup-flet-environment",children:"Setup Flet Environment"}),"\n",(0,s.jsxs)(t.h3,{id:"requirementstxt-and-virtualenv",children:[(0,s.jsx)(t.code,{children:"requirements.txt"})," and virtualenv"]}),"\n",(0,s.jsxs)(t.p,{children:["Create ",(0,s.jsx)(t.code,{children:"requirements.txt"})," with a list of application dependencies. At minimum it should contain ",(0,s.jsx)(t.code,{children:"flet"})," module:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-txt",children:"flet\n"})}),"\n",(0,s.jsx)(t.p,{children:"Create a virtualenv and install requirements:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"python -m venv .venv\nsource .venv/bin/activate\npip install -r requirements.txt\n"})}),"\n",(0,s.jsx)(t.h3,{id:"sample-flet-app",children:"Sample Flet app"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    page.title = "My Flet app"\n    page.add(ft.Text("Hello, world!"))\n\nif __name__ == "__main__":\n    ft.app(main)\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Flet app will be served from the root URL, but you can configure ",(0,s.jsx)(t.code,{children:"FLET_WEB_APP_PATH"})," environment variable\nto serve beneath the root e.g. ",(0,s.jsx)(t.code,{children:"/apps/myapp"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["By default, Flet web app will be running on port ",(0,s.jsx)(t.code,{children:"8000"}),", but you can change that by setting up ",(0,s.jsx)(t.code,{children:"FLET_SERVER_PORT"})," environment variable."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/docs/publish/web/dynamic-website#environment-variables",children:"Complete list of environment variables"})," supported by a web app."]}),"\n",(0,s.jsx)(t.h2,{id:"automatically-start-flet-app",children:"Automatically start Flet app"}),"\n",(0,s.jsxs)(t.h3,{id:"create-systemd-unit-file",children:["Create ",(0,s.jsx)(t.code,{children:"systemd"})," unit file"]}),"\n",(0,s.jsxs)(t.p,{children:["Automatically start the Flet app using a ",(0,s.jsx)(t.code,{children:"systemd"})," service unit file ",(0,s.jsx)(t.code,{children:"flet.service"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Setup below assumes your Flet app script is defined in ",(0,s.jsx)(t.code,{children:"$HOME/flet-app/main.py"}),". Replace ",(0,s.jsx)(t.code,{children:"User"}),", ",(0,s.jsx)(t.code,{children:"Group"}),", ",(0,s.jsx)(t.code,{children:"WorkingDirectory"}),", etc. as per your setup."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ini",children:'[Unit]\nDescription=Flet App\nAfter=network.target\n\n[Service]\nUser=ubuntu\nGroup=ubuntu\nWorkingDirectory=/home/ubuntu/flet-app\nEnvironment="PATH=/home/ubuntu/flet-app/.venv/bin"\nExecStart=/home/ubuntu/flet-app/.venv/bin/python /home/ubuntu/flet-app/main.py\n\n[Install]\nWantedBy=multi-user.target\n'})}),"\n",(0,s.jsx)(t.h3,{id:"enable-flet-app-service",children:"Enable Flet app service"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"cd /etc/systemd/system\nsudo ln -s /home/ubuntu/flet-app/flet.service\nsudo systemctl start flet\nsudo systemctl enable flet\nsudo systemctl status flet\n"})}),"\n",(0,s.jsx)(t.h2,{id:"nginx-proxy-setup",children:"NGINX Proxy Setup"}),"\n",(0,s.jsx)(t.p,{children:"NGINX will proxy the Flet app and the websocket."}),"\n",(0,s.jsxs)(t.p,{children:["In your ",(0,s.jsx)(t.code,{children:"/etc/nginx/sites-available/*"})," config file, updating path and port as needed:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-txt",children:'    location / {\n        proxy_pass         http://127.0.0.1:8000/;\n        proxy_http_version 1.1;\n        proxy_set_header   Upgrade $http_upgrade;\n        proxy_set_header   Connection keep-alive;\n        proxy_set_header   Host $host;\n        proxy_cache_bypass $http_upgrade;\n        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header   X-Forwarded-Proto $scheme;\n    }\n  \n    location /ws {\n        proxy_pass         http://127.0.0.1:8000/ws;\n        proxy_http_version 1.1;\n        proxy_set_header   Upgrade $http_upgrade;\n        proxy_set_header   Connection "upgrade";\n        proxy_set_header   Host $host;\n        proxy_cache_bypass $http_upgrade;\n        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header   X-Forwarded-Proto $scheme;\n    }\n'})}),"\n",(0,s.jsx)(t.p,{children:"That's it! Restart NGINX, and open your app in a browser."})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var s=n(96540);const r={},i=s.createContext(r);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);