"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[85870],{835:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var l=t(74848),r=t(28453),i=t(11470),o=t(19365);const s={title:"ListView",sidebar_label:"ListView"},c=void 0,a={id:"controls/listview",title:"ListView",description:"A scrollable list of controls arranged linearly.",source:"@site/docs/controls/listview.md",sourceDirName:"controls",slug:"/controls/listview",permalink:"/docs/flet-doc/docs/controls/listview",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/listview.md",tags:[],version:"current",frontMatter:{title:"ListView",sidebar_label:"ListView"},sidebar:"docs",previous:{title:"ListTile",permalink:"/docs/flet-doc/docs/controls/listtile"},next:{title:"Page",permalink:"/docs/flet-doc/docs/controls/page"}},d={},h=[{value:"Examples",id:"examples",level:2},{value:"Auto-scrolling ListView",id:"auto-scrolling-listview",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>auto_scroll</code>",id:"auto_scroll",level:3},{value:"<code>build_controls_on_demand</code>",id:"build_controls_on_demand",level:3},{value:"<code>cache_extent</code>",id:"cache_extent",level:3},{value:"<code>clip_behavior</code>",id:"clip_behavior",level:3},{value:"<code>controls</code>",id:"controls",level:3},{value:"<code>divider_thickness</code>",id:"divider_thickness",level:3},{value:"<code>first_item_prototype</code>",id:"first_item_prototype",level:3},{value:"<code>horizontal</code>",id:"horizontal",level:3},{value:"<code>item_extent</code>",id:"item_extent",level:3},{value:"<code>on_scroll_interval</code>",id:"on_scroll_interval",level:3},{value:"<code>padding</code>",id:"padding",level:3},{value:"<code>reverse</code>",id:"reverse",level:3},{value:"<code>semantic_child_count</code>",id:"semantic_child_count",level:3},{value:"<code>spacing</code>",id:"spacing",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>scroll_to(offset, delta, key, duration, curve)</code>",id:"scroll_tooffset-delta-key-duration-curve",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_scroll</code>",id:"on_scroll",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"A scrollable list of controls arranged linearly."}),"\n",(0,l.jsx)(n.p,{children:"ListView is the most commonly used scrolling control. It displays its children one after another in the scroll direction. In the cross axis, the children are required to fill the ListView."}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsxs)(n.p,{children:["ListView is very effective for large lists (thousands of items). Prefer it over ",(0,l.jsx)(n.a,{href:"/docs/controls/column",children:(0,l.jsx)(n.code,{children:"Column"})})," or ",(0,l.jsx)(n.a,{href:"/docs/controls/row",children:(0,l.jsx)(n.code,{children:"Row"})})," for smooth scrolling."]})}),"\n","\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://flet-controls-gallery.fly.dev/layout/listview",children:"Live example"})}),"\n",(0,l.jsx)(n.h3,{id:"auto-scrolling-listview",children:"Auto-scrolling ListView"}),"\n",(0,l.jsx)(i.A,{groupId:"language",children:(0,l.jsx)(o.A,{value:"python",label:"Python",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'from time import sleep\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = "Auto-scrolling ListView"\n\n    lv = ft.ListView(expand=1, spacing=10, padding=20, auto_scroll=True)\n\n    count = 1\n\n    for i in range(0, 60):\n        lv.controls.append(ft.Text(f"Line {count}"))\n        count += 1\n\n    page.add(lv)\n\n    for i in range(0, 60):\n        sleep(1)\n        lv.controls.append(ft.Text(f"Line {count}"))\n        count += 1\n        page.update()\n\nft.app(main)\n'})})})}),"\n",(0,l.jsx)("img",{src:"/docs/flet-doc/img/docs/controls/listview/custom-listview.gif",className:"screenshot-40"}),"\n",(0,l.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(n.h3,{id:"auto_scroll",children:(0,l.jsx)(n.code,{children:"auto_scroll"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"True"})," if scrollbar should automatically move its position to the end when children updated. Must be ",(0,l.jsx)(n.code,{children:"False"})," for ",(0,l.jsx)(n.code,{children:"scroll_to()"})," method to work."]}),"\n",(0,l.jsxs)(n.p,{children:["Defaults to ",(0,l.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"build_controls_on_demand",children:(0,l.jsx)(n.code,{children:"build_controls_on_demand"})}),"\n",(0,l.jsxs)(n.p,{children:["Whether the ",(0,l.jsx)(n.code,{children:"controls"})," should be built lazily/on-demand, i.e. only when they are about to become visible.\nThis is particularly useful when dealing with a large number of controls."]}),"\n",(0,l.jsxs)(n.p,{children:["Defaults to ",(0,l.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"cache_extent",children:(0,l.jsx)(n.code,{children:"cache_extent"})}),"\n",(0,l.jsx)(n.p,{children:"Items that fall in the cache area (area before or after the visible area that are about to become visible when the user\nscrolls) are laid out even though they are not (yet) visible on screen.\nThe cacheExtent describes how many pixels the cache area extends before the leading edge and after the trailing edge of\nthe viewport."}),"\n",(0,l.jsxs)(n.p,{children:["The total extent, which the viewport will try to cover with ",(0,l.jsx)(n.code,{children:"controls"}),", is ",(0,l.jsx)(n.code,{children:"cache_extent"})," before the leading edge +\nextent of the main axis + ",(0,l.jsx)(n.code,{children:"cache_extent"})," after the trailing edge."]}),"\n",(0,l.jsx)(n.h3,{id:"clip_behavior",children:(0,l.jsx)(n.code,{children:"clip_behavior"})}),"\n",(0,l.jsx)(n.p,{children:"The content will be clipped (or not) according to this option."}),"\n",(0,l.jsxs)(n.p,{children:["Value is of type ",(0,l.jsx)(n.a,{href:"/docs/reference/types/clipbehavior",children:(0,l.jsx)(n.code,{children:"ClipBehavior"})})," and defaults to ",(0,l.jsx)(n.code,{children:"ClipBehavior.HARD_EDGE"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"controls",children:(0,l.jsx)(n.code,{children:"controls"})}),"\n",(0,l.jsxs)(n.p,{children:["A list of ",(0,l.jsx)(n.code,{children:"Control"}),"s to display inside ListView."]}),"\n",(0,l.jsx)(n.h3,{id:"divider_thickness",children:(0,l.jsx)(n.code,{children:"divider_thickness"})}),"\n",(0,l.jsxs)(n.p,{children:["If greater than ",(0,l.jsx)(n.code,{children:"0"})," then Divider is used as a spacing between list view items."]}),"\n",(0,l.jsx)(n.h3,{id:"first_item_prototype",children:(0,l.jsx)(n.code,{children:"first_item_prototype"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"True"}),' if the dimensions of the first item should be used as a "prototype" for all other items, i.e. their height or\nwidth will be the same as the first item.']}),"\n",(0,l.jsxs)(n.p,{children:["Defaults to ",(0,l.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"horizontal",children:(0,l.jsx)(n.code,{children:"horizontal"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"True"})," to layout ListView items horizontally."]}),"\n",(0,l.jsx)(n.h3,{id:"item_extent",children:(0,l.jsx)(n.code,{children:"item_extent"})}),"\n",(0,l.jsxs)(n.p,{children:["A fixed height or width (for ",(0,l.jsx)(n.code,{children:"horizontal"})," ListView) of an item to optimize rendering."]}),"\n",(0,l.jsx)(n.h3,{id:"on_scroll_interval",children:(0,l.jsx)(n.code,{children:"on_scroll_interval"})}),"\n",(0,l.jsxs)(n.p,{children:["Throttling in milliseconds for ",(0,l.jsx)(n.code,{children:"on_scroll"})," event."]}),"\n",(0,l.jsxs)(n.p,{children:["Defaults to ",(0,l.jsx)(n.code,{children:"10"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"padding",children:(0,l.jsx)(n.code,{children:"padding"})}),"\n",(0,l.jsx)(n.p,{children:"The amount of space by which to inset the children."}),"\n",(0,l.jsxs)(n.p,{children:["Value is of type",(0,l.jsx)(n.a,{href:"/docs/reference/types/padding",children:(0,l.jsx)(n.code,{children:"Padding"})}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"reverse",children:(0,l.jsx)(n.code,{children:"reverse"})}),"\n",(0,l.jsx)(n.p,{children:"Defines whether the scroll view scrolls in the reading direction."}),"\n",(0,l.jsxs)(n.p,{children:["Defaults to ",(0,l.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"semantic_child_count",children:(0,l.jsx)(n.code,{children:"semantic_child_count"})}),"\n",(0,l.jsx)(n.p,{children:"The number of children that will contribute semantic information."}),"\n",(0,l.jsx)(n.h3,{id:"spacing",children:(0,l.jsx)(n.code,{children:"spacing"})}),"\n",(0,l.jsx)(n.p,{children:"The height of Divider between ListView items. No spacing between items if not specified."}),"\n",(0,l.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(n.h3,{id:"scroll_tooffset-delta-key-duration-curve",children:(0,l.jsx)(n.code,{children:"scroll_to(offset, delta, key, duration, curve)"})}),"\n",(0,l.jsxs)(n.p,{children:["Moves scroll position to either absolute ",(0,l.jsx)(n.code,{children:"offset"}),", relative ",(0,l.jsx)(n.code,{children:"delta"})," or jump to the control with specified ",(0,l.jsx)(n.code,{children:"key"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["See ",(0,l.jsx)(n.a,{href:"/docs/controls/column#scroll_tooffset-delta-key-duration-curve",children:(0,l.jsx)(n.code,{children:"Column.scroll_to()"})})," for method details and examples."]}),"\n",(0,l.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,l.jsx)(n.h3,{id:"on_scroll",children:(0,l.jsx)(n.code,{children:"on_scroll"})}),"\n",(0,l.jsx)(n.p,{children:"Fires when scroll position is changed by a user."}),"\n",(0,l.jsxs)(n.p,{children:["Event handler argument is an instance of ",(0,l.jsx)(n.a,{href:"/docs/reference/types/onscrollevent",children:(0,l.jsx)(n.code,{children:"OnScrollEvent"})})," class."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var l=t(18215);const r={tabItem:"tabItem_Ymn6"};var i=t(74848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,l.A)(r.tabItem,o),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>w});var l=t(96540),r=t(18215),i=t(23104),o=t(56347),s=t(205),c=t(57485),a=t(31682),d=t(70679);function h(e){var n,t;return null!=(n=null==(t=l.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function u(e){const{values:n,children:t}=e;return(0,l.useMemo)((()=>{const e=null!=n?n:function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:l,default:r}}=e;return{value:n,label:t,attributes:l,default:r}}))}(t);return function(e){const n=(0,a.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const r=(0,o.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,c.aZ)(i),(0,l.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=u(e),[o,c]=(0,l.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:l}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+l.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const r=null!=(n=l.find((e=>e.default)))?n:l[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[a,h]=f({queryString:t,groupId:r}),[v,x]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[r,i]=(0,d.Dv)(t);return[r,(0,l.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:r}),m=(()=>{const e=null!=a?a:v;return p({value:e,tabValues:i})?e:null})();(0,s.A)((()=>{m&&c(m)}),[m]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);c(e),h(e),x(e)}),[h,x,i]),tabValues:i}}var x=t(92303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(74848);function b(e){let{className:n,block:t,selectedValue:l,selectValue:o,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:a}=(0,i.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),r=s[t].value;r!==l&&(a(n),o(r))},h=e=>{var n;let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var l;const n=c.indexOf(e.currentTarget)+1;t=null!=(l=c[n])?l:c[0];break}case"ArrowLeft":{var r;const n=c.indexOf(e.currentTarget)-1;t=null!=(r=c[n])?r:c[c.length-1];break}}null==(n=t)||n.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...i,className:(0,r.A)("tabs__item",m.tabItem,null==i?void 0:i.className,{"tabs__item--active":l===n}),children:null!=t?t:n},n)}))})}function g(e){let{lazy:n,children:t,selectedValue:r}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function _(e){const n=v(e);return(0,j.jsxs)("div",{className:(0,r.A)("tabs-container",m.tabList),children:[(0,j.jsx)(b,{...n,...e}),(0,j.jsx)(g,{...n,...e})]})}function w(e){const n=(0,x.A)();return(0,j.jsx)(_,{...e,children:h(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var l=t(96540);const r={},i=l.createContext(r);function o(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);