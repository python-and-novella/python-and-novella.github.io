"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[63853],{68526:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var i=s(74848),a=s(28453);const t={title:"Host app as a dynamic website",sidebar_label:"Dynamic website",slug:"/publish/web/dynamic-website"},l=void 0,o={id:"publish/web/dynamic-website/index",title:"Host app as a dynamic website",description:"Introduction",source:"@site/docs/publish/web/dynamic-website/index.md",sourceDirName:"publish/web/dynamic-website",slug:"/publish/web/dynamic-website",permalink:"/docs/flet-docs/docs/publish/web/dynamic-website",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/publish/web/dynamic-website/index.md",tags:[],version:"current",frontMatter:{title:"Host app as a dynamic website",sidebar_label:"Dynamic website",slug:"/publish/web/dynamic-website"},sidebar:"docs",previous:{title:"Cloudflare",permalink:"/docs/flet-docs/docs/publish/web/static-website/hosting/cloudflare"},next:{title:"Hosting Flet web apps",permalink:"/docs/flet-docs/docs/publish/web/dynamic-website/hosting"}},r={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Sync and async handlers",id:"sync-and-async-handlers",level:3},{value:"Running the app locally",id:"running-the-app-locally",level:2},{value:"Running the app in production",id:"running-the-app-in-production",level:2},{value:"ASGI web server",id:"asgi-web-server",level:3},{value:"Hypercorn",id:"hypercorn",level:4},{value:"Daphne",id:"daphne",level:4},{value:"Gunicorn",id:"gunicorn",level:4},{value:"Assets",id:"assets",level:2},{value:"Customizing web app",id:"customizing-web-app",level:3},{value:"Favicon",id:"favicon",level:4},{value:"Loading animation",id:"loading-animation",level:4},{value:"PWA",id:"pwa",level:4},{value:"Manifest",id:"manifest",level:5},{value:"Icons",id:"icons",level:5},{value:"Environment variables",id:"environment-variables",level:2},{value:"Advanced FastAPI scenarios",id:"advanced-fastapi-scenarios",level:2},{value:"Flet FastAPI app",id:"flet-fastapi-app",level:3},{value:"Hosting multiple Flet apps under the same domain",id:"hosting-multiple-flet-apps-under-the-same-domain",level:3},{value:"Adding Flet to the existing FastAPI app",id:"adding-flet-to-the-existing-fastapi-app",level:3},{value:"Configuring individual Flet endpoints",id:"configuring-individual-flet-endpoints",level:3},{value:"Static files",id:"static-files",level:4},{value:"WebSocket handler",id:"websocket-handler",level:4},{value:"Uploads handler",id:"uploads-handler",level:4},{value:"OAuth callback handler",id:"oauth-callback-handler",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["Flet implements ",(0,i.jsx)(n.a,{href:"https://fastapi.tiangolo.com/",children:"FastAPI"})," app to run your app as a dynamic website."]}),"\n",(0,i.jsxs)(n.p,{children:["It uses ",(0,i.jsx)(n.a,{href:"https://www.uvicorn.org/",children:"Uvicorn"})," web server, by default, to run the app, but any ASGI-compatible server can be used instead."]}),"\n",(0,i.jsx)(n.h3,{id:"sync-and-async-handlers",children:"Sync and async handlers"}),"\n",(0,i.jsx)(n.p,{children:"In Flet web app you can mix both sync and async methods in the same app."}),"\n",(0,i.jsx)(n.p,{children:"For example, you can write an app like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import flet as ft\nimport time\nimport asyncio\n\ndef main(page: ft.Page):\n\n    def handler(e):\n      time.sleep(3)\n      page.add(ft.Text("Handler clicked"))\n\n    async def handler_async(e):\n      await asyncio.sleep(3)\n      page.add(ft.Text("Async handler clicked"))\n\n    page.add(\n        ft.ElevatedButton("Call handler", on_click=handler),\n        ft.ElevatedButton("Call async handler", on_click=handler_async)\n    )\n\nft.app(main)\n'})}),"\n",(0,i.jsxs)(n.p,{children:['In the example a click on one button is handled by a "blocking" handler while a click\non second button calls asynchronous handler. The first handler is run in a ',(0,i.jsx)(n.code,{children:"threading.Thread"})," while second handler is run as ",(0,i.jsx)(n.code,{children:"asyncio.Task"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"In web apps, using threads is one of the considerations for app scalability as threads is a finite resource. Usually, a thread pool is used and it could become a bottleneck with a growing number of users."}),"\n",(0,i.jsx)(n.p,{children:"Anyway, if your app is mostly doing I/O (database, web API) and/or you are able to use async-ready libraries we recommend implementing async handlers."}),"\n",(0,i.jsxs)(n.p,{children:["Check ",(0,i.jsx)(n.a,{href:"https://fastapi.tiangolo.com/async/",children:"FastAPI's article about async/await"})," to better understand the differences between concurrency and parallelism."]}),"\n",(0,i.jsx)(n.h2,{id:"running-the-app-locally",children:"Running the app locally"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"--web"})," (",(0,i.jsx)(n.code,{children:"-w"}),") option to start a Flet app as a web app:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"flet run --web app.py\n"})}),"\n",(0,i.jsx)(n.p,{children:"A new browser window/tab will be opened and the app will be using a random TCP port."}),"\n",(0,i.jsxs)(n.p,{children:["To run on a fixed port use ",(0,i.jsx)(n.code,{children:"--port"})," (",(0,i.jsx)(n.code,{children:"-p"}),") option:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"flet run --web --port 8000 app.py\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-the-app-in-production",children:"Running the app in production"}),"\n",(0,i.jsxs)(n.p,{children:["You can run your program with ",(0,i.jsx)(n.code,{children:"python"})," command directly:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"python app.py\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.uvicorn.org/",children:"Uvicorn"})," web server is used by default to host the web app."]}),"\n",(0,i.jsx)(n.p,{children:"If Flet detects the app is running in headless Linux environment (such as Docker container\nor EC2 VM):"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Port ",(0,i.jsx)(n.code,{children:"8000"})," will be used to run the app."]}),"\n",(0,i.jsx)(n.li,{children:"A new browser window with an app won't be opened."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If, for some reason, Flet is unable to detect headless environment you can force that behavior\nby defining the following environment variable:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"FLET_FORCE_WEB_SERVER=true\n"})}),"\n",(0,i.jsx)(n.h3,{id:"asgi-web-server",children:"ASGI web server"}),"\n",(0,i.jsxs)(n.p,{children:["You can host your Flet web app with any ASGI-compatible server such as ",(0,i.jsx)(n.a,{href:"https://www.uvicorn.org/",children:"Uvicorn"})," (used by default), ",(0,i.jsx)(n.a,{href:"https://pgjones.gitlab.io/hypercorn/",children:"Hypercorn"})," or ",(0,i.jsx)(n.a,{href:"https://github.com/django/daphne",children:"Daphne"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Just tell Flet to export ASGI app:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="main.py"',children:'import flet as ft\n\ndef main(page: ft.Page):\n    page.add(ft.Text("Hello ASGI!"))\n\napp = ft.app(main, export_asgi_app=True)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"hypercorn",children:"Hypercorn"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/pgjones/hypercorn/",children:"Hypercorn"})," is another ASGI web server inspired by Gunicorn."]}),"\n",(0,i.jsx)(n.p,{children:"To run the app with Hypercorn:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"hypercorn main:app --bind 0.0.0.0:8000\n"})}),"\n",(0,i.jsx)(n.h4,{id:"daphne",children:"Daphne"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/django/daphne",children:"Daphne"})," is a HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP, developed to power Django Channels."]}),"\n",(0,i.jsx)(n.p,{children:"To run the app with Daphne:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"daphne -b 0.0.0.0 -p 8000 main:app\n"})}),"\n",(0,i.jsx)(n.h4,{id:"gunicorn",children:"Gunicorn"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://gunicorn.org/",children:"Gunicorn"})," is popular web server to run Python web applications. While it implements WSGI specification it's possible to run ASGI FastAPI apps with a ",(0,i.jsx)(n.a,{href:"https://fastapi.tiangolo.com/deployment/server-workers/",children:"worker process class"})," provided by Uvicorn:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"gunicorn --bind 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker counter:app\n"})}),"\n",(0,i.jsx)(n.h2,{id:"assets",children:"Assets"}),"\n",(0,i.jsxs)(n.p,{children:["When you open Flet app in the browser its ",(0,i.jsx)(n.code,{children:"index.html"}),", Flutter engine, favicon, images and\nother web app resources are served by a web server.\nThese resources are bundled with ",(0,i.jsx)(n.code,{children:"flet"})," Python package.\nHowever, there are situations when you need to modify the contents of certain files to customize\nappearance of your app or its behavior, for example:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Favicon."}),"\n",(0,i.jsx)(n.li,{children:"App loading animation."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"manifest.json"})," with PWA details."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["You can specify ",(0,i.jsx)(n.code,{children:"assets_dir"})," in ",(0,i.jsx)(n.code,{children:"flet.app()"})," call to set the location of assets that should be available to the application.\n",(0,i.jsx)(n.code,{children:"assets_dir"})," should be a relative to your ",(0,i.jsx)(n.code,{children:"main.py"})," directory or an absolute path.\nDefault value for ",(0,i.jsx)(n.code,{children:"assets_dir"})," argument is ",(0,i.jsx)(n.code,{children:"assets"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"For example, consider the following program structure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"/assets\n   /images/my-image.png\nmain.py\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can access your images in the application as following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    page.add(ft.Image(src=f"/images/my-image.png"))\n\nft.app(main, assets_dir="assets")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"customizing-web-app",children:"Customizing web app"}),"\n",(0,i.jsx)(n.h4,{id:"favicon",children:"Favicon"}),"\n",(0,i.jsxs)(n.p,{children:["To override favicon with your own put ",(0,i.jsx)(n.code,{children:"favicon.png"})," file into the root of assets directory.\nIt should be a PNG image with the size of at least 32x32 pixels."]}),"\n",(0,i.jsx)(n.h4,{id:"loading-animation",children:"Loading animation"}),"\n",(0,i.jsxs)(n.p,{children:["To override Flet animation image put ",(0,i.jsx)(n.code,{children:"icons/loading-animation.png"})," image with your own app logo\ninto the the root of assets directory."]}),"\n",(0,i.jsx)(n.h4,{id:"pwa",children:"PWA"}),"\n",(0,i.jsx)(n.p,{children:"Progressive Web Apps, or PWAs, offer a way to turn app-like websites into website-like apps."}),"\n",(0,i.jsxs)(n.p,{children:["Check ",(0,i.jsx)(n.a,{href:"https://www.pcmag.com/how-to/how-to-use-progressive-web-apps",children:"PWAs Turn Websites Into Apps: Here's How"})," for the PWA introduction."]}),"\n",(0,i.jsxs)(n.p,{children:["Browsers that support PWA (",(0,i.jsx)(n.a,{href:"#pwa",children:"installation instructions"}),"):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Chrome"})," on all platforms"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Edge"})," on all platforms"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Firefox"})," on Android"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Safari"})," on iOS and iPadOS"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"The information in this section is based on the following sources (check them out for more details):"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps",children:"General information about PWAs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Manifest",children:"PWA manifests"})}),"\n"]})]}),"\n",(0,i.jsx)(n.h5,{id:"manifest",children:"Manifest"}),"\n",(0,i.jsxs)(n.p,{children:["You can change PWA's name, description, colors and other information in ",(0,i.jsx)(n.code,{children:"manifest.json"})," that must be put\nin the root of ",(0,i.jsx)(n.code,{children:"assets"})," directory."]}),"\n",(0,i.jsx)(n.p,{children:"Here are the links to the most common manifest items that you'd like to customize:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Manifest/name",children:(0,i.jsx)(n.code,{children:"name"})})," - the name of the web application as it is usually displayed to the user."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Manifest/short_name",children:(0,i.jsx)(n.code,{children:"short_name"})})," - the name of the web application displayed to the user if there is not enough space to display ",(0,i.jsx)(n.code,{children:"name"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Manifest/description",children:(0,i.jsx)(n.code,{children:"description"})})," - explains what the application does."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Manifest/theme_color",children:(0,i.jsx)(n.code,{children:"theme_color"})})," - defines the default theme color for the application."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Manifest/background_color",children:(0,i.jsx)(n.code,{children:"background_color"})})," - defines a placeholder background color for the application page to display before its stylesheet is loaded."]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"icons",children:"Icons"}),"\n",(0,i.jsxs)(n.p,{children:["Custom icons should be placed in ",(0,i.jsx)(n.code,{children:"assets/icons"})," directory:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"icon-192.png"}),", ",(0,i.jsx)(n.code,{children:"icon-512.png"})," - app icons displayed in Windows taskbar."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"icon-maskable-192.png"}),", ",(0,i.jsx)(n.code,{children:"icon-maskable-512.png"})," - app icons displayed in Android."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"apple-touch-icon-192.png"})," - app icon displayed in iOS."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"environment-variables",children:"Environment variables"}),"\n",(0,i.jsx)(n.p,{children:"Every aspect of web app hosting can be additionally controlled with environment variables:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_FORCE_WEB_SERVER"})," - ",(0,i.jsx)(n.code,{children:"true"})," to force running app as a web app. Automatically set on headless Linux hosts."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_SERVER_PORT"})," - TCP port to run app on. ",(0,i.jsx)(n.code,{children:"8000"})," if the program is running on a Linux server or ",(0,i.jsx)(n.code,{children:"FLET_FORCE_WEB_SERVER"})," is set; otherwise random port."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_SERVER_IP"})," - IP address to listen web app on, e.g. ",(0,i.jsx)(n.code,{children:"127.0.0.1"}),". Defaults to ",(0,i.jsx)(n.code,{children:"0.0.0.0"})," - bound to all server IPs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_ASSETS_DIR"}),' - absolute path to app "assets" directory.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_UPLOAD_DIR"}),' - absolute path to app "upload" directory.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_MAX_UPLOAD_SIZE"})," - max allowed size of uploaded file, in bytes. Unlimited if not specified."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_SECRET_KEY"})," - a secret key to sign temporary upload URLs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_WEB_APP_PATH"})," - a URL path after domain name to host web app under, e.g. ",(0,i.jsx)(n.code,{children:"/apps/myapp"}),". Defaults to ",(0,i.jsx)(n.code,{children:"/"})," - host\napp in the root."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_SESSION_TIMEOUT"})," - session lifetime, in seconds. Defaults to ",(0,i.jsx)(n.code,{children:"3600"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_OAUTH_STATE_TIMEOUT"})," - max allowed time to complete OAuth web flow, in seconds. Defaults to ",(0,i.jsx)(n.code,{children:"600"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_WEB_RENDERER"})," - Flutter rendering mode: ",(0,i.jsx)(n.code,{children:"canvaskit"})," (default), ",(0,i.jsx)(n.code,{children:"html"})," or ",(0,i.jsx)(n.code,{children:"auto"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_WEB_USE_COLOR_EMOJI"})," - ",(0,i.jsx)(n.code,{children:"true"}),", or ",(0,i.jsx)(n.code,{children:"True"})," or ",(0,i.jsx)(n.code,{children:"1"})," to load web font with colorful emojis."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_WEB_ROUTE_URL_STRATEGY"})," - ",(0,i.jsx)(n.code,{children:"path"})," (default) or ",(0,i.jsx)(n.code,{children:"hash"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_WEBSOCKET_HANDLER_ENDPOINT"})," - custom path for WebSocket handler. Defaults to ",(0,i.jsx)(n.code,{children:"/ws"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_UPLOAD_HANDLER_ENDPOINT"})," - custom path for upload handler. Defaults to ",(0,i.jsx)(n.code,{children:"/upload"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FLET_OAUTH_CALLBACK_HANDLER_ENDPOINT"})," - custom path for OAuth handler. Defaults to ",(0,i.jsx)(n.code,{children:"/oauth_callback"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"advanced-fastapi-scenarios",children:"Advanced FastAPI scenarios"}),"\n",(0,i.jsx)(n.h3,{id:"flet-fastapi-app",children:"Flet FastAPI app"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"flet.fastapi.app()"})," function creates a new FastAPI application to handle sessions with ",(0,i.jsx)(n.code,{children:"session_handler"}),"\nand mounts the following endpoints in the root of the app:"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"/ws"})," (WS) - WebSocket handler for the Flet app. It calls ",(0,i.jsx)(n.code,{children:"main()"})," function when a new WebSocket connection established and a new app session created."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"/upload"})," (PUT) - file uploads handler."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"/oauth_callback"})," (GET) - OAuth flow callback handler."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"/"})," (GET) - Flet app static files with SPA catch-all handler."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"flet.fastapi.app()"})," parameters:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"session_handler"})," (function or coroutine) - application entry point - a method called for newly connected user. Handler must have 1 parameter: ",(0,i.jsx)(n.code,{children:"page"})," - ",(0,i.jsx)(n.code,{children:"Page"})," instance."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"assets_dir"})," (str, optional) - an absolute path to app's assets directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_name"})," (str, optional) - PWA application name."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_short_name"})," (str, optional) - PWA application short name."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_description"})," (str, optional) - PWA application description."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"web_renderer"})," (WebRenderer) - web renderer defaulting to ",(0,i.jsx)(n.code,{children:"WebRenderer.CANVAS_KIT"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"use_color_emoji"})," (bool) - whether to load a font with color emoji. Default is ",(0,i.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"route_url_strategy"})," (str) - routing URL strategy: ",(0,i.jsx)(n.code,{children:"path"})," (default) or ",(0,i.jsx)(n.code,{children:"hash"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"upload_dir"})," (str) - an absolute path to a directory with uploaded files."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"max_upload_size"})," (str, int) - maximum size of a single upload, bytes. Unlimited if ",(0,i.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"secret_key"})," (str, optional) - secret key to sign and verify upload requests."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"session_timeout_seconds"})," (int, optional)- session lifetime, in seconds, after user disconnected."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"oauth_state_timeout_seconds"})," (int, optional) - OAuth state lifetime, in seconds, which is a maximum allowed time between starting OAuth flow and redirecting to OAuth callback URL."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"hosting-multiple-flet-apps-under-the-same-domain",children:"Hosting multiple Flet apps under the same domain"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import flet as ft\nimport flet.fastapi as flet_fastapi\n\n\nasync def root_main(page: ft.Page):\n    await page.add_async(ft.Text("This is root app!"))\n\n\nasync def sub_main(page: ft.Page):\n    await page.add_async(ft.Text("This is sub app!"))\n\n\napp = flet_fastapi.FastAPI()\n\n\napp.mount("/sub-app", flet_fastapi.app(sub_main))\napp.mount("/", flet_fastapi.app(root_main))\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Sub-apps must be mapped before the root Flet app as it configures catch-all ",(0,i.jsx)(n.code,{children:"index.html"})," for SPA."]}),"\n",(0,i.jsxs)(n.p,{children:["Run the app with ",(0,i.jsx)(n.code,{children:"uvicorn"})," and visit ",(0,i.jsx)(n.a,{href:"http://127.0.0.1:8000",children:"http://127.0.0.1:8000"})," and then ",(0,i.jsx)(n.a,{href:"http://127.0.0.1:8000/sub-app/",children:"http://127.0.0.1:8000/sub-app/"})," to see both Flet apps running."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Notice the trailing slash in ",(0,i.jsx)(n.code,{children:"/sub-app/"})," URL - without the slash the request will be routed to a root app."]})}),"\n",(0,i.jsx)(n.h3,{id:"adding-flet-to-the-existing-fastapi-app",children:"Adding Flet to the existing FastAPI app"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from contextlib import asynccontextmanager\n\nimport flet as ft\nimport flet.fastapi as flet_fastapi\nfrom fastapi import FastAPI\n\n@asynccontextmanager\nasync def lifespan(app: FastAPI):\n    await flet_fastapi.app_manager.start()\n    yield\n    await flet_fastapi.app_manager.shutdown()\n\napp = FastAPI(lifespan=lifespan)\n\nasync def main(page: ft.Page):\n    await page.add_async(ft.Text("Hello, Flet!"))\n\napp.mount("/flet-app", flet_fastapi.app(main))\n'})}),"\n",(0,i.jsxs)(n.p,{children:["When adding Flet app to the existing FastAPI app you need to call ",(0,i.jsx)(n.code,{children:"flet_fastapi.app_manager.start()"})," on app start and ",(0,i.jsx)(n.code,{children:"flet_fastapi.app_manager.shutdown()"})," on shutdown. Use the way that best suites you: lifespan (in the example above) or app events."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"app_manager.start()"})," method starts background tasks cleaning up expired sessions and OAuth flow states."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"app_manager.shutdown()"})," method removes any temporary files created by a Flet app."]}),"\n",(0,i.jsx)(n.h3,{id:"configuring-individual-flet-endpoints",children:"Configuring individual Flet endpoints"}),"\n",(0,i.jsx)(n.h4,{id:"static-files",children:"Static files"}),"\n",(0,i.jsx)(n.p,{children:"A FastAPI app to serve static Flet app files (index.html, manifest.json, Flutter JS app, etc.) and user assets."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from flet.fastapi import FastAPI, FletStaticFiles\n\napp = FastAPI()\n\n# mount to the root of web app\napp.mount(path="/", app=FletStaticFiles())\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Parameters of ",(0,i.jsx)(n.code,{children:"FletStaticFiles"})," constructor:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_mount_path"})," (str) - absolute URL of Flet app. Default is ",(0,i.jsx)(n.code,{children:"/"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"assets_dir"})," (str, optional) - an absolute path to app's assets directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_name"})," (str, optional) - PWA application name."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_short_name"})," (str, optional) - PWA application short name."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_description"})," (str, optional) - PWA application description."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"web_renderer"})," (WebRenderer) - web renderer defaulting to ",(0,i.jsx)(n.code,{children:"WebRenderer.CANVAS_KIT"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"use_color_emoji"})," (bool) - whether to load a font with color emoji. Default is ",(0,i.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"route_url_strategy"})," (str) - routing URL strategy: ",(0,i.jsx)(n.code,{children:"path"})," (default) or ",(0,i.jsx)(n.code,{children:"hash"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"websocket_endpoint_path"})," (str, optional) - absolute URL of Flet app WebSocket handler. Default is ",(0,i.jsx)(n.code,{children:"{app_mount_path}/ws"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"websocket-handler",children:"WebSocket handler"}),"\n",(0,i.jsx)(n.p,{children:"Handles WebSocket connections from Flet client app running in the browser. WebSocket channel is used to send events from a browser to a Flet backend code and receive page real-time incremential updates."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from flet.fastapi import FletApp\n\nasync def main(page: ft.Page):\n    await page.add_async(ft.Text("Hello, Flet!"))\n\n@app.websocket("/app1/ws")\nasync def flet_app(websocket: WebSocket):\n    await FletApp(main).handle(websocket)\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"session_handler"})," (Coroutine) - application entry point - an async method called for newly connected user. Handler coroutine must have 1 parameter: ",(0,i.jsx)(n.code,{children:"page"})," - ",(0,i.jsx)(n.code,{children:"Page"})," instance."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"session_timeout_seconds"})," (int, optional) - session lifetime, in seconds, after user disconnected."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"oauth_state_timeout_seconds"})," (int, optional) - OAuth state lifetime, in seconds, which is a maximum allowed time between starting OAuth flow and redirecting to OAuth callback URL."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"upload_endpoint_path"})," (str, optional) - absolute URL of upload endpoint, e.g. ",(0,i.jsx)(n.code,{children:"/upload"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"secret_key"})," (str, optional) - secret key to sign upload requests."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"uploads-handler",children:"Uploads handler"}),"\n",(0,i.jsxs)(n.p,{children:["Handles file uploads by ",(0,i.jsx)(n.a,{href:"/docs/controls/filepicker",children:"FilePicker"})," control. This endpoint is optional - if your app doesn't use ",(0,i.jsx)(n.a,{href:"/docs/controls/filepicker",children:"FilePicker"})," then it's not needed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from flet.fastapi import FletUpload\n\n@app.put("/upload")\nasync def flet_uploads(request: Request):\n    await FletUpload("/Users/feodor/Downloads/123").handle(request)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"oauth-callback-handler",children:"OAuth callback handler"}),"\n",(0,i.jsxs)(n.p,{children:["Handles OAuth flow callback requests. If your app doesn't use ",(0,i.jsx)(n.a,{href:"/docs/cookbook/authentication",children:"authentication"})," then\nthis endpoint is not needed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from flet.fastapi import FletOAuth\n\n@app.get("/oauth_callback")\nasync def flet_oauth(request: Request):\n    return await FletOAuth().handle(request)\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const a={},t=i.createContext(a);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);