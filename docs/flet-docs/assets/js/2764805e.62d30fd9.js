"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[39750],{72586:(e,t,c)=>{c.r(t),c.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>s});var a=c(74848),i=c(28453);const n={title:"HapticFeedback",sidebar_label:"HapticFeedback"},d=void 0,o={id:"controls/hapticfeedback",title:"HapticFeedback",description:"Allows access to the haptic feedback interface on the device.",source:"@site/docs/controls/hapticfeedback.md",sourceDirName:"controls",slug:"/controls/hapticfeedback",permalink:"/flet-docs/docs/controls/hapticfeedback",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/hapticfeedback.md",tags:[],version:"current",frontMatter:{title:"HapticFeedback",sidebar_label:"HapticFeedback"},sidebar:"docs",previous:{title:"GestureDetector",permalink:"/flet-docs/docs/controls/gesturedetector"},next:{title:"InteractiveViewer",permalink:"/flet-docs/docs/controls/interactiveviewer"}},l={},s=[{value:"Examples",id:"examples",level:2},{value:"Haptic feedback sample",id:"haptic-feedback-sample",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>heavy_impact()</code>",id:"heavy_impact",level:3},{value:"<code>light_impact()</code>",id:"light_impact",level:3},{value:"<code>medium_impact()</code>",id:"medium_impact",level:3},{value:"<code>vibrate()</code>",id:"vibrate",level:3}];function r(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Allows access to the haptic feedback interface on the device."}),"\n",(0,a.jsxs)(t.p,{children:["It is non-visual and should be added to ",(0,a.jsx)(t.code,{children:"page.overlay"})," list."]}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(t.h3,{id:"haptic-feedback-sample",children:"Haptic feedback sample"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    hf = ft.HapticFeedback()\n    page.overlay.append(hf)\n\n    page.add(\n        ft.ElevatedButton("Heavy impact", on_click=lambda _: hf.heavy_impact()),\n        ft.ElevatedButton("Medium impact", on_click=lambda _: hf.medium_impact()),\n        ft.ElevatedButton("Light impact", on_click=lambda _: hf.light_impact()),\n        ft.ElevatedButton("Vibrate", on_click=lambda _: hf.vibrate()),\n    )\n\nft.app(main)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.h3,{id:"heavy_impact",children:(0,a.jsx)(t.code,{children:"heavy_impact()"})}),"\n",(0,a.jsx)(t.p,{children:"Provides a haptic feedback corresponding a collision impact with a heavy mass."}),"\n",(0,a.jsx)(t.h3,{id:"light_impact",children:(0,a.jsx)(t.code,{children:"light_impact()"})}),"\n",(0,a.jsx)(t.p,{children:"Provides a haptic feedback corresponding a collision impact with a light mass."}),"\n",(0,a.jsx)(t.h3,{id:"medium_impact",children:(0,a.jsx)(t.code,{children:"medium_impact()"})}),"\n",(0,a.jsx)(t.p,{children:"Provides a haptic feedback corresponding a collision impact with a medium mass."}),"\n",(0,a.jsx)(t.h3,{id:"vibrate",children:(0,a.jsx)(t.code,{children:"vibrate()"})}),"\n",(0,a.jsx)(t.p,{children:"Provides vibration haptic feedback to the user for a short duration."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}},28453:(e,t,c)=>{c.d(t,{R:()=>d,x:()=>o});var a=c(96540);const i={},n=a.createContext(i);function d(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);