"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[66453],{65118:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(74848),l=t(28453);const i={title:"Creating Flet extension for existing Flutter package",sidebar_label:"User extensions"},o=void 0,s={id:"extend/user-extensions",title:"Creating Flet extension for existing Flutter package",description:"Introduction",source:"@site/docs/extend/user-extensions.md",sourceDirName:"extend",slug:"/extend/user-extensions",permalink:"/docs/flet-docs/docs/extend/user-extensions",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/extend/user-extensions.md",tags:[],version:"current",frontMatter:{title:"Creating Flet extension for existing Flutter package",sidebar_label:"User extensions"},sidebar:"docs",previous:{title:"Built-in extensions",permalink:"/docs/flet-docs/docs/extend/built-in-extensions"},next:{title:"Controls reference",permalink:"/docs/flet-docs/docs/controls"}},a={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Create Flet extension from template",id:"create-flet-extension-from-template",level:2},{value:"Integrate 3rd-party Flutter package",id:"integrate-3rd-party-flutter-package",level:2},{value:"Flet extension structure",id:"flet-extension-structure",level:2},{value:"Package",id:"package",level:3},{value:"Python",id:"python",level:4},{value:"flet_spinkit.py",id:"flet_spinkitpy",level:5},{value:"Flutter",id:"flutter",level:4},{value:"pubspec.yaml",id:"pubspecyaml",level:5},{value:"flet_spinkit.dart",id:"flet_spinkitdart",level:5},{value:"src/create_control.dart",id:"srccreate_controldart",level:5},{value:"src/flet_spinkit.dart",id:"srcflet_spinkitdart",level:5},{value:"Example app",id:"example-app",level:3},{value:"src/main.py",id:"srcmainpy",level:5},{value:"pyproject.toml",id:"pyprojecttoml",level:5},{value:"Customize properties",id:"customize-properties",level:2},{value:"Common properties",id:"common-properties",level:3},{value:"Control-specific properties",id:"control-specific-properties",level:3},{value:"Examples for different types of properties and events",id:"examples-for-different-types-of-properties-and-events",level:4},{value:"Enum properties",id:"enum-properties",level:5},{value:"Json properties",id:"json-properties",level:5},{value:"Children",id:"children",level:5},{value:"Events",id:"events",level:5},{value:"Examples",id:"examples",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:"While Flet controls leverage many built-in Flutter widgets, enabling the creation of complex applications, not all Flutter widgets or third-party packages can be directly supported by the Flet team or included within the core Flet framework."}),"\n",(0,r.jsxs)(n.p,{children:["To address this, the Flet framework provides an extensibility mechanism. This allows you to incorporate widgets and APIs from your own custom Flutter packages or ",(0,r.jsx)(n.a,{href:"https://pub.dev/packages?sort=popularity",children:"third-party libraries"})," directly into your Flet application."]}),"\n",(0,r.jsx)(n.p,{children:"In this guide, you will learn how to create Flet extension from template and then customize it to integrate 3rd-party Flutter package into your Flet app."}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.p,{children:["To integrate custom Flutter package into Flet you need to have basic understanding of how to create Flutter apps and packages in Dart language and have Flutter development environment configured. See ",(0,r.jsx)(n.a,{href:"https://docs.flutter.dev/get-started/install",children:"Flutter Getting Started"})," for more information about Flutter and Dart."]}),"\n",(0,r.jsx)(n.h2,{id:"create-flet-extension-from-template",children:"Create Flet extension from template"}),"\n",(0,r.jsxs)(n.p,{children:["Flet now makes it easy to create and build projects with your custom controls based on Flutter widgets or Flutter 3rd-party packages. In the example below, we will be creating a custom Flet extension based on the ",(0,r.jsx)(n.a,{href:"https://pub.dev/packages/flutter_spinkit",children:"flutter_spinkit"})," package."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create new virtual enviroment and ",(0,r.jsx)(n.a,{href:"/docs/getting-started/#python-venv-module",children:"install Flet"})," there."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create new Flet extension project from template:"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"flet create --template extension --project-name flet-spinkit\n"})}),"\n",(0,r.jsx)(n.p,{children:"A project with new FletSpinkit control will be created. The control is just a Flutter Text widget with text property, which we will customize later."}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Build your app."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Flet project created from extension template has ",(0,r.jsx)(n.code,{children:"examples/flet_spinkit_example"})," folder with the example app."]}),"\n",(0,r.jsxs)(n.p,{children:["When in the folder where your ",(0,r.jsx)(n.code,{children:"pyproject.toml"})," for the app is (",(0,r.jsx)(n.code,{children:"examples/flet_spinkit_example"}),"), run ",(0,r.jsx)(n.code,{children:"flet build"})," command, for example, for macos:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"flet build macos -v\n"})}),"\n",(0,r.jsx)(n.p,{children:"Open the app and see the new custom Flet Control:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"open build/macos/flet-spinkit-example.app\n"})}),"\n",(0,r.jsx)("img",{src:"/img/docs/extending-flet/example.png",className:"screenshot-30"}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Change your app."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Once the project was built for desktop once, you can make changes to your python files and run it without re-building."}),"\n",(0,r.jsx)(n.p,{children:"First, install dependencies from pyproject.toml:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pip install .\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now you can make changes to your example app main.py:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'import flet as ft\n\nfrom flet_spinkit import FletSpinkit\n\n\ndef main(page: ft.Page):\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    page.add(\n        ft.Container(\n            height=150,\n            width=300,\n            alignment=ft.alignment.center,\n            bgcolor=ft.Colors.PINK_200,\n            content=FletSpinkit(\n                tooltip="My new PINK FletSpinkit Control tooltip",\n                value="My new PINK FletSpinkit Flet Control",\n            ),\n        ),\n    )\n\n\nft.app(main)\n'})}),"\n",(0,r.jsx)(n.p,{children:"and run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"flet run\n"})}),"\n",(0,r.jsx)("img",{src:"/img/docs/extending-flet/example-pink.png",className:"screenshot-30"}),"\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsx)(n.li,{children:"Re-build your app."}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{title:"Known issue",type:"info",children:[(0,r.jsxs)(n.p,{children:["There is a ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/issues/4754",children:"known issue"})," that Flet would build with cached files and your changes will not be included. As a temporary solution, you need to clear cache before re-building:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pip cache purge\n"})})]}),"\n",(0,r.jsx)(n.p,{children:"When you make any changes to your package, you need to re-build:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pip cache purge\nflet build macos -v\n"})}),"\n",(0,r.jsx)(n.p,{children:"If you need to debug, run this command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"build/macos/flet-spinkit-example.app/Contents/MacOS/flet-spinkit-example --debug\n"})}),"\n",(0,r.jsx)(n.h2,{id:"integrate-3rd-party-flutter-package",children:"Integrate 3rd-party Flutter package"}),"\n",(0,r.jsxs)(n.p,{children:["For the example purposes we will be integrating ",(0,r.jsx)(n.a,{href:"https://pub.dev/packages/flutter_spinkit",children:"flutter_spinkit"})," package into our Flet app."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Add dependency."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Go to ",(0,r.jsx)(n.code,{children:"src/flutter/flet_spinkit"})," folder and run this command to add dependency to ",(0,r.jsx)(n.code,{children:"flutter_spinkit"})," to ",(0,r.jsx)(n.code,{children:"pubspec.yaml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"flutter pub add flutter_spinkit\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Read more information about using Flutter packages ",(0,r.jsx)(n.a,{href:"https://docs.flutter.dev/packages-and-plugins/using-packages",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["Modify ",(0,r.jsx)(n.code,{children:"dart"})," file."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.code,{children:"src/flutter/flet_spinkit/lib/src/flet_spinkit.dart"})," file, add import statement and replace Text widget with ",(0,r.jsx)(n.code,{children:"SpinKitRotatingCircle"})," widget:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:flet/flet.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_spinkit/flutter_spinkit.dart';\n\nclass FletSpinkitControl extends StatelessWidget {\n  final Control? parent;\n  final Control control;\n\n  const FletSpinkitControl({\n    super.key,\n    required this.parent,\n    required this.control,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    Widget myControl = SpinKitRotatingCircle(\n      color: Colors.red,\n      size: 100.0,\n    );\n\n\n    return constrainedControl(context, myControl, parent, control);\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Rebuild your example app."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Go to ",(0,r.jsx)(n.code,{children:"examples/flet_spinkit_example"}),", clear cache and rebuild your app:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pip cache purge\nflet build macos -v\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Run your app:"}),"\n"]}),"\n",(0,r.jsx)("img",{src:"/img/docs/extending-flet/spinkit1.gif",className:"screenshot-30"}),"\n",(0,r.jsx)(n.h2,{id:"flet-extension-structure",children:"Flet extension structure"}),"\n",(0,r.jsx)(n.p,{children:"After creating new Flet project from extension template, you will see the following folder structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 examples\n\u2502   \u2514\u2500\u2500 flet_spinkit_example\n\u2502       \u251c\u2500\u2500 README.md\n\u2502       \u251c\u2500\u2500 pyproject.toml\n\u2502       \u2514\u2500\u2500 src\n\u2502           \u2514\u2500\u2500 main.py\n\u251c\u2500\u2500 pyproject.toml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 flet_spinkit\n    \u2502   \u251c\u2500\u2500 __init__.py\n    \u2502   \u2514\u2500\u2500 flet_spinkit.py\n    \u2514\u2500\u2500 flutter\n        \u2514\u2500\u2500 flet_spinkit\n            \u251c\u2500\u2500 CHANGELOG.md\n            \u251c\u2500\u2500 LICENSE\n            \u251c\u2500\u2500 README.md\n            \u251c\u2500\u2500 lib\n            \u2502   \u251c\u2500\u2500 flet_spinkit.dart\n            \u2502   \u2514\u2500\u2500 src\n            \u2502       \u251c\u2500\u2500 create_control.dart\n            \u2502       \u2514\u2500\u2500 flet_spinkit.dart\n            \u2514\u2500\u2500 pubspec.yaml\n"})}),"\n",(0,r.jsx)(n.p,{children:"Flet extension consists of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"package"}),", located in ",(0,r.jsx)(n.code,{children:"src"})," folder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"example app"}),", located in ",(0,r.jsx)(n.code,{children:"examples/flet-spinkit_example"})," folder"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"package",children:"Package"}),"\n",(0,r.jsx)(n.p,{children:"Package is the component that will be used in your app. It contists of two parts: Python and Flutter."}),"\n",(0,r.jsx)(n.h4,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.h5,{id:"flet_spinkitpy",children:"flet_spinkit.py"}),"\n",(0,r.jsx)(n.p,{children:"Here you create Flet Python control - a Python class that you use in your Flet app."}),"\n",(0,r.jsxs)(n.p,{children:["The minumal requirements for this class is that it has to be inherited from Flet ",(0,r.jsx)(n.code,{children:"Control"})," and it has to\nhave ",(0,r.jsx)(n.code,{children:"_get_control_name"})," method that will return the control name. This name should be the same as ",(0,r.jsx)(n.code,{children:"args.control.type"}),"\nwe check in the ",(0,r.jsx)(n.code,{children:"create_control.dart"})," file."]}),"\n",(0,r.jsx)(n.h4,{id:"flutter",children:"Flutter"}),"\n",(0,r.jsx)(n.h5,{id:"pubspecyaml",children:"pubspec.yaml"}),"\n",(0,r.jsx)(n.p,{children:"A yaml file containing metadata that specifies the package's dependencies."}),"\n",(0,r.jsxs)(n.p,{children:["There is already a dependency to ",(0,r.jsx)(n.code,{children:"flet"})," created from template. You need to add there a dependency to Flutter package for which you are creating your extension."]}),"\n",(0,r.jsx)(n.h5,{id:"flet_spinkitdart",children:"flet_spinkit.dart"}),"\n",(0,r.jsx)(n.p,{children:"Two methods are exported:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"createControl"})," - called to create a widget that corresponds to a control on Python side."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ensureInitialized"})," - called once on Flet program start."]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"srccreate_controldart",children:"src/create_control.dart"}),"\n",(0,r.jsxs)(n.p,{children:["Creates Flutter widget based on control names returned by the Control's ",(0,r.jsx)(n.code,{children:"_get_control_name()"})," function. This mechanism iterates through all third-party packages and returns the first matching widget."]}),"\n",(0,r.jsx)(n.h5,{id:"srcflet_spinkitdart",children:"src/flet_spinkit.dart"}),"\n",(0,r.jsx)(n.p,{children:'Here you create Flutter "wrapper" widget that will build Flutter widget or API that you want to use in your Flet app.'}),"\n",(0,r.jsx)(n.p,{children:"Wrapper widget passes the state of Python control down to a Flutter widget, that will be displayed on a page, and provides an API to route events from Flutter widget back to Python control."}),"\n",(0,r.jsx)(n.h3,{id:"example-app",children:"Example app"}),"\n",(0,r.jsx)(n.h5,{id:"srcmainpy",children:"src/main.py"}),"\n",(0,r.jsx)(n.p,{children:"Python program that uses Flet Python control."}),"\n",(0,r.jsx)(n.h5,{id:"pyprojecttoml",children:"pyproject.toml"}),"\n",(0,r.jsx)(n.p,{children:"Here you specify dependency to your package, which can be:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Path dependency"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Absolute path to your Flet extension folder, for example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'dependencies = [\n  "flet-spinkit @ file:///Users/user-name/projects/flet-spinkit",\n  "flet>=0.26.0",\n]\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Git dependency"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Link to git repository, for example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'dependencies = [\n  "flet-ads @ git+https://github.com/flet-dev/flet-ads.git",\n  "flet>=0.26.0",\n]\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"PyPi dependency"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Name of the package published on pypi.org, for example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'dependencies = [\n  "flet-ads",\n  "flet>=0.26.0",\n]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"customize-properties",children:"Customize properties"}),"\n",(0,r.jsx)(n.p,{children:"In the example above, Spinkit control creates a hardcoded Flutter widget. Now let's customize its properties."}),"\n",(0,r.jsx)(n.h3,{id:"common-properties",children:"Common properties"}),"\n",(0,r.jsx)(n.p,{children:"Generally, there are two types of controls in Flet:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Visual controls that are added to the app/page surface, such as FletSpinkit."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Non-visual controls that can be:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"popup controls (dialogs, pickers, panels etc.)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["services that are added to ",(0,r.jsx)(n.code,{children:"overlay"}),", such as Video or Audio."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Flet ",(0,r.jsx)(n.code,{children:"Control"})," class has properties common for all controls such as ",(0,r.jsx)(n.code,{children:"visible"}),", ",(0,r.jsx)(n.code,{children:"opacity"})," and ",(0,r.jsx)(n.code,{children:"tooltip"}),", to name a few."]}),"\n",(0,r.jsxs)(n.p,{children:["Flet ",(0,r.jsx)(n.code,{children:"ConstrainedControl"})," class is inherited from ",(0,r.jsx)(n.code,{children:"Control"})," and has many additional properties such as ",(0,r.jsx)(n.code,{children:"top"})," and ",(0,r.jsx)(n.code,{children:"left"})," for its position within Stack and a bunch of animation properties."]}),"\n",(0,r.jsxs)(n.p,{children:["When creating non-visual control, your Python control should be inherited from ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet/src/flet/core/control.py",children:"'Control"}),". Then, to be able to use ",(0,r.jsx)(n.code,{children:"Control"})," properties in your app, you need to add them to the constructor of your Python Control. In its dart counterpart (",(0,r.jsx)(n.code,{children:"src/flet_spinkit.dart"}),") use ",(0,r.jsx)(n.code,{children:"baseControl()"})," to wrap your Flutter widget."]}),"\n",(0,r.jsxs)(n.p,{children:["When creating visual control, your Python control should be inherited from ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet/src/flet/core/constrained_control.py",children:(0,r.jsx)(n.code,{children:"ConstrainedControl"})}),". In its dart counterpart (",(0,r.jsx)(n.code,{children:"src/flet_spinkit.dart"}),") use ",(0,r.jsx)(n.code,{children:"constrainedControl()"}),"  to wrap your Flutter widget."]}),"\n",(0,r.jsxs)(n.p,{children:["Then, to be able to use ",(0,r.jsx)(n.code,{children:"Control"})," and ",(0,r.jsx)(n.code,{children:"ConstrainedControl"})," properties in your app, you need to add them to the constructor of your Python Control."]}),"\n",(0,r.jsxs)(n.p,{children:["See reference for the common Control properties ",(0,r.jsx)(n.a,{href:"https://flet.dev/docs/controls",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["If you have created your extension project from Flet extension template, your Python Control is already inherited from ",(0,r.jsx)(n.code,{children:"ConstrainedControl"})," and you can use its properties in your example app:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\nfrom flet_spinkit import FletSpinkit\n\n\ndef main(page: ft.Page):\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    page.add(\n        ft.Stack(\n            [\n                ft.Container(height=200, width=200, bgcolor=ft.Colors.BLUE_100),\n                FletSpinkit(opacity=0.5, tooltip="Spinkit tooltip", top=0, left=0),\n            ]\n        )\n    )\n\n\nft.app(main)\n'})}),"\n",(0,r.jsx)("img",{src:"/img/docs/extending-flet/spinkit2.gif",className:"screenshot-30"}),"\n",(0,r.jsx)(n.h3,{id:"control-specific-properties",children:"Control-specific properties"}),"\n",(0,r.jsxs)(n.p,{children:["Now that you have taken full advantage of the properties Flet ",(0,r.jsx)(n.code,{children:"Control"})," and ",(0,r.jsx)(n.code,{children:"ConstrainedControl"})," offer, let's define the properties that are specific to the new Control you are building."]}),"\n",(0,r.jsxs)(n.p,{children:["In the FletSpinkit example, let's define its ",(0,r.jsx)(n.code,{children:"color"})," and ",(0,r.jsx)(n.code,{children:"size"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In Python class, define new ",(0,r.jsx)(n.code,{children:"color"})," and ",(0,r.jsx)(n.code,{children:"size"})," properties:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from enum import Enum\nfrom typing import Any, Optional\n\nfrom flet.core.constrained_control import ConstrainedControl\nfrom flet.core.control import OptionalNumber\nfrom flet.core.types import ColorEnums, ColorValue\n\n\nclass FletSpinkit(ConstrainedControl):\n    """\n    FletSpinkit Control.\n    """\n\n    def __init__(\n        self,\n        #\n        # Control\n        #\n        opacity: OptionalNumber = None,\n        tooltip: Optional[str] = None,\n        visible: Optional[bool] = None,\n        data: Any = None,\n        #\n        # ConstrainedControl\n        #\n        left: OptionalNumber = None,\n        top: OptionalNumber = None,\n        right: OptionalNumber = None,\n        bottom: OptionalNumber = None,\n        #\n        # FletSpinkit specific\n        #\n        color: Optional[ColorValue] = None,\n        size: OptionalNumber = None,\n    ):\n        ConstrainedControl.__init__(\n            self,\n            tooltip=tooltip,\n            opacity=opacity,\n            visible=visible,\n            data=data,\n            left=left,\n            top=top,\n            right=right,\n            bottom=bottom,\n        )\n\n        self.color = color\n        self.size = size\n\n    def _get_control_name(self):\n        return "flet_spinkit"\n\n    # color\n    @property\n    def color(self) -> Optional[ColorValue]:\n        return self.__color\n\n    @color.setter\n    def color(self, value: Optional[ColorValue]):\n        self.__color = value\n        self._set_enum_attr("color", value, ColorEnums)\n\n    # size\n    @property\n    def size(self):\n        return self._get_attr("size")\n\n    @size.setter\n    def size(self, value):\n        self._set_attr("size", value)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.code,{children:"src/flet_spinkit.dart"})," file, use helper methods ",(0,r.jsx)(n.code,{children:"attrColor"})," and ",(0,r.jsx)(n.code,{children:"attrDouble"})," to access color and size values:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:flet/flet.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_spinkit/flutter_spinkit.dart';\n\nclass FletSpinkitControl extends StatelessWidget {\n  final Control? parent;\n  final Control control;\n\n  const FletSpinkitControl({\n    super.key,\n    required this.parent,\n    required this.control,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    var color = control.attrColor(\"color\", context);\n    var size = control.attrDouble(\"size\");\n    Widget myControl = SpinKitRotatingCircle(\n      color: color,\n      size: size ?? 100,\n    );\n\n\n    return constrainedControl(context, myControl, parent, control);\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"color"})," and ",(0,r.jsx)(n.code,{children:"size"})," properties in your app:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\nfrom flet_spinkit import FletSpinkit\n\n\ndef main(page: ft.Page):\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    page.add(\n        ft.Stack(\n            [\n                ft.Container(height=200, width=200, bgcolor=ft.Colors.BLUE_100),\n                FletSpinkit(\n                    opacity=0.5,\n                    tooltip="Spinkit tooltip",\n                    top=0,\n                    left=0,\n                    color=ft.Colors.YELLOW,\n                    size=150,\n                ),\n            ]\n        )\n    )\n\n\nft.app(main)\n'})}),"\n",(0,r.jsx)(n.p,{children:"Re-build and run:"}),"\n",(0,r.jsx)("img",{src:"/img/docs/extending-flet/spinkit3.gif",className:"screenshot-20"}),"\n",(0,r.jsxs)(n.p,{children:["You can find source code for this example ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet-spinkit",children:"here"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"examples-for-different-types-of-properties-and-events",children:"Examples for different types of properties and events"}),"\n",(0,r.jsx)(n.h5,{id:"enum-properties",children:"Enum properties"}),"\n",(0,r.jsxs)(n.p,{children:["For example, ",(0,r.jsx)(n.code,{children:"clip_behaviour"})," for ",(0,r.jsx)(n.code,{children:"AppBar"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet/src/flet/core/app_bar.py",children:"Python"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# clip_behavior\n@property\ndef clip_behavior(self) -> Optional[ClipBehavior]:\n    return self._get_attr("clipBehavior")\n\n@clip_behavior.setter\ndef clip_behavior(self, value: Optional[ClipBehavior]):\n    self._set_attr(\n        "clipBehavior",\n        value.value if isinstance(value, ClipBehavior) else value,\n    )\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/packages/flet/lib/src/controls/app_bar.dart",children:"Dart"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'var clipBehavior = Clip.values.firstWhere(\n    (e) =>\n        e.name.toLowerCase() ==\n        widget.control.attrString("clipBehavior", "")!.toLowerCase(),\n    orElse: () => Clip.none);\n'})}),"\n",(0,r.jsx)(n.h5,{id:"json-properties",children:"Json properties"}),"\n",(0,r.jsxs)(n.p,{children:["For example, ",(0,r.jsx)(n.code,{children:"shape"})," property for ",(0,r.jsx)(n.code,{children:"Card"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet/src/flet/core/card.py",children:"Python"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def before_update(self):\n    super().before_update()\n    self._set_attr_json("shape", self.__shape)\n\n# shape\n@property\ndef shape(self) -> Optional[OutlinedBorder]:\n    return self.__shape\n\n@shape.setter\ndef shape(self, value: Optional[OutlinedBorder]):\n    self.__shape = value\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/packages/flet/lib/src/controls/card.dart",children:"Dart"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'var shape = parseOutlinedBorder(control, "shape")\n'})}),"\n",(0,r.jsx)(n.h5,{id:"children",children:"Children"}),"\n",(0,r.jsxs)(n.p,{children:["For example, ",(0,r.jsx)(n.code,{children:"content"})," for ",(0,r.jsx)(n.code,{children:"AlertDialog"}),":"]}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet/src/flet/core/alert_dialog.py",children:"Python"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'    def _get_children(self):\n        children = []\n        if self.__content:\n            self.__content._set_attr_internal("n", "content")\n            children.append(self.__content)\n        return children\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/packages/flet/lib/src/controls/alert_dialog.dart",children:"Dart"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'    var contentCtrls =\n        widget.children.where((c) => c.name == "content" && c.isVisible);\n'})}),"\n",(0,r.jsx)(n.h5,{id:"events",children:"Events"}),"\n",(0,r.jsxs)(n.p,{children:["For example, ",(0,r.jsx)(n.code,{children:"on_click"})," event for ",(0,r.jsx)(n.code,{children:"ElevatedButton"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet/src/flet/core/elevated_button.py",children:"Python"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# on_click\n@property\ndef on_click(self):\n    return self._get_event_handler("click")\n\n@on_click.setter\ndef on_click(self, handler):\n    self._add_event_handler("click", handler)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/packages/flet/lib/src/controls/elevated_button.dart",children:"Dart"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'Function()? onPressed = !disabled\n    ? () {\n        debugPrint("Button ${widget.control.id} clicked!");\n        if (url != "") {\n        openWebBrowser(url,\n            webWindowName: widget.control.attrString("urlTarget"));\n        }\n        widget.backend.triggerControlEvent(widget.control.id, "click");\n    }\n    : null;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(n.p,{children:["Flet has controls that are implemented as ",(0,r.jsx)(n.a,{href:"/docs/extend/built-in-extensions",children:"built-in extensions"})," and could serve as a starting point for your own controls."]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(96540);const l={},i=r.createContext(l);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);