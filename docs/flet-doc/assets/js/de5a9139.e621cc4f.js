"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[12034],{82087:(e,l,i)=>{i.r(l),i.d(l,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>t});var n=i(74848),o=i(28453);const s={title:"File picker and uploads",sidebar_label:"File picker and uploads"},r=void 0,a={id:"cookbook/file-picker-and-uploads",title:"File picker and uploads",description:"File picker control opens a native OS dialog for selecting files and directories.",source:"@site/docs/cookbook/file-picker-and-uploads.md",sourceDirName:"cookbook",slug:"/cookbook/file-picker-and-uploads",permalink:"/docs/flet-doc/docs/cookbook/file-picker-and-uploads",draft:!1,unlisted:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/cookbook/file-picker-and-uploads.md",tags:[],version:"current",frontMatter:{title:"File picker and uploads",sidebar_label:"File picker and uploads"},sidebar:"docs",previous:{title:"Drag and drop",permalink:"/docs/flet-doc/docs/cookbook/drag-and-drop"},next:{title:"Animations",permalink:"/docs/flet-doc/docs/cookbook/animations"}},d={},t=[{value:"Using file picker in your app",id:"using-file-picker-in-your-app",level:2},{value:"Uploading files",id:"uploading-files",level:2},{value:"Upload storage",id:"upload-storage",level:3},{value:"Upload progress",id:"upload-progress",level:3}];function c(e){const l={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.a,{href:"/docs/controls/filepicker",children:"File picker"})," control opens a native OS dialog for selecting files and directories."]}),"\n",(0,n.jsx)(l.p,{children:"It works on all platforms: Web, macOS, Window, Linux, iOS and Android."}),"\n",(0,n.jsx)("img",{src:"/docs/flet-doc/img/docs/controls/file-picker/file-picker-all-modes-demo.png",className:"screenshot-80"}),"\n",(0,n.jsxs)(l.p,{children:["Check out ",(0,n.jsx)(l.a,{href:"https://github.com/flet-dev/examples/blob/main/python/controls/file-picker/file-picker-all-modes.py",children:"source code of the demo above"}),"."]}),"\n",(0,n.jsx)(l.p,{children:"File picker allows opening three dialogs:"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.strong,{children:"Pick files"})," - one or multiple, any files or only specific types."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.strong,{children:"Save file"})," - choose directory and file name."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.strong,{children:"Get directory"})," - select directory."]}),"\n"]}),"\n",(0,n.jsx)(l.p,{children:"When running Flet app in a browser only \"Pick files\" option is available and it's used for uploads only as it, obviously, doesn't return a full path to a selected file."}),"\n",(0,n.jsx)(l.p,{children:"Where file picker really shines is a desktop! All three dialogs return full paths to selected files and directories - great assistance to your users!"}),"\n",(0,n.jsxs)(l.admonition,{type:"info",children:[(0,n.jsxs)(l.p,{children:["In Linux, the FilePicker control depends on ",(0,n.jsx)(l.a,{href:"https://help.gnome.org/users/zenity/stable/",children:"Zenity"}),"  when running Flet as an app. This is not a requirement when running Flet in a browser."]}),(0,n.jsx)(l.p,{children:"To install Zenity on Ubuntu/Debian run the following commands:"}),(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-bash",children:"sudo apt-get install zenity\n"})})]}),"\n",(0,n.jsx)(l.h2,{id:"using-file-picker-in-your-app",children:"Using file picker in your app"}),"\n",(0,n.jsxs)(l.p,{children:["It is recommended to add file picker to ",(0,n.jsx)(l.a,{href:"/docs/controls/page#overlay",children:(0,n.jsx)(l.code,{children:"page.overlay.controls"})})," collection, so it doesn't affect the layout of your app. Despite file picker has 0x0 size it is still considered as a control when put into ",(0,n.jsx)(l.code,{children:"Row"})," or ",(0,n.jsx)(l.code,{children:"Column"}),"."]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:"import flet as ft\n\nfile_picker = ft.FilePicker()\npage.overlay.append(file_picker)\npage.update()\n"})}),"\n",(0,n.jsx)(l.p,{children:"To open file picker dialog call one of the three methods:"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.code,{children:"pick_files()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.code,{children:"save_file()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.code,{children:"get_directory_path()"})}),"\n"]}),"\n",(0,n.jsx)(l.p,{children:"Lambda works pretty nice for that:"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'ft.ElevatedButton("Choose files...",\n    on_click=lambda _: file_picker.pick_files(allow_multiple=True))\n'})}),"\n",(0,n.jsxs)(l.p,{children:["When dialog is closed ",(0,n.jsx)(l.code,{children:"FilePicker.on_result"})," event handler is called which event object has one of the following properties set:"]}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"files"}),' - "Pick files" dialog only, a list of selected files or ',(0,n.jsx)(l.code,{children:"None"})," if dialog was cancelled."]}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"path"}),' - "Save file" and "Get directory" dialogs, a full path to a file or directory or ',(0,n.jsx)(l.code,{children:"None"})," if dialog was cancelled."]}),"\n"]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'import flet as ft\n\ndef on_dialog_result(e: ft.FilePickerResultEvent):\n    print("Selected files:", e.files)\n    print("Selected file or directory:", e.path)\n\nfile_picker = ft.FilePicker(on_result=on_dialog_result)\n'})}),"\n",(0,n.jsxs)(l.p,{children:["The last result is always available in ",(0,n.jsx)(l.code,{children:"FilePicker.result"})," property."]}),"\n",(0,n.jsxs)(l.p,{children:["Check ",(0,n.jsx)(l.a,{href:"/docs/controls/filepicker",children:"File picker"})," control docs for all available dialog methods and their parameters."]}),"\n",(0,n.jsx)(l.h2,{id:"uploading-files",children:"Uploading files"}),"\n",(0,n.jsx)(l.p,{children:"File picker has built-in upload capabilities that work on all platforms and the web."}),"\n",(0,n.jsxs)(l.p,{children:["To upload one or more files you should call ",(0,n.jsx)(l.code,{children:"FilePicker.pick_files()"})," first.\nWhen the files are selected by the user they are not automatically uploaded anywhere, but instead their references are kept in the file picker state."]}),"\n",(0,n.jsxs)(l.p,{children:["To perform an actual upload you should call ",(0,n.jsx)(l.code,{children:"FilePicker.upload()"})," method and pass the list of files that need to be uploaded along with their upload URLs and upload method (",(0,n.jsx)(l.code,{children:"PUT"})," or ",(0,n.jsx)(l.code,{children:"POST"}),"):"]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'import flet as ft\n\ndef upload_files(e):\n    upload_list = []\n    if file_picker.result != None and file_picker.result.files != None:\n        for f in file_picker.result.files:\n            upload_list.append(\n                FilePickerUploadFile(\n                    f.name,\n                    upload_url=page.get_upload_url(f.name, 600),\n                )\n            )\n        file_picker.upload(upload_list)\n\nft.ElevatedButton("Upload", on_click=upload_files)\n'})}),"\n",(0,n.jsxs)(l.admonition,{type:"note",children:[(0,n.jsxs)(l.p,{children:["If you need to separate uploads for each user you can specify a filename prepended with any number of directories in ",(0,n.jsx)(l.code,{children:"page.get_upload_url()"})," call, for example:"]}),(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'upload_url = page.get_upload_url(f"/{username}/pictures/{f.name}", 600)\n'})}),(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.code,{children:"/{username}/pictures"})," directories will be automatically created inside ",(0,n.jsx)(l.code,{children:"upload_dir"})," if not exist."]})]}),"\n",(0,n.jsx)(l.h3,{id:"upload-storage",children:"Upload storage"}),"\n",(0,n.jsxs)(l.p,{children:["Notice the usage of ",(0,n.jsx)(l.code,{children:"page.get_upload_url()"})," method - it generates a presigned upload URL for Flet's internal upload storage."]}),"\n",(0,n.jsxs)(l.admonition,{title:"Use any storage for file uploads",type:"note",children:[(0,n.jsxs)(l.p,{children:["You can ",(0,n.jsx)(l.a,{href:"https://boto3.amazonaws.com/v1/documentation/api/latest/guide/s3-presigned-urls.html#generating-a-presigned-url-to-upload-a-file",children:"generate presigned upload URL"})," for AWS S3 storage using boto3 library."]}),(0,n.jsxs)(l.p,{children:["The same technique should work for ",(0,n.jsx)(l.a,{href:"https://wasabi.com/",children:"Wasabi"}),", ",(0,n.jsx)(l.a,{href:"https://www.backblaze.com/",children:"Backblaze"}),", ",(0,n.jsx)(l.a,{href:"https://min.io/",children:"MinIO"})," and any other  storage providers with S3-compatible API."]})]}),"\n",(0,n.jsxs)(l.p,{children:["To enable Flet saving uploaded files to a directory provide full or relative path to that directory in ",(0,n.jsx)(l.code,{children:"flet.app()"})," call:"]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'ft.app(main, upload_dir="uploads")\n'})}),"\n",(0,n.jsx)(l.p,{children:'You can even put uploads inside "assets" directory, so uploaded files, e.g. pictures, docs or other media, can be accessed from a Flet client right away:'}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'ft.app(main, assets_dir="assets", upload_dir="assets/uploads")\n'})}),"\n",(0,n.jsx)(l.p,{children:"and somewhere in your app you can display uploaded picture with:"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-python",children:'page.add(ft.Image(src="/uploads/<some-uploaded-picture.png>"))\n'})}),"\n",(0,n.jsx)(l.h3,{id:"upload-progress",children:"Upload progress"}),"\n",(0,n.jsxs)(l.p,{children:["Once ",(0,n.jsx)(l.code,{children:"FilePicker.upload()"})," method is called Flet client asynchronously starts uploading selected files one-by-one and reports the progress via ",(0,n.jsx)(l.code,{children:"FilePicker.on_upload"})," callback."]}),"\n",(0,n.jsxs)(l.p,{children:["Event object of ",(0,n.jsx)(l.code,{children:"on_upload"})," event is an instance of ",(0,n.jsx)(l.code,{children:"FilePickerUploadEvent"})," class with the following fields:"]}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.code,{children:"file_name"})}),"\n",(0,n.jsxs)(l.li,{children:[(0,n.jsx)(l.code,{children:"progress"})," - a value from ",(0,n.jsx)(l.code,{children:"0.0"})," to ",(0,n.jsx)(l.code,{children:"1.0"}),"."]}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.code,{children:"error"})}),"\n"]}),"\n",(0,n.jsxs)(l.p,{children:["The callback is called at least twice for every uploaded file: with ",(0,n.jsx)(l.code,{children:"0"})," progress before upload begins and with ",(0,n.jsx)(l.code,{children:"1.0"})," progress when upload is finished. For files larger than 1 MB a progress is additionally reported for every 10% uploaded."]}),"\n",(0,n.jsxs)(l.p,{children:["Check that ",(0,n.jsx)(l.a,{href:"https://github.com/flet-dev/examples/blob/main/python/controls/file-picker/file-picker-upload-progress.py",children:"example"})," demonstrating multiple file uploads:"]}),"\n",(0,n.jsx)("img",{src:"/docs/flet-doc/img/docs/controls/file-picker/file-picker-multiple-uploads.png",className:"screenshot-40"}),"\n",(0,n.jsxs)(l.p,{children:["See ",(0,n.jsx)(l.a,{href:"/docs/controls/filepicker",children:"File picker"})," control docs for all its properties and examples."]})]})}function p(e={}){const{wrapper:l}={...(0,o.R)(),...e.components};return l?(0,n.jsx)(l,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,l,i)=>{i.d(l,{R:()=>r,x:()=>a});var n=i(96540);const o={},s=n.createContext(o);function r(e){const l=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function a(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(s.Provider,{value:l},e.children)}}}]);